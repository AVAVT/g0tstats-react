{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Statistics/SideBar/SideBar.jsx","OGSApi/OGSApi.js","Data/Charts/chartActions.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/Charts/ChartList.js","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataSourceReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["rankNumberToKyuDan","rank","Header","pageTitle","this","props","player","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","SearchBox","state","updateSearchUser","event","_this","setState","target","value","submit","preventDefault","history","push","document","activeElement","blur","onSubmit","onChange","name","type","required","placeholder","withRouter","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","index","key","onClick","e","Scrollspy_default","items","map","currentClassName","SideBar","navi","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","chartsData","length","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","$","get","configs","OGS_API_ROOT","done","res","results","id","fail","err","status","fetchUserDataById","fetchGamePage","playerId","url","undefined","minDate","Date","maxDate","chooseChartDataTimeRange","arguments","from","to","dispatch","getState","updateChartDataSource","games","filter","game","date","ended","newData","payload","fetchGames","Object","asyncToGenerator","regenerator_default","mark","_callee","fetching","promise","data","fetchingPage","fetchingTotalPage","_promise","wrap","_context","prev","next","cancel","fetchGamesStart","sent","apply","toConsumableArray","Math","ceil","count","fetchGamesProgress","fetchGamesSuccess","t0","fetchGamesFailure","toString","stop","_x","_x2","_ref2","error","fetchPlayerStart","fetchPlayerSuccess","fetchPlayerFailure","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","width","height","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","fill","fetchError","isPlayerWin","players","black","black_lost","white","white_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","floor","result","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","time_per_move","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","k","opponent","ranking","related","detail","hasOwnProperty","averageGamePerOpponent","toFixed","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","color","legend","position","textStyle","fontName","fontSize","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","sizes","chartData5","TimeSettingsChart","times","OpponentChart","opponentsInfo","weakestBarRate","strongestBarRate","userBarRate","weakestLegendStyle","marginLeft","strongestLegendStyle","weakestDisp","OGS_ROOT","style","left","img","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","gameHref","rel","data-toggle","data-placement","moment","format","MiscChart","chartData","ChartList","createGameData","lostGames","loseCount","currentGame","rankedGames","ranked","unrankedGames","evenGames","handicap","tournamentGames","tournament","uniqueTournaments","indexOf","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","Charts_OpponentChart","Charts_MiscChart","Statistics","animate","scrollTop","offset","getPlayerData","nextProps","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","userIdPromise","userId","userDataPromise","userData","parseInt","registrationDate","registration_date","fetchPlayer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","params","exact","Boolean","window","location","hostname","initialState","reducer","objectSpread","fetchFailure","start","end","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c1b8f3b.chunk.js","sourcesContent":["export const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 28)\r\n    return (28 - rank) + \"k\";\r\n  else\r\n    return (rank - 27) + \"d\";\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { rankNumberToKyuDan } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${rankNumberToKyuDan(this.props.player.rank)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}g0tstats`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n          <h1 className=\"page_title\">{pageTitle}</h1>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history : PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username : \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username : event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.history.push(`/user/${this.state.username}`)\r\n\r\n    this.setState({\r\n      username : ''\r\n    });\r\n\r\n    if(document.activeElement){\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"input-group\">\r\n          <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" required placeholder=\"Username or ID\" className=\"form-control\" />\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">g0t Stats?</button>\r\n          </span>\r\n        </div>\r\n        <small className=\"tip help-block\"><em>*Tip: mouse over/tap on a chart to see more info.</em></small>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Total games played on OGS\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"ranked_games_stats\", \"Ranked games\"],\r\n  [\"unranked_games_stats\", \"Unranked games\"],\r\n  [\"even_games_stats\", \"Even games\"],\r\n  [\"tournament_games_stats\", \"Performance in tournaments\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous statistics\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool\r\n  }\r\n\r\n  render() {\r\n    const navi = this.props.showQuickLinks ? (\r\n      <div className=\"navi hidden-sm hidden-xs\">\r\n        <hr />\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n\r\n          {navi}\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.length > 0 })\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import $ from 'jquery';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      $.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .done(function (res) {\r\n          if (res.results.length > 0) {\r\n            resolve(res.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .fail(function (err) {\r\n          reject(`Error connecting to OGS server. <strong>Error code: ${err.status}</strong>. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    $.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .done(function (res) {\r\n        resolve(res);\r\n      })\r\n      .fail(function (err) {\r\n        reject(`Error connecting to OGS server. <strong>Error code: ${err.status}</strong>. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    $.get(url)\r\n      .done(function (res) {\r\n        resolve(res);\r\n      })\r\n      .fail(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","export const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const chooseChartDataTimeRange = ({ from, to } = { from: minDate, to: maxDate }) => (dispatch, getState) => {\r\n  dispatch(\r\n    updateChartDataSource(\r\n      getState().games.results\r\n        .filter(game => {\r\n          const date = new Date(game.ended);\r\n          return date >= from && date <= to;\r\n        })\r\n    )\r\n  )\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { chooseChartDataTimeRange } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nexport const fetchGames = (playerId) => async (dispatch, getState) => {\r\n  const fetching = getState().games.fetching;\r\n  if (fetching) fetching.cancel();\r\n\r\n  try {\r\n    let games = [];\r\n\r\n    let promise = fetchGamePage(playerId);\r\n    dispatch(fetchGamesStart(promise));\r\n    let data = await promise;\r\n\r\n    games.push(...data.results);\r\n\r\n    let fetchingPage = 0;\r\n    const fetchingTotalPage = Math.ceil(data.count / 50);\r\n\r\n    while (data.next) {\r\n      fetchingPage++;\r\n      let promise = fetchGamePage(playerId, data.next);\r\n      dispatch(fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      games.push(...data.results);\r\n    }\r\n    dispatch(fetchGamesSuccess({ results: games }));\r\n  }\r\n  catch (error) {\r\n    dispatch(fetchGamesFailure(error.toString()))\r\n  }\r\n\r\n  dispatch(chooseChartDataTimeRange());\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetching = getState().player.fetching;\r\n  if (fetching) fetching.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    dispatch(fetchPlayerFailure(error))\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <line className=\"hrline\" x1=\"0\" y1=\"71.5\" x2=\"142\" y2=\"71.5\" stroke=\"#f8f8ff\" strokeWidth=\"1\" />\r\n          <line className=\"vrline\" x1=\"71.5\" y1=\"0\" x2=\"71.5\" y2=\"142\" stroke=\"#f8f8ff\" strokeWidth=\"1\" />\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","function computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeOpponentsInfo(games, playerId) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { rank: 0 };\r\n\r\n  games.forEach(game => {\r\n    let opponent = game.players.black.id === playerId ? game.players.white : game.players.black;\r\n\r\n    if (isPlayerWin(game, playerId) && opponent.ranking > strongestDefeated.rank) {\r\n      strongestDefeated = {\r\n        id: opponent.id,\r\n        username: opponent.username,\r\n        rank: opponent.ranking,\r\n        url: game.related.detail.split(\"games/\")[1],\r\n        date: game.ended\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        id: opponent.id,\r\n        username: opponent.username,\r\n        rank: opponent.ranking,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponent.ranking > strongestOpp.rank) {\r\n      strongestOpp = {\r\n        id: opponent.id,\r\n        username: opponent.username,\r\n        rank: opponent.ranking\r\n      };\r\n    }\r\n\r\n    if (opponent.ranking < weakestOpp.rank) {\r\n      weakestOpp = {\r\n        id: opponent.id,\r\n        username: opponent.username,\r\n        rank: opponent.ranking\r\n      };\r\n    }\r\n  });\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  if ((game.players.black.id === playerId && game.black_lost)\r\n    || (game.players.white.id === playerId && game.white_lost)) {\r\n    return false;\r\n  }\r\n  else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = (game.players.black.id === distributions.id && game.white_lost) || (game.players.white.id === distributions.id && game.black_lost);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  isPlayerWin\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Games opponent wins', `Games ${this.props.player.username} wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport moment from 'moment';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { rankNumberToKyuDan } from \"../../Data/utils\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, gamesData.playerId);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = opponentsInfo.weakestOpp.rank - 5;\r\n    const strongestBarRate = opponentsInfo.strongestOpp.rank - 5;\r\n    const userBarRate = this.props.player.rank - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestLegendStyle: { marginLeft: `${weakestBarRate * 3.03030303}%` },\r\n      strongestLegendStyle: { marginLeft: `${(strongestBarRate - weakestBarRate) * 3.03030303}%` },\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${rankNumberToKyuDan(opponentsInfo.weakestOpp.rank)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${rankNumberToKyuDan(this.props.player.rank)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${rankNumberToKyuDan(opponentsInfo.strongestOpp.rank)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.mostPlayed.id}/${opponentsInfo.mostPlayed.username}`,\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.mostPlayed.id}/icon?size=32`,\r\n        username: `${opponentsInfo.mostPlayed.username} (${rankNumberToKyuDan(opponentsInfo.mostPlayed.rank)})`,\r\n        games: opponentsInfo.mostPlayed.games\r\n      },\r\n      strongestDefeatedDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestDefeated.id}/${opponentsInfo.strongestDefeated.username}`,\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestDefeated.id}/icon?size=32`,\r\n        username: `${opponentsInfo.strongestDefeated.username} (${rankNumberToKyuDan(opponentsInfo.strongestDefeated.rank)})`,\r\n        date: opponentsInfo.strongestDefeated.date,\r\n        gameHref: `http://online-go.com/game/${opponentsInfo.strongestDefeated.url}`\r\n      },\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestLegendStyle,\r\n      strongestLegendStyle,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestLegendStyle}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestLegendStyle}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with:\r\n                {' '}\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={mostPlayedDisp.href}>\r\n                  <img className=\"img-20\" src={mostPlayedDisp.img} alt={mostPlayedDisp.username} />\r\n                  {' '}\r\n                  {mostPlayedDisp.username}\r\n                </a>\r\n                {' '}\r\n                in {mostPlayedDisp.games} games.\r\n              </li>\r\n\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                (<li>\r\n                  Scored a triumphant victory against\r\n                {' '}\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href={strongestDefeatedDisp.href}>\r\n                    <img className=\"img-20\" src={strongestDefeatedDisp.img} alt={strongestDefeatedDisp.username} />\r\n                    {' '}\r\n                    {strongestDefeatedDisp.username}\r\n                  </a>\r\n                  {' '}\r\n                  on <a href={strongestDefeatedDisp.gameHref} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{moment(strongestDefeatedDisp.date).format('MMM DD, YYYY')}</a>.\r\n              </li>)\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n\r\n  }\r\n\r\n  render() {\r\n    const chartData = this.generateChartData(this.props.gamesData);\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Activities in the past 15 days</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    chartsData: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const gamesData = this.createGameData(this.props.chartsData);\r\n\r\n    const lostGames = gamesData.games.reduce((loseCount, currentGame) => {\r\n      if (!Analyzer.isPlayerWin(currentGame, this.props.player.id)) {\r\n        return loseCount + 1;\r\n      }\r\n      else {\r\n        return loseCount;\r\n      }\r\n    }, 0);\r\n\r\n    const rankedGames = gamesData.games.filter(game => game.ranked);\r\n    const unrankedGames = gamesData.games.filter(game => !game.ranked);\r\n    const evenGames = gamesData.games.filter(game => game.handicap === 0);\r\n    const tournamentGames = gamesData.games.filter(game => game.tournament !== null);\r\n    const uniqueTournaments = tournamentGames.reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []);\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Total games played on OGS: ${gamesData.games.length}`}\r\n              id={\"total_games_stats\"}\r\n              gamesData={gamesData}\r\n              footer={\r\n                lostGames >= 50 ? (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xs-12\">\r\n                      <p className=\"gratz\">\r\n                        Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <ResultDistributionChart\r\n              title={`Game results distribution`}\r\n              id={\"game_results\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          rankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Ranked Games: ${rankedGames.length}`}\r\n              id={\"ranked_games_stats\"}\r\n              gamesData={this.createGameData(rankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          unrankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Unranked Games: ${unrankedGames.length}`}\r\n              id={\"unranked_games_stats\"}\r\n              gamesData={this.createGameData(unrankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          evenGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Even Games: ${evenGames.length}`}\r\n              id={\"even_games_stats\"}\r\n              gamesData={this.createGameData(evenGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          tournamentGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Participated in ${uniqueTournaments.length} tournaments`}\r\n              id={\"tournament_games_stats\"}\r\n              gamesData={this.createGameData(tournamentGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <OpponentChart\r\n              title={`Number of opponents faced`}\r\n              id={\"opponents_stats\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <MiscChart\r\n              title={`Miscellaneous statistics`}\r\n              id={\"misc_stats\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, player }) => ({ chartsData, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport $ from \"jquery\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    $('html,body').animate({ scrollTop: $(\"#\" + id).offset().top }, 'fast');\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user !== this.props.user) {\r\n      this.props.getPlayerData(nextProps.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games, chartsData }) => ({\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: chartsData.length > 0\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\"\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchFailure: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchFailure: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: false,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 1,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n      start: new Date(payload.results.length ? payload.results[payload.results.length - 1].ended : minDate),\r\n      end: new Date(payload.results.length ? payload.results[0].ended : maxDate),\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START } from \"../Games/gameActions\";\r\n\r\nconst initialState = []\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return payload;\r\n    case FETCH_GAMES_START: return initialState;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataSourceReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}