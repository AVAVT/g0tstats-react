{"version":3,"sources":["Shared/utils.js","WebApp/Header/Header.jsx","WebApp/Welcome.jsx","Shared/constants.js","Redux/Charts/chartActions.js","Redux/promiseUtils.js","Redux/Games/gameActions.js","Redux/Player/playerActions.js","WebApp/SideBar/SearchBox.jsx","WebApp/SideBar/QuickLinks.jsx","Shared/Components/LoadingIcon/LoadingIcon.jsx","WebApp/SideBar/SideBar.jsx","WebApp/LoadingUser/LoadingUser.js","WebApp/Charts/WinLoseChart.js","WebApp/Charts/ResultDistributionChart.js","WebApp/Charts/BoardSizesChart.js","WebApp/Charts/TimeSettingsChart.js","Shared/Components/ExtLink.jsx","Shared/Components/PlayerLink.jsx","Shared/Components/GameLink.jsx","WebApp/Charts/OpponentChart.js","WebApp/Charts/MiscChart.js","WebApp/GameFilters/ChartFilter.jsx","WebApp/Charts/GameHistoryChart.jsx","WebApp/Charts/ChartList.js","WebApp/Footer/Footer.jsx","WebApp/Statistics.jsx","App.jsx","serviceWorker.js","Redux/Player/playerReducer.js","Redux/Games/gameReducer.js","Redux/Charts/chartDataReducer.js","OGSApi/OGSApi.js","Redux/APIReducer.js","Redux/reducers.js","index.js","Redux/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRating","getPlayerRankDisplay","ratingToKyuDan","isPlayerWin","game","playerId","players","black","id","white_lost","white","black_lost","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","daysDifferenceBetween","day1","day2","two","Date","getFullYear","getMonth","getDate","one","days","getTime","ceil","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","minDate","maxDate","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","_getState$chartsData","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","Object","objectSpread2","filterFunction","composeFilterFunction","updateChartDataSource","results","filter","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","getGameHandicapState","newData","type","payload","REQUEST","SUCCESS","FAILURE","PROGRESS","fetchGames","cachedGames","arguments","length","undefined","asyncToGenerator","regenerator_default","mark","_callee","reduxState","fetchingPromise","latestId","OGSApi","fetchingPage","data","fetchingTotalPage","shouldContinueFetching","promise","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamePage","fetchGamesStart","fetchGamesProgress","sent","createForOfIteratorHelper","s","n","done","value","push","toConsumableArray","abrupt","t0","e","f","finish","count","fetchGamesSuccess","dispatchStateFrom","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","setHours","start","_ref2","fetchPlayer","userIdPromise","userId","userDataPromise","userData","fetchUserId","fetchPlayerStart","fetchUserDataById","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","exporterVersion","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","scrollspy_default","items","map","currentClassName","LoadingIcon","circumference","PI","outerRadius","viewBox","transform","version","xmlns","xmlnsXlink","shapeRendering","r","cx","radius","cy","fill","strokeWidth","stroke","strokeDasharray","SideBar","_this$props","errorMessage","currentPage","totalPages","showQuickLinks","freezeQuery","quickLinks","SideBar_QuickLinks","searchBoxOrLoadProgress","Fragment","SideBar_SearchBox","Components_LoadingIcon_LoadingIcon","marginRight","flex","rel","mapDispatchToProps","fetchError","LoadingUser","isFetchingPlayer","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","statistics","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","assignGameResultToDistributions","distributions","isWin","outcome","isNaN","split","points","parseFloat","pointDiff","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","_this$generateChartDa","generateChartData","BoardSizesChart","alignment","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","forEach","_this$computeBoardSiz","chartData5","TimeSettingsChart","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","times","ExtLink","children","PlayerLink","OGS_ROOT","img","OGS_API_ROOT","Components_ExtLink","GameLink","related","detail","moment","format","OpponentChart","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","_extractHistoricalPla","opponentRank","k","averageGamePerOpponent","toFixed","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","configs","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","Components_PlayerLink","Components_GameLink","MiscChart","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","longestGame","scoreDiff","gameDay","started","gameDuration","asMilliseconds","memberSince","firstGameDate","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","_this$computeMiscInfo","streakDurationDisplay","biggestWinDisplay","preciseDiff","ChartFilter","expanded","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this2","_this$props2","Button","Collapse","isOpen","build_default","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","computeGameHistory","insertCurrentRank","historicalWinloss","playerRating","isBlack","opponentRating","gameId","renderChartTooltip","round","chartData","label","role","p","html","item","ChartList","filteredGamesData","allGamesData","GameFilters_ChartFilter","Charts_GameHistoryChart","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","user","WebApp_Header_Header","WebApp_SideBar_SideBar","showStatistics","Charts_ChartList","showLoading","WebApp_LoadingUser_LoadingUser","WebApp_Welcome","WebApp_Footer_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","WebApp_Statistics","params","exact","Boolean","location","hostname","initialState","reducer","CancelablePromise","resolve","reject","axios","get","then","res","catch","status","url","combineReducers","APIReducer","playerReducer","gamesReducer","chartReducers","createStore","reducers","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f582df1.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerUnroundedRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.log(rating / 850.0) / 0.032;\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}\r\n\r\nexport const ratingToKyuDan = (rating) => {\r\n  var rank = Math.floor(\r\n    Math.log(rating / 850.0) / 0.032\r\n  );\r\n  return rankNumberToKyuDan(rank);\r\n}\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n}\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\"\r\n}\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n}\r\n\r\nexport const isPlayerWin = (game, playerId) => {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nexport const extractPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nexport const extractHistoricalPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      historicalPlayer: game.historical_ratings.black,\r\n      historicalOpponent: game.historical_ratings.white\r\n    } : {\r\n      historicalPlayer: game.historical_ratings.white,\r\n      historicalOpponent: game.historical_ratings.black\r\n    }\r\n}\r\n\r\nexport const daysDifferenceBetween = (day1, day2) => {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Shared/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from \"react\";\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">\r\n      Start by entering username into the search field to the right\r\n      (case-sensitive).\r\n    </p>\r\n    <p>\r\n      You can also use userID: my profile page is{\" \"}\r\n      <em>https://online-go.com/user/view/197819</em>, meaning my user ID is\r\n      197819.\r\n    </p>\r\n    <hr />\r\n    <p>\r\n      If you play a lot of games, be sure to Export after querying finished.\r\n    </p>\r\n    <p>\r\n      It will save your games data into 1 file, which you can import later to\r\n      save time.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","export const minDate = new Date(\"Jan 1 2008\");\r\nexport const maxDate = new Date();\r\n","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState,\r\n} from \"../../Shared/utils\";\r\n\r\nimport { maxDate } from \"../../Shared/constants\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const rankedValues = {\r\n  Ranked: \"Ranked\",\r\n  Unranked: \"Unranked\",\r\n  values: [\"Ranked\", \"Unranked\"],\r\n};\r\nexport const tournamentValues = {\r\n  Tournament: \"Tournament\",\r\n  NonTournament: \"Non-tournament\",\r\n  values: [\"Tournament\", \"Non-tournament\"],\r\n};\r\nexport const boardSizeValues = {\r\n  Nineteens: \"19x19\",\r\n  Thirteens: \"13x13\",\r\n  Nines: \"9x9\",\r\n  Others: \"Others\",\r\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"],\r\n};\r\nexport const timeSettingsValues = {\r\n  Blitz: \"Blitz\",\r\n  Live: \"Live\",\r\n  Correspondence: \"Correspondence\",\r\n  values: [\"Blitz\", \"Live\", \"Correspondence\"],\r\n};\r\nexport const colorValues = {\r\n  Black: \"Play as Black\",\r\n  White: \"Play as White\",\r\n  values: [\"Play as Black\", \"Play as White\"],\r\n};\r\nexport const handicapValues = {\r\n  Even: \"Even game\",\r\n  Taker: \"Handicap taker\",\r\n  Giver: \"Handicap giver\",\r\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"],\r\n};\r\n\r\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\r\n  const playerId = getState().player.id;\r\n  const dateOfLastGame = getState().games.end;\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    limitEndDate,\r\n  } = getState().chartsData;\r\n\r\n  const latestLimitEndDate =\r\n    filters && filters.hasOwnProperty(\"limitEndDate\")\r\n      ? filters.limitEndDate\r\n      : limitEndDate;\r\n  const latestEndDate =\r\n    filters && filters.hasOwnProperty(\"endDate\") ? filters.endDate : endDate;\r\n\r\n  const newEndDate = latestLimitEndDate\r\n    ? latestEndDate < dateOfLastGame\r\n      ? latestEndDate\r\n      : dateOfLastGame\r\n    : maxDate;\r\n\r\n  const filterFunctionParams = {\r\n    startDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId,\r\n    limitEndDate,\r\n    ...filters,\r\n    endDate: newEndDate,\r\n  };\r\n\r\n  const filterFunction = composeFilterFunction(filterFunctionParams);\r\n\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...filterFunctionParams,\r\n      results: getState().games.results.filter(filterFunction),\r\n    })\r\n  );\r\n};\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  color,\r\n  playerId,\r\n}) => (game, index) => {\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return (\r\n    gameSatisfyRankedRule(game, ranked) &&\r\n    gameSatisfyTournamentRule(game, tournament) &&\r\n    gameSatisfyBoardSizeRule(game, boardSize) &&\r\n    gameSatisfyTimeSettingsRule(game, timeSettings) &&\r\n    gameSatisfyHandicapRule(game, handicap, playerId) &&\r\n    gameSatisfyColorRule(game, color, playerId)\r\n  );\r\n};\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\r\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\r\n  return true;\r\n};\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament))\r\n    return false;\r\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n};\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n};\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n};\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black))\r\n    return false;\r\n  if (game.players.white.id === playerId && !color.includes(colorValues.White))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData,\r\n});\r\n","export const REQUEST = type => `${type}_PENDING`;\r\nexport const SUCCESS = type => `${type}_FULFILLED`;\r\nexport const FAILURE = type => `${type}_REJECTED`;\r\nexport const PROGRESS = type => `${type}_PROGRESS`;","import { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from \"../promiseUtils\";\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nexport const FETCH_GAMES = \"FETCH_GAMES\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\n\r\nexport const fetchGames = (playerId, cachedGames = []) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const reduxState = getState();\r\n\r\n  const fetchingPromise = reduxState.games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n\r\n  try {\r\n    let games = [];\r\n    let fetchingPage = 0;\r\n    let data;\r\n    let fetchingTotalPage = 0;\r\n    let shouldContinueFetching = true;\r\n    do {\r\n      const promise = OGSApi.fetchGamePage(\r\n        playerId,\r\n        data ? data.next : undefined\r\n      );\r\n      dispatch(\r\n        fetchingPage === 0\r\n          ? fetchGamesStart(promise)\r\n          : fetchGamesProgress({\r\n              promise,\r\n              fetchingPage,\r\n              fetchingTotalPage,\r\n              results: games,\r\n            })\r\n      );\r\n      dispatch(applyGameFilters());\r\n      data = await promise;\r\n      for (const game of data.results) {\r\n        if (game.id !== latestId) games.push(game);\r\n        else {\r\n          shouldContinueFetching = false;\r\n          games = [...games, ...cachedGames];\r\n          break;\r\n        }\r\n      }\r\n\r\n      fetchingPage++;\r\n      fetchingTotalPage = Math.ceil(data.count / 50);\r\n    } while (data.next && shouldContinueFetching);\r\n\r\n    dispatch(fetchGamesSuccess(dispatchStateFrom(games)));\r\n  } catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error));\r\n    else\r\n      dispatch(\r\n        fetchGamesFailure(\r\n          \"An error has occured while fetching user games. Please try again later.\"\r\n        )\r\n      );\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nconst dispatchStateFrom = (games) => {\r\n  let startDate = games.length\r\n    ? new Date(games[games.length - 1].ended)\r\n    : minDate;\r\n  startDate.setHours(0, 0, 0, 0);\r\n\r\n  return {\r\n    results: games,\r\n    start: startDate,\r\n    end: games.length ? new Date(games[0].ended) : maxDate,\r\n  };\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: REQUEST(FETCH_GAMES),\r\n  payload: promise,\r\n});\r\n\r\nconst fetchGamesProgress = ({\r\n  promise,\r\n  fetchingPage,\r\n  fetchingTotalPage,\r\n  results,\r\n}) => ({\r\n  type: PROGRESS(FETCH_GAMES),\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage, results },\r\n});\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_GAMES),\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FAILURE(FETCH_GAMES),\r\n  payload: { error },\r\n});\r\n\r\nexport const freezeQuery = () => (dispatch, getState) => {\r\n  const games = getState().games.results;\r\n  console.log(\"aaa\");\r\n\r\n  if (games.length === 0) return;\r\n\r\n  let startDate = games.length\r\n    ? new Date(games[games.length - 1].ended)\r\n    : minDate;\r\n\r\n  startDate.setHours(0, 0, 0, 0);\r\n  dispatch(\r\n    applyGameFilters({\r\n      startDate,\r\n    })\r\n  );\r\n};\r\n","import { fetchGames } from \"../Games/gameActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nexport const FETCH_PLAYER = \"FETCH_PLAYER\";\r\n\r\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  dispatch(fetchPlayerSuccess(player));\r\n  dispatch(fetchGames(player.id, games.results));\r\n}\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const reduxState = getState();\r\n  const fetchingPromise = reduxState.player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n  try {\r\n    const userIdPromise = OGSApi.fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = OGSApi.fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: REQUEST(FETCH_PLAYER),\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_PLAYER),\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FAILURE(FETCH_PLAYER),\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { saveAs } from 'file-saver';\r\nimport { importPlayer, fetchPlayer } from \"../../Redux/Player/playerActions\";\r\n\r\nconst exporterVersion = 0;\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n      this.props.getPlayerData(this.state.username);\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadJSON = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      ratings,\r\n      rank,\r\n      registrationDate\r\n    } = this.props.player;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      results\r\n    } = this.props.games;\r\n\r\n    const jsonString = JSON.stringify({\r\n      exporterVersion,\r\n      player: {\r\n        id,\r\n        username,\r\n        ratings,\r\n        rank,\r\n        registrationDate\r\n      },\r\n      games: {\r\n        start,\r\n        end,\r\n        results\r\n      }\r\n    });\r\n\r\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\r\n    saveAs(blob, `gotstats_${username}.json`);\r\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\r\n  }\r\n\r\n  readFile = (event) => {\r\n    const file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      this.readImportedJSON(evt.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  readImportedJSON = (jsonString) => {\r\n    const data = JSON.parse(jsonString);\r\n    this.props.history.push(`/user/${data.player.username}`)\r\n    this.props.importPlayerData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-group\">\r\n          <div className=\"input-group\">\r\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n            <span className=\"input-group-btn\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\r\n\r\n        <div className=\"form-group\">\r\n          <p className=\"d-flex justify-content-between\">\r\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\r\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\r\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  importPlayerData: data => dispatch(importPlayer(data)),\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous information\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React from \"react\";\r\nimport \"./loading-icon.css\";\r\n\r\nconst LoadingIcon = ({ style }) => {\r\n  const radius = 46; // change css with corresponding circumference\r\n  const strokeWidth = 8;\r\n  const outerRadius = radius + strokeWidth / 2;\r\n  const circumference = Math.PI * (radius * 2);\r\n\r\n  return (\r\n    <svg\r\n      width={outerRadius * 2}\r\n      height={outerRadius * 2}\r\n      viewBox={`0 0 ${outerRadius * 2} ${outerRadius * 2}`}\r\n      transform=\"rotate(-90)\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      shapeRendering=\"optimizeQuality\"\r\n      style={style}\r\n    >\r\n      <circle\r\n        r={radius}\r\n        cx={outerRadius}\r\n        cy={outerRadius}\r\n        fill=\"black\"\r\n        className=\"small_loading_icon_bg\"\r\n      />\r\n      <circle\r\n        r={radius}\r\n        cx={outerRadius}\r\n        cy={outerRadius}\r\n        fill=\"transparent\"\r\n        strokeWidth={strokeWidth}\r\n        stroke=\"white\"\r\n        strokeDasharray={circumference}\r\n        className=\"small_loading_icon_ring\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React, { Component } from \"react\";\r\n\r\nimport SearchBox from \"./SearchBox\";\r\nimport QuickLinks from \"./QuickLinks\";\r\nimport LoadingIcon from \"../../Shared/Components/LoadingIcon/LoadingIcon\";\r\nimport { connect } from \"react-redux\";\r\nimport { freezeQuery } from \"../../Redux/Games/gameActions\";\r\nimport { minDate } from \"../../Shared/constants\";\r\n\r\nclass SideBar extends Component {\r\n  render() {\r\n    const {\r\n      fetching,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages,\r\n      showQuickLinks,\r\n      freezeQuery,\r\n      startDate,\r\n    } = this.props;\r\n\r\n    const quickLinks = showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <small className=\"tip help-block\">\r\n          <em>*Mouse over/tap on a chart to see more info.</em>\r\n        </small>\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n    const searchBoxOrLoadProgress =\r\n      errorMessage || !(fetching && totalPages > 0) ? (\r\n        <>\r\n          {errorMessage && (\r\n            <div className=\"mb-3 text-danger\">{errorMessage}</div>\r\n          )}\r\n          <SearchBox />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"d-flex align-items-center\">\r\n            <LoadingIcon\r\n              style={{\r\n                width: 32,\r\n                height: 32,\r\n                marginRight: 15,\r\n                flex: \"0 0 auto\",\r\n              }}\r\n            />\r\n            <div>\r\n              Fetching games result from OGS - Page {currentPage + 1}\r\n              {totalPages && ` of ${totalPages}`}\r\n            </div>\r\n          </div>\r\n          {startDate === minDate && (\r\n            <div className=\"mt-3\">\r\n              <button\r\n                className=\"btn btn-block btn-secondary\"\r\n                onClick={freezeQuery}\r\n                title=\"Set filter to current games (stop charts refreshing)\"\r\n              >\r\n                Freeze charts\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          {searchBoxOrLoadProgress}\r\n\r\n          {quickLinks}\r\n\r\n          <hr />\r\n          <a\r\n            href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n          >\r\n            Support thread on OGS forum\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, player, games }) => ({\r\n  fetching: games.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError,\r\n  showQuickLinks: chartsData.results.length > 0,\r\n  startDate: chartsData.startDate,\r\n});\r\nconst mapDispatchToProps = { freezeQuery };\r\n\r\nexport default connect(mapReduxStateToProps, mapDispatchToProps)(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number,\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.props;\r\n\r\n    const loadMessage = `Fetching user info from OGS...`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle\r\n            className=\"black_stone3\"\r\n            cx=\"71.5\"\r\n            cy=\"28.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone2\"\r\n            cx=\"28.5\"\r\n            cy=\"71.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone1\"\r\n            cx=\"114.5\"\r\n            cy=\"71.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone4\"\r\n            cx=\"71.5\"\r\n            cy=\"114.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"white_stone\"\r\n            cx=\"71.5\"\r\n            cy=\"71.5\"\r\n            r=\"20\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#f8f8ff\"\r\n          />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError,\r\n});\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    footer: PropTypes.element,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 60 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: \"inout\",\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: \"inout\",\r\n        duration: 500,\r\n      },\r\n    },\r\n  };\r\n\r\n  computeWinLoseStatistics = (games, playerId) => {\r\n    var blackGames = 0,\r\n      whiteGames = 0,\r\n      blackLosses = 0,\r\n      whiteLosses = 0;\r\n    for (let game of games) {\r\n      if (game.players.black.id === playerId) {\r\n        blackGames++;\r\n        if (game.black_lost) {\r\n          blackLosses++;\r\n        }\r\n      } else {\r\n        whiteGames++;\r\n        if (game.white_lost) {\r\n          whiteLosses++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      blackGames,\r\n      blackLosses,\r\n      whiteGames,\r\n      whiteLosses,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const statistics = this.computeWinLoseStatistics(games, player.id);\r\n\r\n    const chartData1 = [\r\n      [\"Color\", \"Games\"],\r\n      [\"Black\", statistics.blackGames],\r\n      [\"White\", statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      [\"Result\", \"Games\"],\r\n      [\"Losses\", statistics.blackLosses + statistics.whiteLosses],\r\n      [\r\n        \"Wins\",\r\n        statistics.blackGames +\r\n          statistics.whiteGames -\r\n          (statistics.blackLosses + statistics.whiteLosses),\r\n      ],\r\n    ];\r\n    const chartData3 =\r\n      statistics.blackGames > 0\r\n        ? [\r\n            [\"Result\", \"Games\"],\r\n            [\"Losses\", statistics.blackLosses],\r\n            [\"Wins\", statistics.blackGames - statistics.blackLosses],\r\n          ]\r\n        : null;\r\n    const chartData4 =\r\n      statistics.whiteGames > 0\r\n        ? [\r\n            [\"Result\", \"Games\"],\r\n            [\"Losses\", statistics.whiteLosses],\r\n            [\"Wins\", statistics.whiteGames - statistics.whiteLosses],\r\n          ]\r\n        : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-sm-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Total</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">As Black</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">As White</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinLoseChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10, left: 0, right: 0 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n    },\r\n  };\r\n\r\n  assignGameResultToDistributions = (distributions, game) => {\r\n    const isWin = isPlayerWin(game, distributions.id);\r\n\r\n    if (game.outcome === \"Resignation\") {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Res`]++;\r\n    } else if (game.outcome === \"Timeout\") {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Time`]++;\r\n    } else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n      const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n      const pointDiff = Math.floor(points / 10);\r\n\r\n      var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n      result = `${isWin ? \"Plr\" : \"Opp\"}+${result}`;\r\n\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Count`]++;\r\n      distributions[result]++;\r\n    } else {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Other`]++;\r\n    }\r\n\r\n    return distributions;\r\n  };\r\n\r\n  computeWinLoseDistributions = (games, playerId) => {\r\n    var distributions = {\r\n      id: playerId,\r\n      \"Opp+Other\": 0,\r\n      \"Opp+Count\": 0,\r\n      \"Opp+Time\": 0,\r\n      \"Opp+Res\": 0,\r\n      \"Opp+40+\": 0,\r\n      \"Opp+30+\": 0,\r\n      \"Opp+20+\": 0,\r\n      \"Opp+10+\": 0,\r\n      \"Opp+0+\": 0,\r\n      \"Plr+0+\": 0,\r\n      \"Plr+10+\": 0,\r\n      \"Plr+20+\": 0,\r\n      \"Plr+30+\": 0,\r\n      \"Plr+40+\": 0,\r\n      \"Plr+Res\": 0,\r\n      \"Plr+Time\": 0,\r\n      \"Plr+Count\": 0,\r\n      \"Plr+Other\": 0,\r\n    };\r\n\r\n    return games.reduce(this.assignGameResultToDistributions, distributions);\r\n  };\r\n\r\n  generateChartData(games, playerId) {\r\n    const distributions = this.computeWinLoseDistributions(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Result\", \"Games\"],\r\n        [\"Timeout\", distributions[\"Plr+Time\"]],\r\n        [\"Resign\", distributions[\"Plr+Res\"]],\r\n        [\"Scoring\", distributions[\"Plr+Count\"]],\r\n        [\"Other\", distributions[\"Plr+Other\"]],\r\n      ],\r\n      chartData2: [\r\n        [\"Result\", \"Games\"],\r\n        [\"Timeout\", distributions[\"Opp+Time\"]],\r\n        [\"Resign\", distributions[\"Opp+Res\"]],\r\n        [\"Scoring\", distributions[\"Opp+Count\"]],\r\n        [\"Other\", distributions[\"Opp+Other\"]],\r\n      ],\r\n      chartData3: [\r\n        [\"Outcome\", \"Losses\", `Wins`],\r\n        [\"40+\", distributions[\"Opp+40+\"], null],\r\n        [\"30+\", distributions[\"Opp+30+\"], null],\r\n        [\"20+\", distributions[\"Opp+20+\"], null],\r\n        [\"10+\", distributions[\"Opp+10+\"], null],\r\n        [\"0+\", distributions[\"Opp+0+\"], null],\r\n        [\"0+\", null, distributions[\"Plr+0+\"]],\r\n        [\"10+\", null, distributions[\"Plr+10+\"]],\r\n        [\"20+\", null, distributions[\"Plr+20+\"]],\r\n        [\"30+\", null, distributions[\"Plr+30+\"]],\r\n        [\"40+\", null, distributions[\"Plr+40+\"]],\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const { chartData1, chartData2, chartData3 } = this.generateChartData(\r\n      games,\r\n      player.id\r\n    );\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Losses</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData1 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Wins</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          {chartData3 ? (\r\n            <div className=\"col-12\">\r\n              <h3 className=\"text-center\">Final scoring distribution</h3>\r\n              <Chart\r\n                chartType=\"ColumnChart\"\r\n                options={this.state.columnChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        alignment: \"center\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeBoardSizes = (games, playerId) => {\r\n    var nineteenGames = 0,\r\n      thirteenGames = 0,\r\n      nineGames = 0,\r\n      otherGames = 0,\r\n      nineteenLosses = 0,\r\n      thirteenLosses = 0,\r\n      nineLosses = 0,\r\n      otherLosses = 0;\r\n\r\n    games.forEach((game) => {\r\n      if (game.width === 19 && game.height === 19) {\r\n        nineteenGames++;\r\n        if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n      } else if (game.width === 13 && game.height === 13) {\r\n        thirteenGames++;\r\n        if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n      } else if (game.width === 9 && game.height === 9) {\r\n        nineGames++;\r\n        if (!isPlayerWin(game, playerId)) nineLosses++;\r\n      } else {\r\n        otherGames++;\r\n        if (!isPlayerWin(game, playerId)) otherLosses++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      nineteenGames,\r\n      thirteenGames,\r\n      nineGames,\r\n      otherGames,\r\n      nineteenLosses,\r\n      thirteenLosses,\r\n      nineLosses,\r\n      otherLosses,\r\n    };\r\n  };\r\n\r\n  generateChartData = (games, playerId) => {\r\n    const {\r\n      nineteenGames,\r\n      thirteenGames,\r\n      nineGames,\r\n      otherGames,\r\n      nineteenLosses,\r\n      thirteenLosses,\r\n      nineLosses,\r\n      otherLosses,\r\n    } = this.computeBoardSizes(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Size\", \"Games\"],\r\n        [\"19x19\", nineteenGames],\r\n        [\"13x13\", thirteenGames],\r\n        [\"9x9\", nineGames],\r\n        [\"Other\", otherGames],\r\n      ],\r\n      chartData2:\r\n        nineteenGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", nineteenLosses],\r\n              [\"Wins\", nineteenGames - nineteenLosses],\r\n            ]\r\n          : null,\r\n      chartData3:\r\n        thirteenGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", thirteenLosses],\r\n              [\"Wins\", thirteenGames - thirteenLosses],\r\n            ]\r\n          : null,\r\n      chartData4:\r\n        nineGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", nineLosses],\r\n              [\"Wins\", nineGames - nineLosses],\r\n            ]\r\n          : null,\r\n      chartData5:\r\n        otherGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", otherLosses],\r\n              [\"Wins\", otherGames - otherLosses],\r\n            ]\r\n          : null,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5,\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-md-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">19x19</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">13x13</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">9x9</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData5 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Other Sizes</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData5}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeTimeSettings = (games, playerId) => {\r\n    var blitzGames = 0,\r\n      liveGames = 0,\r\n      correspondenceGames = 0,\r\n      blitzLosses = 0,\r\n      liveLosses = 0,\r\n      correspondenceLosses = 0;\r\n    games.forEach((game) => {\r\n      if (game.time_per_move < 20) {\r\n        blitzGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          blitzLosses++;\r\n        }\r\n      } else if (game.time_per_move > 10800) {\r\n        correspondenceGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          correspondenceLosses++;\r\n        }\r\n      } else {\r\n        liveGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          liveLosses++;\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      blitzGames,\r\n      liveGames,\r\n      correspondenceGames,\r\n      blitzLosses,\r\n      liveLosses,\r\n      correspondenceLosses,\r\n    };\r\n  };\r\n\r\n  generateChartData(games, playerId) {\r\n    const times = this.computeTimeSettings(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Size\", \"Games\"],\r\n        [\"Blitz\", times.blitzGames],\r\n        [\"Live\", times.liveGames],\r\n        [\"Correspondence\", times.correspondenceGames],\r\n      ],\r\n      chartData2:\r\n        times.blitzGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.blitzLosses],\r\n              [\"Wins\", times.blitzGames - times.blitzLosses],\r\n            ]\r\n          : null,\r\n      chartData3:\r\n        times.liveGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.liveLosses],\r\n              [\"Wins\", times.liveGames - times.liveLosses],\r\n            ]\r\n          : null,\r\n      chartData4:\r\n        times.correspondenceGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.correspondenceLosses],\r\n              [\"Wins\", times.correspondenceGames - times.correspondenceLosses],\r\n            ]\r\n          : null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-sm-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Blitz</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Live</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Correspondence</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from \"react\"\r\n\r\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\r\n\r\nexport default ExtLink;","import React from 'react';\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nimport { getPlayerRankDisplay } from \"../utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (<ExtLink href={href} title={username}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport {\r\n  isPlayerWin,\r\n  getPlayerRankDisplay,\r\n  getPlayerRank,\r\n  getPlayerRating,\r\n  extractPlayerAndOpponent,\r\n  extractHistoricalPlayerAndOpponent\r\n} from \"../../Shared/utils\";\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  computeOpponentsInfo = (games, player) => {\r\n    var opponents = [], numberOfOpponents = 0;\r\n    var weakestOpp = { rank: 70 };\r\n    var strongestOpp = { rank: 0 };\r\n    var mostPlayed = { games: 0 };\r\n    var strongestDefeated = { ratingDiff: -9999 };\r\n\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      const { historicalOpponent, historicalPlayer } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      const opponentRank = getPlayerRank(opponent);\r\n\r\n      if (isWin) {\r\n        const ratingDiff = getPlayerRating(opponent) - getPlayerRating(player) + getPlayerRating(historicalOpponent) - getPlayerRating(historicalPlayer);\r\n        if (ratingDiff > strongestDefeated.ratingDiff) strongestDefeated = {\r\n          ...opponent,\r\n          ratingDiff,\r\n          game,\r\n        };\r\n      }\r\n\r\n      if (!opponents[opponent.id]) {\r\n        opponents[opponent.id] = 1;\r\n      }\r\n      else {\r\n        opponents[opponent.id]++;\r\n      }\r\n\r\n      if (opponents[opponent.id] > mostPlayed.games) {\r\n        mostPlayed = {\r\n          ...opponent,\r\n          games: opponents[opponent.id]\r\n        };\r\n      }\r\n\r\n      if (opponentRank > strongestOpp.rank)\r\n        strongestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank\r\n        };\r\n\r\n      if (opponentRank < weakestOpp.rank)\r\n        weakestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank\r\n        };\r\n    }\r\n\r\n    numberOfOpponents = 0;\r\n    for (var k in opponents) {\r\n      if (opponents.hasOwnProperty(k)) {\r\n        numberOfOpponents++;\r\n      }\r\n    }\r\n\r\n    return {\r\n      strongestOpp,\r\n      weakestOpp,\r\n      mostPlayed,\r\n      strongestDefeated,\r\n      numberOfOpponents,\r\n      averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n    }\r\n  }\r\n\r\n  generateChartData(games, player) {\r\n    const opponentsInfo = this.computeOpponentsInfo(games, player);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(games, player);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Strongest defeated opponent: <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport \"moment-precise-range-plugin\";\r\n\r\nimport {\r\n  isPlayerWin,\r\n  extractPlayerAndOpponent,\r\n  daysDifferenceBetween,\r\n} from \"../../Shared/utils\";\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#5486d1\", \"#41CD64\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeMiscInfo = (analyzingGames, player) => {\r\n    let mostActiveDay;\r\n    let currentDay = new Date();\r\n    currentDay.setHours(0, 0, 0, 0);\r\n\r\n    let totalLosses = 0;\r\n\r\n    let longestStreak = { streak: 0 };\r\n    let currentStreak = { streak: 0 };\r\n\r\n    let gamesOnMostActiveDay = 0,\r\n      gamesOnCurrentDay = 0;\r\n\r\n    let biggestWin = { diff: 0 };\r\n\r\n    let longestGame = { game: null, duration: 0 };\r\n\r\n    for (let game of analyzingGames) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      // Longest streak\r\n      if (isWin) {\r\n        currentStreak.streak++;\r\n        currentStreak.start = game;\r\n\r\n        if (!currentStreak.end) currentStreak.end = game;\r\n\r\n        if (currentStreak.streak > longestStreak.streak)\r\n          longestStreak = currentStreak;\r\n      } else currentStreak = { streak: 0 };\r\n\r\n      // Biggest win\r\n      if (isWin) {\r\n        const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n        if (!isNaN(game.outcome.split(\" \")[0])) {\r\n          const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n          if (scoreDiff > biggestWin.diff) {\r\n            biggestWin = {\r\n              game: game,\r\n              opponent: opponent,\r\n              diff: scoreDiff,\r\n            };\r\n          }\r\n        }\r\n      }\r\n      // Total losses\r\n      else totalLosses++;\r\n\r\n      // Most active day\r\n      let gameDay = new Date(game.ended);\r\n      gameDay.setHours(0, 0, 0, 0);\r\n      if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n        currentDay = gameDay;\r\n        gamesOnCurrentDay = 1;\r\n      } else {\r\n        gamesOnCurrentDay++;\r\n      }\r\n\r\n      if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n        mostActiveDay = currentDay;\r\n        gamesOnMostActiveDay = gamesOnCurrentDay;\r\n      }\r\n\r\n      // Game duration\r\n      if (game.ended && game.started) {\r\n        const gameDuration = moment\r\n          .duration(moment(game.ended).diff(moment(game.started)))\r\n          .asMilliseconds();\r\n        if (gameDuration > longestGame.duration) {\r\n          longestGame = {\r\n            game,\r\n            duration: gameDuration,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    let memberSince = new Date(player.registrationDate);\r\n    // Change memberSince to date of first game for player who migrated from old server\r\n    if (analyzingGames.length) {\r\n      let firstGameDate = new Date(\r\n        analyzingGames[analyzingGames.length - 1].started\r\n      );\r\n      if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n    }\r\n\r\n    let gamesPerDay = 0;\r\n    if (analyzingGames.length) {\r\n      let dateOfFirstGame = new Date(\r\n        analyzingGames[analyzingGames.length - 1].started\r\n      );\r\n      let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n      gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n    }\r\n\r\n    const uniqueTournaments = analyzingGames\r\n      .filter((game) => game.tournament !== null)\r\n      .reduce((result, game) => {\r\n        if (result.indexOf(game.tournament) === -1) {\r\n          result.push(game.tournament);\r\n        }\r\n\r\n        return result;\r\n      }, []).length;\r\n\r\n    return {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      uniqueTournaments,\r\n      totalLosses,\r\n      longestGame: longestGame.game,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments,\r\n      longestGame,\r\n    } = this.computeMiscInfo(games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? (\r\n      <span>\r\n        , from <GameLink game={longestStreak.start} /> to{\" \"}\r\n        <GameLink game={longestStreak.end} />\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>\r\n        Biggest win: {biggestWin.diff} points victory against{\" \"}\r\n        <PlayerLink player={biggestWin.opponent} /> on{\" \"}\r\n        <GameLink game={biggestWin.game} />.\r\n      </li>\r\n    );\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          <li>Plays {gamesPerDay.toFixed(3)} games per day on average.</li>\r\n          <li>\r\n            Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with{\" \"}\r\n            {gamesOnMostActiveDay} finished games.\r\n          </li>\r\n          <li>Played in {uniqueTournaments} tournaments.</li>\r\n          <li>\r\n            Longest win streak: {longestStreak.streak} wins in a row\r\n            {streakDurationDisplay}.\r\n          </li>\r\n          {biggestWinDisplay}\r\n          {longestGame && (\r\n            <li>\r\n              Longest game: <GameLink game={longestGame} /> lasting{\" \"}\r\n              {moment.preciseDiff(longestGame.ended, longestGame.started)}\r\n            </li>\r\n          )}\r\n          {totalLosses >= 50 && (\r\n            <li>\r\n              Congratulations,{\" \"}\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer nofollow\"\r\n                href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\"\r\n              >\r\n                you have lost your first 50 games\r\n              </a>\r\n              !\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_red.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse, Button } from \"reactstrap\";\r\n\r\nimport {\r\n  applyGameFilters,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues,\r\n} from \"../../Redux/Charts/chartActions\";\r\n\r\nconst minDate = new Date(\"Jan 1 2008\").getTime();\r\nconst maxDate = new Date();\r\n\r\nclass ChartFilter extends PureComponent {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    endDate: PropTypes.object.isRequired,\r\n    limitEndDate: PropTypes.bool.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    expanded: false,\r\n  };\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`))\r\n      .filter((input) => input.checked)\r\n      .map((input) => input.value);\r\n    this.onFilterChanged({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onToggleChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.checked;\r\n    this.onFilterChanged({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onDateChanged = (name, dates) => {\r\n    const date = dates[0];\r\n    this.onFilterChanged({ [name]: date });\r\n  };\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate,\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      endDate,\r\n      startDate,\r\n      ...changes,\r\n    });\r\n  };\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) =>\r\n    subDivideCols ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) =>\r\n          this.renderCheckbox(values, name, state, index)\r\n        )}\r\n      </div>\r\n    );\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input\r\n        name={name}\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id={`${name}_${index}`}\r\n        value={state}\r\n        defaultChecked={values.includes(state)}\r\n        onChange={this.onCheckboxChanged}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          color=\"secondary\"\r\n          className=\"mb-3\"\r\n          onClick={() => this.setState({ expanded: !this.state.expanded })}\r\n        >\r\n          Filters {this.state.expanded ? \"-\" : \"+\"}\r\n        </Button>\r\n        <Collapse isOpen={this.state.expanded}>\r\n          <form onSubmit={(e) => e.preventDefault()} className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-sm-6 col-lg-4\">\r\n                  <label>Analyze games starting from</label>\r\n                  <Flatpickr\r\n                    value={this.props.startDate || \"\"}\r\n                    className=\"form-control flatpickr-input\"\r\n                    name=\"startDate\"\r\n                    onChange={(dates) => this.onDateChanged(\"startDate\", dates)}\r\n                    options={{\r\n                      dateFormat: \"M d, Y\",\r\n                      minDate: this.props.minDate,\r\n                      maxDate: this.props.maxDate,\r\n                      enableTime: false,\r\n                      enableSeconds: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-sm-6 col-lg-4\">\r\n                  <label className=\"form-check\">\r\n                    <input\r\n                      name=\"limitEndDate\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id=\"limit_endDate\"\r\n                      value=\"limitEndDate\"\r\n                      defaultChecked={this.props.limitEndDate}\r\n                      onChange={this.onToggleChanged}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"limit_endDate\"\r\n                    >{`limit end date${\r\n                      this.props.limitEndDate ? \" to\" : \"\"\r\n                    }`}</label>\r\n                  </label>\r\n                  {this.props.limitEndDate && (\r\n                    <Flatpickr\r\n                      value={this.props.endDate || \"\"}\r\n                      className=\"form-control flatpickr-input\"\r\n                      name=\"endDate\"\r\n                      onChange={(dates) => this.onDateChanged(\"endDate\", dates)}\r\n                      options={{\r\n                        dateFormat: \"M d, Y\",\r\n                        minDate: this.props.minDate,\r\n                        maxDate: this.props.maxDate,\r\n                        enableTime: false,\r\n                        enableSeconds: false,\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\r\n            {this.renderCheckBoxItems(\r\n              boardSizeValues.values,\r\n              boardSize,\r\n              \"boardSize\",\r\n              true\r\n            )}\r\n            {this.renderCheckBoxItems(\r\n              timeSettingsValues.values,\r\n              timeSettings,\r\n              \"timeSettings\"\r\n            )}\r\n            {this.renderCheckBoxItems(\r\n              handicapValues.values,\r\n              handicap,\r\n              \"handicap\"\r\n            )}\r\n            {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\r\n            {this.renderCheckBoxItems(\r\n              tournamentValues.values,\r\n              tournament,\r\n              \"tournament\"\r\n            )}\r\n          </form>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\r\n  ...chartsData,\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || maxDate,\r\n});\r\nconst maxDispatchToProps = (dispatch) => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters)),\r\n});\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nimport configs from \"../../OGSApi/configs.json\";\r\nimport {\r\n  ratingToKyuDan,\r\n  getPlayerRating,\r\n  isPlayerWin,\r\n  extractHistoricalPlayerAndOpponent,\r\n} from \"../../Shared/utils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nclass GameHistoryChart extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    insertCurrentRank: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  state = {\r\n    scatterPlotChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 50, left: 50, right: 5 },\r\n      colors: [\"#41CD64\", \"#d93344\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      series: [\r\n        { type: \"line\" },\r\n        { type: \"scatter\", pointShape: { type: \"triangle\", rotation: 180 } },\r\n        { type: \"scatter\", pointShape: { type: \"triangle\" } },\r\n      ],\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n        gridlines: {\r\n          color: \"transparent\",\r\n        },\r\n        format: \"MMM ''yy\",\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n        gridlines: { count: 0 },\r\n      },\r\n      tooltip: {\r\n        isHtml: true,\r\n        trigger: \"selection\",\r\n      },\r\n    },\r\n  };\r\n\r\n  computeGameHistory = (games, player, insertCurrentRank) => {\r\n    let historicalWinloss = [];\r\n\r\n    if (insertCurrentRank || games.length < 2) {\r\n      historicalWinloss.push({\r\n        date: new Date(),\r\n        playerRating: getPlayerRating(player),\r\n      });\r\n    }\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n      const {\r\n        historicalPlayer,\r\n        historicalOpponent,\r\n      } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      historicalWinloss.push({\r\n        isBlack: game.players.black.id === player.id,\r\n        isWin,\r\n        date: new Date(game.ended),\r\n        playerRating: getPlayerRating(historicalPlayer),\r\n        opponentRating: getPlayerRating(historicalOpponent),\r\n        gameId: game.id,\r\n      });\r\n    }\r\n    return historicalWinloss;\r\n  };\r\n\r\n  renderChartTooltip = ({\r\n    isBlack,\r\n    isWin,\r\n    date,\r\n    playerRating,\r\n    opponentRating,\r\n    gameId,\r\n  }) =>\r\n    opponentRating\r\n      ? `<h6><a class=\"${isWin ? \"text-green\" : \"text-red\"}\" href=\"${\r\n          configs.OGS_ROOT\r\n        }game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(\r\n          date\r\n        ).format(\"MMM D, YYYY HH:mm\")} - ${isWin ? \"Win\" : \"Loss\"}</a></h6>\r\n      <div><i class=\"fas fa-circle\" style=\"${\r\n        isBlack ? \"color: #000000;\" : \"color: #ffffff;\"\r\n      }\"></i> Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(\r\n          playerRating\r\n        )})</div>\r\n      <div><i class=\"fas fa-circle\" style=\"${\r\n        isBlack ? \"color: #ffffff;\" : \"color: #000000;\"\r\n      }\"></i> Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(\r\n          opponentRating\r\n        )})</div>`\r\n      : `<h6>Currently</h6>\r\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(\r\n          playerRating\r\n        )})</div>`;\r\n\r\n  render() {\r\n    const { games, player, insertCurrentRank } = this.props;\r\n\r\n    const historicalWinloss = this.computeGameHistory(\r\n      games,\r\n      player,\r\n      insertCurrentRank\r\n    );\r\n\r\n    const chartData = [\r\n      [\r\n        \"Date\",\r\n        { type: \"number\", label: \"Player Rating\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n        { type: \"number\", label: \"Opponent Rating (Loss)\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n        { type: \"number\", label: \"Opponent Rating (Win)\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n      ],\r\n      ...historicalWinloss.map((item) => [\r\n        item.date,\r\n        item.playerRating,\r\n        this.renderChartTooltip(item),\r\n        item.isWin ? null : item.opponentRating,\r\n        this.renderChartTooltip(item),\r\n        item.isWin ? item.opponentRating : null,\r\n        this.renderChartTooltip(item),\r\n      ]),\r\n    ];\r\n\r\n    return (\r\n      <Chart\r\n        chartType=\"ComboChart\"\r\n        data={chartData}\r\n        options={this.state.scatterPlotChartOptions}\r\n        width={\"100%\"}\r\n        height={\"400px\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameHistoryChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from \"./WinLoseChart\";\r\nimport ResultDistributionChart from \"./ResultDistributionChart\";\r\nimport BoardSizesChart from \"./BoardSizesChart\";\r\nimport TimeSettingsChart from \"./TimeSettingsChart\";\r\nimport OpponentChart from \"./OpponentChart\";\r\nimport MiscChart from \"./MiscChart\";\r\nimport ChartFilter from \"../GameFilters/ChartFilter\";\r\nimport GameHistoryChart from \"./GameHistoryChart\";\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { player, chartsData, games } = this.props;\r\n\r\n    const filteredGamesData = chartsData.results;\r\n    const allGamesData = games.results;\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        <hr />\r\n        <h2 id=\"total_games_stats\" className=\"text-center\">\r\n          {`${filteredGamesData.length} of ${allGamesData.length} games match the filters`}\r\n        </h2>\r\n\r\n        {filteredGamesData.length > 0 && (\r\n          <div>\r\n            <GameHistoryChart\r\n              games={filteredGamesData}\r\n              player={player}\r\n              insertCurrentRank={!chartsData.limitEndDate}\r\n            />\r\n\r\n            <WinLoseChart games={filteredGamesData} player={player} />\r\n\r\n            <ResultDistributionChart\r\n              title={`Game results distribution`}\r\n              id={\"game_results\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n            {chartsData.boardSize.length > 1 && (\r\n              <BoardSizesChart\r\n                title={`Performance across board sizes`}\r\n                id={\"board_sizes_stats\"}\r\n                games={filteredGamesData}\r\n                player={player}\r\n              />\r\n            )}\r\n            {chartsData.timeSettings.length > 1 && (\r\n              <TimeSettingsChart\r\n                title={`Performance across time settings`}\r\n                id={\"time_settings_stats\"}\r\n                games={filteredGamesData}\r\n                player={player}\r\n              />\r\n            )}\r\n            <OpponentChart\r\n              title={`Unique opponents faced`}\r\n              id={\"opponents_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n            <MiscChart\r\n              title={`Miscellaneous`}\r\n              id={\"misc_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({\r\n  chartsData,\r\n  games,\r\n  player,\r\n});\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport Header from \"./Header/Header\";\r\nimport Welcome from \"./Welcome\";\r\nimport SideBar from \"./SideBar/SideBar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Redux/Player/playerActions\";\r\nimport LoadingUser from \"./LoadingUser/LoadingUser\";\r\nimport ChartList from \"./Charts/ChartList\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showStatistics ? (\r\n                <ChartList />\r\n              ) : this.props.showLoading ? (\r\n                <LoadingUser />\r\n              ) : (\r\n                <Welcome />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  player,\r\n  showLoading:\r\n    !!player.fetching ||\r\n    !!player.fetchError ||\r\n    !!games.fetching ||\r\n    !!games.fetchError,\r\n  showStatistics: player.id > -1 && games.results.length > 0,\r\n});\r\n\r\nconst mapReduxDispatchToProps = (dispatch) => ({\r\n  getPlayerData: (player) => dispatch(fetchPlayer(player)),\r\n});\r\n\r\nexport default connect(\r\n  mapReduxStateToProps,\r\n  mapReduxDispatchToProps\r\n)(Statistics);\r\n","import React from 'react';\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport Statistics from './WebApp/Statistics';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nconst App = ({ reduxStore }) => (\r\n  <ReduxProvider store={reduxStore}>\r\n    <Router>\r\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\r\n      <Route exact path=\"/\" component={Statistics} />\r\n    </Router>\r\n  </ReduxProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_PLAYER } from './playerActions';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  ratings: {\r\n    overall: {\r\n      rating: 0\r\n    }\r\n  },\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER): return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case SUCCESS(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FAILURE(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { FETCH_GAMES } from \"./gameActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from \"../promiseUtils\";\r\n\r\nimport { FETCH_PLAYER } from \"../Player/playerActions\";\r\n\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER):\r\n      return {\r\n        ...initialState,\r\n        fetching: state.fetching,\r\n      };\r\n\r\n    case REQUEST(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: payload,\r\n        fetchingPage: 0,\r\n        fetchingTotalPage: 0,\r\n        fetchError: \"\",\r\n        results: [],\r\n        start: minDate,\r\n        end: maxDate,\r\n      };\r\n\r\n    case PROGRESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case SUCCESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: null,\r\n        ...payload,\r\n      };\r\n\r\n    case FAILURE(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: null,\r\n        fetchError: payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER } from \"../Player/playerActions\";\r\n\r\nimport { REQUEST, SUCCESS } from \"../promiseUtils\";\r\n\r\nimport {\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues,\r\n} from \"./chartActions\";\r\n\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values,\r\n  limitEndDate: false,\r\n  results: [],\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case REQUEST(FETCH_GAMES):\r\n    case REQUEST(FETCH_PLAYER):\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    case SUCCESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        startDate: payload.start,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nconst OGSApi = {\r\n  fetchUserId: (user) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      if (isNaN(user)) { // Entered username\r\n        axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n          .then(res => res.data)\r\n          .then(function (data) {\r\n            if (data.results.length > 0) {\r\n              resolve(data.results[0].id);\r\n            }\r\n            else {\r\n              reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n            reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n          });\r\n      }\r\n      else {  // Entered user id\r\n        resolve(user);\r\n      }\r\n    });\r\n  },\r\n\r\n  fetchUserDataById: (id) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    });\r\n  },\r\n\r\n  fetchGamePage: (playerId, url) => {\r\n    if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(url)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default OGSApi;","import OGSApi from '../OGSApi/OGSApi';\r\n\r\nexport const OVERRIDE_API = \"OVERRIDE_API\";\r\n\r\nconst reducer = (state = OGSApi, { type, payload }) => type === OVERRIDE_API ? payload : state;\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataReducer\";\r\nimport APIReducer from \"./APIReducer\";\r\n\r\nexport default combineReducers({\r\n  OGSApi: APIReducer,\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createReduxStore } from './Redux/store';\r\n\r\nconst reduxStore = createReduxStore();\r\n\r\nReactDOM.render(\r\n  <App reduxStore={reduxStore} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducers,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}