{"version":3,"sources":["Shared/utils.js","WebApp/Header/Header.jsx","WebApp/Welcome.jsx","Redux/Charts/chartActions.js","Redux/promiseUtils.js","Redux/Games/gameActions.js","Redux/Player/playerActions.js","WebApp/SideBar/SearchBox.jsx","WebApp/SideBar/QuickLinks.jsx","WebApp/SideBar/SideBar.jsx","WebApp/LoadingUser/LoadingUser.js","WebApp/Charts/WinLoseChart.js","WebApp/Charts/ResultDistributionChart.js","WebApp/Charts/BoardSizesChart.js","WebApp/Charts/TimeSettingsChart.js","Shared/Components/ExtLink.jsx","Shared/Components/PlayerLink.jsx","Shared/Components/GameLink.jsx","WebApp/Charts/OpponentChart.js","WebApp/Charts/MiscChart.js","WebApp/GameFilters/ChartFilter.jsx","WebApp/Charts/GameHistoryChart.jsx","WebApp/Charts/ChartList.js","WebApp/Footer/Footer.jsx","WebApp/Statistics.jsx","App.jsx","serviceWorker.js","Redux/Player/playerReducer.js","Redux/Games/gameReducer.js","Redux/Charts/chartDataReducer.js","OGSApi/OGSApi.js","Redux/APIReducer.js","Redux/reducers.js","index.js","Redux/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRating","getPlayerRankDisplay","ratingToKyuDan","isPlayerWin","game","playerId","players","black","id","white_lost","white","black_lost","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","daysDifferenceBetween","day1","day2","two","Date","getFullYear","getMonth","getDate","one","days","getTime","ceil","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","minDate","maxDate","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","_getState$chartsData","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","Object","objectSpread","filterFunction","composeFilterFunction","updateChartDataSource","results","filter","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","getGameHandicapState","newData","type","payload","REQUEST","SUCCESS","FAILURE","PROGRESS","fetchGames","cachedGames","arguments","length","undefined","asyncToGenerator","regenerator_default","mark","_callee","reduxState","fetchingPromise","latestId","OGSApi","fetchingPage","data","fetchingTotalPage","shouldContinueFetching","promise","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamePage","fetchGamesStart","fetchGamesProgress","sent","Symbol","iterator","done","value","push","toConsumableArray","abrupt","t0","finish","count","setHours","fetchGamesSuccess","start","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","_ref3","fetchPlayer","_ref2","userIdPromise","userId","userDataPromise","userData","fetchUserId","fetchPlayerStart","fetchUserDataById","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","exporterVersion","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","statistics","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","assignGameResultToDistributions","distributions","isWin","outcome","isNaN","split","points","parseFloat","pointDiff","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","_this$generateChartDa","generateChartData","BoardSizesChart","alignment","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","forEach","_this$computeBoardSiz","chartData5","TimeSettingsChart","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","times","ExtLink","children","PlayerLink","OGS_ROOT","img","OGS_API_ROOT","Components_ExtLink","GameLink","related","detail","moment","format","OpponentChart","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","_extractHistoricalPla","opponentRank","k","averageGamePerOpponent","toFixed","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","configs","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","Components_PlayerLink","Components_GameLink","MiscChart","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","scoreDiff","gameDay","memberSince","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","_this$computeMiscInfo","streakDurationDisplay","biggestWinDisplay","round","ChartFilter","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this2","_this$props2","build_default","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","computeGameHistory","insertCurrentRank","historicalWinloss","playerRating","isBlack","opponentRating","gameId","renderChartTooltip","chartData","label","role","p","html","item","ChartList","filteredGamesData","allGamesData","charts","Charts_GameHistoryChart","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","user","WebApp_Header_Header","WebApp_SideBar_SideBar","showLoading","WebApp_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","WebApp_Welcome","WebApp_Footer_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","WebApp_Statistics","params","exact","Boolean","location","hostname","initialState","reducer","CancelablePromise","resolve","reject","axios","get","then","res","status","url","combineReducers","APIReducer","playerReducer","gamesReducer","chartReducers","createStore","reducers","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fcad5f4.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerUnroundedRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.log(rating / 850.0) / 0.032;\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}\r\n\r\nexport const ratingToKyuDan = (rating) => {\r\n  var rank = Math.floor(\r\n    Math.log(rating / 850.0) / 0.032\r\n  );\r\n  return rankNumberToKyuDan(rank);\r\n}\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n}\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\"\r\n}\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n}\r\n\r\nexport const isPlayerWin = (game, playerId) => {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nexport const extractPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nexport const extractHistoricalPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      historicalPlayer: game.historical_ratings.black,\r\n      historicalOpponent: game.historical_ratings.white\r\n    } : {\r\n      historicalPlayer: game.historical_ratings.white,\r\n      historicalOpponent: game.historical_ratings.black\r\n    }\r\n}\r\n\r\nexport const daysDifferenceBetween = (day1, day2) => {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Shared/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState\r\n} from \"../../Shared/utils\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const rankedValues = {\r\n  Ranked: \"Ranked\",\r\n  Unranked: \"Unranked\",\r\n  values: [\"Ranked\", \"Unranked\"]\r\n}\r\nexport const tournamentValues = {\r\n  Tournament: \"Tournament\",\r\n  NonTournament: \"Non-tournament\",\r\n  values: [\"Tournament\", \"Non-tournament\"]\r\n}\r\nexport const boardSizeValues = {\r\n  Nineteens: \"19x19\",\r\n  Thirteens: \"13x13\",\r\n  Nines: \"9x9\",\r\n  Others: \"Others\",\r\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\r\n}\r\nexport const timeSettingsValues = {\r\n  Blitz: \"Blitz\",\r\n  Live: \"Live\",\r\n  Correspondence: \"Correspondence\",\r\n  values: [\"Blitz\", \"Live\", \"Correspondence\"]\r\n}\r\nexport const colorValues = {\r\n  Black: \"Play as Black\",\r\n  White: \"Play as White\",\r\n  values: [\"Play as Black\", \"Play as White\"]\r\n}\r\nexport const handicapValues = {\r\n  Even: \"Even game\",\r\n  Taker: \"Handicap taker\",\r\n  Giver: \"Handicap giver\",\r\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"]\r\n}\r\n\r\nexport const minDate = new Date(-8640000000000000);\r\nexport const maxDate = new Date();\r\n\r\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\r\n\r\n  const playerId = getState().player.id;\r\n  const dateOfLastGame = getState().games.end;\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    limitEndDate\r\n  } = getState().chartsData;\r\n\r\n  const latestLimitEndDate = ((filters && filters.hasOwnProperty('limitEndDate')) ? filters.limitEndDate : limitEndDate);\r\n  const latestEndDate = ((filters && filters.hasOwnProperty('endDate')) ? filters.endDate : endDate);\r\n\r\n  const newEndDate = latestLimitEndDate\r\n    ? (latestEndDate < dateOfLastGame\r\n      ? latestEndDate\r\n      : dateOfLastGame)\r\n    : maxDate;\r\n\r\n  const filterFunctionParams = {\r\n    startDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId,\r\n    limitEndDate,\r\n    ...filters,\r\n    endDate: newEndDate\r\n  }\r\n\r\n  const filterFunction = composeFilterFunction(filterFunctionParams);\r\n\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...filterFunctionParams,\r\n      results: getState().games.results\r\n        .filter(filterFunction)\r\n    })\r\n  )\r\n}\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  color,\r\n  playerId\r\n}) => (game, index) => {\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return gameSatisfyRankedRule(game, ranked)\r\n    && gameSatisfyTournamentRule(game, tournament)\r\n    && gameSatisfyBoardSizeRule(game, boardSize)\r\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\r\n    && gameSatisfyHandicapRule(game, handicap, playerId)\r\n    && gameSatisfyColorRule(game, color, playerId);\r\n}\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\r\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament)) return false;\r\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n}\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n}\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n}\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black)) return false;\r\n  if (game.players.white.id === playerId && !color.includes(colorValues.White)) return false;\r\n  return true;\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","export const REQUEST = type => `${type}_PENDING`;\r\nexport const SUCCESS = type => `${type}_FULFILLED`;\r\nexport const FAILURE = type => `${type}_REJECTED`;\r\nexport const PROGRESS = type => `${type}_PROGRESS`;","import { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from '../promiseUtils';\r\n\r\nexport const FETCH_GAMES = \"FETCH_GAMES\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId, cachedGames = []) => async (dispatch, getState) => {\r\n  const reduxState = getState();\r\n\r\n  const fetchingPromise = reduxState.games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n\r\n  try {\r\n    let games = [];\r\n    let fetchingPage = 0;\r\n    let data;\r\n    let fetchingTotalPage = 0;\r\n    let shouldContinueFetching = true;\r\n    do {\r\n      const promise = OGSApi.fetchGamePage(playerId, data ? data.next : undefined);\r\n      dispatch(fetchingPage === 0 ? fetchGamesStart(promise) : fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      for (const game of data.results) {\r\n        if (game.id !== latestId) games.push(game);\r\n        else {\r\n          shouldContinueFetching = false;\r\n          games = [...games, ...cachedGames];\r\n          break;\r\n        }\r\n      }\r\n\r\n      fetchingPage++;\r\n      fetchingTotalPage = Math.ceil(data.count / 50);\r\n    } while (data.next && shouldContinueFetching)\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nexport const updateGames = (playerId) => async (dispatch, getState) => {\r\n\r\n}\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: REQUEST(FETCH_GAMES),\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: PROGRESS(FETCH_GAMES),\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_GAMES),\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FAILURE(FETCH_GAMES),\r\n  payload: { error }\r\n});","import { fetchGames } from \"../Games/gameActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nexport const FETCH_PLAYER = \"FETCH_PLAYER\";\r\n\r\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  dispatch(fetchPlayerSuccess(player));\r\n  dispatch(fetchGames(player.id, games.results));\r\n}\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const reduxState = getState();\r\n  const fetchingPromise = reduxState.player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n  try {\r\n    const userIdPromise = OGSApi.fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = OGSApi.fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: REQUEST(FETCH_PLAYER),\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_PLAYER),\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FAILURE(FETCH_PLAYER),\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { saveAs } from 'file-saver';\r\nimport { importPlayer, fetchPlayer } from \"../../Redux/Player/playerActions\";\r\n\r\nconst exporterVersion = 0;\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n      this.props.getPlayerData(this.state.username);\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadJSON = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      ratings,\r\n      rank,\r\n      registrationDate\r\n    } = this.props.player;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      results\r\n    } = this.props.games;\r\n\r\n    const jsonString = JSON.stringify({\r\n      exporterVersion,\r\n      player: {\r\n        id,\r\n        username,\r\n        ratings,\r\n        rank,\r\n        registrationDate\r\n      },\r\n      games: {\r\n        start,\r\n        end,\r\n        results\r\n      }\r\n    });\r\n\r\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\r\n    saveAs(blob, `gotstats_${username}.json`);\r\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\r\n  }\r\n\r\n  readFile = (event) => {\r\n    const file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      this.readImportedJSON(evt.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  readImportedJSON = (jsonString) => {\r\n    const data = JSON.parse(jsonString);\r\n    this.props.history.push(`/user/${data.player.username}`)\r\n    this.props.importPlayerData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-group\">\r\n          <div className=\"input-group\">\r\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n            <span className=\"input-group-btn\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\r\n\r\n        <div className=\"form-group\">\r\n          <p className=\"d-flex justify-content-between\">\r\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\r\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\r\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  importPlayerData: data => dispatch(importPlayer(data)),\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous information\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <small className=\"tip help-block\"><em>*Mouse over/tap on a chart to see more info.</em></small>\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n\r\n          {quickLinks}\r\n\r\n          <hr />\r\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS forum</a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.results.length > 0 })\r\n\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage + 1}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 60 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  computeWinLoseStatistics = (games, playerId) => {\r\n    var blackGames = 0, whiteGames = 0,\r\n      blackLosses = 0, whiteLosses = 0;\r\n    for (let game of games) {\r\n      if (game.players.black.id === playerId) {\r\n        blackGames++;\r\n        if (game.black_lost) {\r\n          blackLosses++;\r\n        }\r\n      }\r\n      else {\r\n        whiteGames++;\r\n        if (game.white_lost) {\r\n          whiteLosses++;\r\n        }\r\n      }\r\n    };\r\n\r\n    return {\r\n      blackGames,\r\n      blackLosses,\r\n      whiteGames,\r\n      whiteLosses\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const statistics = this.computeWinLoseStatistics(games, player.id);\r\n\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinLoseChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport { isPlayerWin } from '../../Shared/utils';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10, left: 0, right: 0 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  assignGameResultToDistributions = (distributions, game) => {\r\n    const isWin = isPlayerWin(game, distributions.id);\r\n\r\n    if (game.outcome === \"Resignation\") {\r\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n    }\r\n    else if (game.outcome === \"Timeout\") {\r\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n    }\r\n    else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n      const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n      const pointDiff = Math.floor(points / 10);\r\n\r\n      var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n      result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n      distributions[result]++;\r\n    }\r\n    else {\r\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n    }\r\n\r\n    return distributions;\r\n  }\r\n\r\n  computeWinLoseDistributions = (games, playerId) => {\r\n    var distributions = {\r\n      \"id\": playerId,\r\n      \"Opp+Other\": 0,\r\n      \"Opp+Count\": 0,\r\n      \"Opp+Time\": 0,\r\n      \"Opp+Res\": 0,\r\n      \"Opp+40+\": 0,\r\n      \"Opp+30+\": 0,\r\n      \"Opp+20+\": 0,\r\n      \"Opp+10+\": 0,\r\n      \"Opp+0+\": 0,\r\n      \"Plr+0+\": 0,\r\n      \"Plr+10+\": 0,\r\n      \"Plr+20+\": 0,\r\n      \"Plr+30+\": 0,\r\n      \"Plr+40+\": 0,\r\n      \"Plr+Res\": 0,\r\n      \"Plr+Time\": 0,\r\n      \"Plr+Count\": 0,\r\n      \"Plr+Other\": 0\r\n    };\r\n\r\n    return games.reduce(this.assignGameResultToDistributions, distributions);\r\n  }\r\n\r\n  generateChartData(games, playerId) {\r\n    const distributions = this.computeWinLoseDistributions(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Losses', `Wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport { isPlayerWin } from '../../Shared/utils';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0\r\n      },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        alignment: 'center',\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  computeBoardSizes = (games, playerId) => {\r\n    var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n      nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n    games.forEach(game => {\r\n      if (game.width === 19 && game.height === 19) {\r\n        nineteenGames++;\r\n        if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n      }\r\n      else if (game.width === 13 && game.height === 13) {\r\n        thirteenGames++;\r\n        if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n      }\r\n      else if (game.width === 9 && game.height === 9) {\r\n        nineGames++;\r\n        if (!isPlayerWin(game, playerId)) nineLosses++;\r\n      }\r\n      else {\r\n        otherGames++;\r\n        if (!isPlayerWin(game, playerId)) otherLosses++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      nineteenGames, thirteenGames, nineGames, otherGames,\r\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n    }\r\n  }\r\n\r\n  generateChartData = (games, playerId) => {\r\n    const {\r\n      nineteenGames, thirteenGames, nineGames, otherGames,\r\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n    } = this.computeBoardSizes(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', nineteenGames],\r\n        ['13x13', thirteenGames],\r\n        ['9x9', nineGames],\r\n        ['Other', otherGames],\r\n      ],\r\n      chartData2: nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', nineteenLosses],\r\n        ['Wins', (nineteenGames - nineteenLosses)],\r\n      ] : null,\r\n      chartData3: thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', thirteenLosses],\r\n        ['Wins', (thirteenGames - thirteenLosses)],\r\n      ] : null,\r\n      chartData4: nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', nineLosses],\r\n        ['Wins', (nineGames - nineLosses)],\r\n      ] : null,\r\n      chartData5: otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', otherLosses],\r\n        ['Wins', (otherGames - otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport { isPlayerWin } from '../../Shared/utils';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0\r\n      },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  computeTimeSettings = (games, playerId) => {\r\n    var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n      blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n    games.forEach(game => {\r\n      if (game.time_per_move < 20) {\r\n        blitzGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          blitzLosses++;\r\n        }\r\n      }\r\n      else if (game.time_per_move > 10800) {\r\n        correspondenceGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          correspondenceLosses++;\r\n        }\r\n      }\r\n      else {\r\n        liveGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          liveLosses++;\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      blitzGames, liveGames, correspondenceGames,\r\n      blitzLosses, liveLosses, correspondenceLosses\r\n    }\r\n  }\r\n\r\n  generateChartData(games, playerId) {\r\n    const times = this.computeTimeSettings(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from \"react\"\r\n\r\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\r\n\r\nexport default ExtLink;","import React from 'react';\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nimport { getPlayerRankDisplay } from \"../utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (<ExtLink href={href}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport {\r\n  isPlayerWin,\r\n  getPlayerRankDisplay,\r\n  getPlayerRank,\r\n  getPlayerRating,\r\n  extractPlayerAndOpponent,\r\n  extractHistoricalPlayerAndOpponent\r\n} from \"../../Shared/utils\";\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  computeOpponentsInfo = (games, player) => {\r\n    var opponents = [], numberOfOpponents = 0;\r\n    var weakestOpp = { rank: 70 };\r\n    var strongestOpp = { rank: 0 };\r\n    var mostPlayed = { games: 0 };\r\n    var strongestDefeated = { ratingDiff: -9999 };\r\n\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      const { historicalOpponent, historicalPlayer } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      const opponentRank = getPlayerRank(opponent);\r\n\r\n      if (isWin) {\r\n        const ratingDiff = getPlayerRating(opponent) - getPlayerRating(player) + getPlayerRating(historicalOpponent) - getPlayerRating(historicalPlayer);\r\n        if (ratingDiff > strongestDefeated.ratingDiff) strongestDefeated = {\r\n          ...opponent,\r\n          ratingDiff,\r\n          game,\r\n        };\r\n      }\r\n\r\n      if (!opponents[opponent.id]) {\r\n        opponents[opponent.id] = 1;\r\n      }\r\n      else {\r\n        opponents[opponent.id]++;\r\n      }\r\n\r\n      if (opponents[opponent.id] > mostPlayed.games) {\r\n        mostPlayed = {\r\n          ...opponent,\r\n          games: opponents[opponent.id]\r\n        };\r\n      }\r\n\r\n      if (opponentRank > strongestOpp.rank)\r\n        strongestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank\r\n        };\r\n\r\n      if (opponentRank < weakestOpp.rank)\r\n        weakestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank\r\n        };\r\n    }\r\n\r\n    numberOfOpponents = 0;\r\n    for (var k in opponents) {\r\n      if (opponents.hasOwnProperty(k)) {\r\n        numberOfOpponents++;\r\n      }\r\n    }\r\n\r\n    return {\r\n      strongestOpp,\r\n      weakestOpp,\r\n      mostPlayed,\r\n      strongestDefeated,\r\n      numberOfOpponents,\r\n      averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n    }\r\n  }\r\n\r\n  generateChartData(games, player) {\r\n    const opponentsInfo = this.computeOpponentsInfo(games, player);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(games, player);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Strongest defeated opponent: <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  isPlayerWin,\r\n  extractPlayerAndOpponent,\r\n  daysDifferenceBetween\r\n} from '../../Shared/utils';\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  computeMiscInfo = (analyzingGames, player) => {\r\n    let mostActiveDay;\r\n    let currentDay = new Date();\r\n    currentDay.setHours(0, 0, 0, 0);\r\n\r\n    let totalLosses = 0;\r\n\r\n    let longestStreak = { streak: 0 }\r\n    let currentStreak = { streak: 0 }\r\n\r\n    let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n    let biggestWin = { diff: 0 }\r\n\r\n    for (let game of analyzingGames) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      // Longest streak\r\n      if (isWin) {\r\n\r\n        currentStreak.streak++;\r\n        currentStreak.start = game;\r\n\r\n        if (!currentStreak.end) currentStreak.end = game;\r\n\r\n        if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n      }\r\n      else currentStreak = { streak: 0 }\r\n\r\n      // Biggest win\r\n      if (isWin) {\r\n        const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n        if (!isNaN(game.outcome.split(\" \")[0])) {\r\n          const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n          if (scoreDiff > biggestWin.diff) {\r\n            biggestWin = {\r\n              game: game,\r\n              opponent: opponent,\r\n              diff: scoreDiff\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // Total losses\r\n      else totalLosses++;\r\n\r\n\r\n      // Most active day\r\n      let gameDay = new Date(game.ended);\r\n      gameDay.setHours(0, 0, 0, 0);\r\n      if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n        currentDay = gameDay;\r\n        gamesOnCurrentDay = 1;\r\n      }\r\n      else {\r\n        gamesOnCurrentDay++;\r\n      }\r\n\r\n      if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n        mostActiveDay = currentDay;\r\n        gamesOnMostActiveDay = gamesOnCurrentDay;\r\n      }\r\n    }\r\n\r\n    let memberSince = new Date(player.registrationDate);\r\n    // Change memberSince to date of first game for player who migrated from old server\r\n    if (analyzingGames.length) {\r\n      let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\r\n      if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n    }\r\n\r\n    let gamesPerDay = 0;\r\n    if (analyzingGames.length) {\r\n      let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n      let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n      gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n    }\r\n\r\n    const uniqueTournaments = analyzingGames\r\n      .filter(game => game.tournament !== null)\r\n      .reduce((result, game) => {\r\n        if (result.indexOf(game.tournament) === -1) {\r\n          result.push(game.tournament);\r\n        }\r\n\r\n        return result;\r\n      }, []).length;\r\n\r\n    return {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      uniqueTournaments,\r\n      totalLosses\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments\r\n    } = this.computeMiscInfo(games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to <GameLink game={longestStreak.end} /></span> : '';\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on <GameLink game={biggestWin.game} />.</li>\r\n    )\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\r\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          <li>Played in {uniqueTournaments} different tournaments.</li>\r\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n          {biggestWinDisplay}\r\n          {totalLosses >= 50 && (\r\n            <li>Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!</li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  applyGameFilters,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"../../Redux/Charts/chartActions\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date();\r\n\r\nclass ChartFilter extends PureComponent {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    endDate: PropTypes.object.isRequired,\r\n    limitEndDate: PropTypes.bool.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired,\r\n  }\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onToggleChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.checked;\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onDateChanged = (name, dates) => {\r\n    const date = dates[0];\r\n    this.onFilterChanged({ [name]: date });\r\n  }\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      endDate,\r\n      startDate,\r\n      ...changes\r\n    })\r\n  }\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\r\n    ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n    : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\r\n      </div>\r\n    )\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"form-group col-sm-6 col-lg-4\">\r\n              <label>Analyze games starting from</label>\r\n              <Flatpickr\r\n                value={this.props.startDate || \"\"}\r\n                className=\"form-control flatpickr-input\"\r\n                name=\"startDate\"\r\n                onChange={(dates) => this.onDateChanged('startDate', dates)}\r\n                options={{\r\n                  dateFormat: \"M d, Y\",\r\n                  minDate: this.props.minDate,\r\n                  maxDate: this.props.maxDate,\r\n                  enableTime: false,\r\n                  enableSeconds: false\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm-6 col-lg-4\">\r\n              <label className=\"form-check\">\r\n                <input name=\"limitEndDate\" className=\"form-check-input\" type=\"checkbox\" id=\"limit_endDate\" value=\"limitEndDate\" defaultChecked={this.props.limitEndDate} onChange={this.onToggleChanged} />\r\n                <label className=\"form-check-label\" htmlFor=\"limit_endDate\">{`limit end date${this.props.limitEndDate ? ' to' : ''}`}</label>\r\n              </label>\r\n              {\r\n                this.props.limitEndDate &&\r\n                <Flatpickr\r\n                  value={this.props.endDate || \"\"}\r\n                  className=\"form-control flatpickr-input\"\r\n                  name=\"endDate\"\r\n                  onChange={(dates) => this.onDateChanged('endDate', dates)}\r\n                  options={{\r\n                    dateFormat: \"M d, Y\",\r\n                    minDate: this.props.minDate,\r\n                    maxDate: this.props.maxDate,\r\n                    enableTime: false,\r\n                    enableSeconds: false\r\n                  }}\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\r\n        {this.renderCheckBoxItems(boardSizeValues.values, boardSize, \"boardSize\", true)}\r\n        {this.renderCheckBoxItems(timeSettingsValues.values, timeSettings, \"timeSettings\")}\r\n        {this.renderCheckBoxItems(handicapValues.values, handicap, \"handicap\")}\r\n        {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\r\n        {this.renderCheckBoxItems(tournamentValues.values, tournament, \"tournament\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\r\n  ...chartsData,\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || maxDate\r\n})\r\nconst maxDispatchToProps = dispatch => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Chart from 'react-google-charts';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport {\r\n  ratingToKyuDan,\r\n  getPlayerRating,\r\n  isPlayerWin,\r\n  extractHistoricalPlayerAndOpponent\r\n} from \"../../Shared/utils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nclass GameHistoryChart extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    insertCurrentRank: PropTypes.bool.isRequired\r\n  }\r\n\r\n  state = {\r\n    scatterPlotChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 50, left: 50, right: 5 },\r\n      colors: [\"#5486d1\", \"#d93344\", \"#41CD64\", \"#9d4dc5\"],\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      series: [\r\n        { type: 'line' },\r\n        { type: 'scatter', pointShape: { type: 'triangle', rotation: 180 } },\r\n        { type: 'scatter', pointShape: { type: 'triangle' } }\r\n      ],\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: {\r\n          color: 'transparent', count: 2\r\n        }, format: \"MMM ''yy\"\r\n      },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: { count: 0 } },\r\n      tooltip: {\r\n        isHtml: true, trigger: 'selection'\r\n      }\r\n    }\r\n  }\r\n\r\n  computeGameHistory = (games, player, insertCurrentRank) => {\r\n    let historicalWinloss = [];\r\n\r\n    if (insertCurrentRank || games.length < 2) {\r\n      historicalWinloss.push({\r\n        date: new Date(),\r\n        playerRating: getPlayerRating(player)\r\n      })\r\n    }\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n      const { historicalPlayer, historicalOpponent } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      historicalWinloss.push(\r\n        {\r\n          isBlack: game.players.black.id === player.id,\r\n          isWin,\r\n          date: new Date(game.ended),\r\n          playerRating: getPlayerRating(historicalPlayer),\r\n          opponentRating: getPlayerRating(historicalOpponent),\r\n          gameId: game.id\r\n        }\r\n      )\r\n    }\r\n    return historicalWinloss;\r\n  }\r\n\r\n  renderChartTooltip = ({ isBlack, isWin, date, playerRating, opponentRating, gameId }) => opponentRating\r\n    ? `<h6><a class=\"${isWin ? 'text-green' : 'text-red'}\" href=\"${configs.OGS_ROOT}game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(date).format(\"MMM D, YYYY HH:mm\")} - ${isWin ? 'Win' : 'Loss'}</a></h6>\r\n      <div><i class=\"fas fa-circle\" style=\"${isBlack ? 'color: #000000;' : 'color: #ffffff;'}\"></i> Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>\r\n      <div><i class=\"fas fa-circle\" style=\"${isBlack ? 'color: #ffffff;' : 'color: #000000;'}\"></i> Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(opponentRating)})</div>`\r\n    : `<h6>Currently</h6>\r\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>`\r\n\r\n  render() {\r\n    const {\r\n      games, player, insertCurrentRank\r\n    } = this.props;\r\n\r\n    const historicalWinloss = this.computeGameHistory(games, player, insertCurrentRank);\r\n\r\n    const chartData = [\r\n      [\r\n        'Date',\r\n        { type: 'number', label: 'Player Rating' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n        { type: 'number', label: 'Opponent Rating (Loss)' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n        { type: 'number', label: 'Opponent Rating (Win)' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n      ],\r\n      ...(\r\n        historicalWinloss.map(\r\n          item => [\r\n            item.date,\r\n            item.playerRating,\r\n            this.renderChartTooltip(item),\r\n            item.isWin ? null : item.opponentRating,\r\n            this.renderChartTooltip(item),\r\n            item.isWin ? item.opponentRating : null,\r\n            this.renderChartTooltip(item),\r\n          ]\r\n        )\r\n      )\r\n    ]\r\n\r\n    return (<Chart\r\n      chartType=\"ComboChart\"\r\n      data={chartData}\r\n      options={this.state.scatterPlotChartOptions}\r\n      width={'100%'}\r\n      height={'400px'}\r\n    />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameHistoryChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\nimport ChartFilter from '../GameFilters/ChartFilter';\r\nimport GameHistoryChart from './GameHistoryChart';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { player, chartsData, games } = this.props;\r\n\r\n    const filteredGamesData = chartsData.results;\r\n    const allGamesData = games.results;\r\n\r\n    const charts = filteredGamesData.length > 0 && (\r\n      <div>\r\n        <GameHistoryChart\r\n          games={filteredGamesData}\r\n          player={player}\r\n          insertCurrentRank={!chartsData.limitEndDate}\r\n        />\r\n\r\n        <WinLoseChart\r\n          games={filteredGamesData}\r\n          player={player}\r\n        />\r\n\r\n        <ResultDistributionChart\r\n          title={`Game results distribution`}\r\n          id={\"game_results\"}\r\n          games={filteredGamesData}\r\n          player={player}\r\n        />\r\n        {\r\n          chartsData.boardSize.length > 1 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          chartsData.timeSettings.length > 1 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        <hr />\r\n        <h2\r\n          id=\"total_games_stats\"\r\n          className=\"text-center\">\r\n          {`${filteredGamesData.length} of ${allGamesData.length} games match the filters`}\r\n        </h2>\r\n\r\n        {charts}\r\n\r\n        {\r\n          allGamesData.length > 0 && (\r\n            <div>\r\n              <h2 className=\"all_time_title\">Lifetime Statistics</h2>\r\n              <OpponentChart\r\n                title={`Unique opponents faced`}\r\n                id={\"opponents_stats\"}\r\n                games={allGamesData}\r\n                player={player}\r\n              />\r\n              <MiscChart\r\n                title={`Miscellaneous`}\r\n                id={\"misc_stats\"}\r\n                games={allGamesData}\r\n                player={player}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Redux/Player/playerActions\";\r\n\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer/Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  player,\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: player.id > -1\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './WebApp/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_PLAYER } from './playerActions';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  ratings: {\r\n    overall: {\r\n      rating: 0\r\n    }\r\n  },\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER): return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case SUCCESS(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FAILURE(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES\r\n} from './gameActions';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from '../promiseUtils';\r\n\r\nimport {\r\n  FETCH_PLAYER\r\n} from '../Player/playerActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER): return {\r\n      ...initialState,\r\n      fetching: state.fetching\r\n    };\r\n\r\n    case REQUEST(FETCH_GAMES): return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 0,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case PROGRESS(FETCH_GAMES): return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case SUCCESS(FETCH_GAMES): return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FAILURE(FETCH_GAMES): return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER } from '../Player/playerActions';\r\n\r\nimport { REQUEST, SUCCESS } from '../promiseUtils';\r\n\r\nimport {\r\n  minDate,\r\n  maxDate,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"./chartActions\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values,\r\n  limitEndDate: false,\r\n  results: []\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return {\r\n      ...state,\r\n      ...payload\r\n    };\r\n\r\n    case REQUEST(FETCH_GAMES):\r\n    case REQUEST(FETCH_PLAYER):\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    case SUCCESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        startDate: payload.start\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nconst OGSApi = {\r\n  fetchUserId: (user) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      if (isNaN(user)) { // Entered username\r\n        axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n          .then(res => res.data)\r\n          .then(function (data) {\r\n            if (data.results.length > 0) {\r\n              resolve(data.results[0].id);\r\n            }\r\n            else {\r\n              reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n            reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n          });\r\n      }\r\n      else {  // Entered user id\r\n        resolve(user);\r\n      }\r\n    });\r\n  },\r\n\r\n  fetchUserDataById: (id) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    });\r\n  },\r\n\r\n  fetchGamePage: (playerId, url) => {\r\n    if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(url)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default OGSApi;","import OGSApi from '../OGSApi/OGSApi';\r\n\r\nexport const OVERRIDE_API = \"OVERRIDE_API\";\r\n\r\nconst reducer = (state = OGSApi, { type, payload }) => type === OVERRIDE_API ? payload : state;\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataReducer\";\r\nimport APIReducer from \"./APIReducer\";\r\n\r\nexport default combineReducers({\r\n  OGSApi: APIReducer,\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './Redux/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducers,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}