{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Statistics/SideBar/SideBar.jsx","OGSApi/OGSApi.js","Data/Charts/chartActions.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","SharedComponents/PlayerLink.jsx","SharedComponents/GameLink.jsx","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/GameFilters/DatePicker.jsx","Statistics/GameFilters/ChartFilter.jsx","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataSourceReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRankDisplay","rank","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","SearchBox","state","updateSearchUser","event","_this","setState","target","value","submit","preventDefault","history","push","document","activeElement","blur","onSubmit","onChange","name","type","placeholder","withRouter","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","index","key","onClick","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","chartsData","games","results","length","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","axios","get","configs","OGS_API_ROOT","then","res","data","id","catch","status","fetchUserDataById","fetchGamePage","playerId","url","undefined","rankedValues","tournamentValues","boardSizeValues","timeSettingsValues","colorValues","handicapValues","minDate","Date","maxDate","defaultActionParams","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","applyGameFilters","arguments","_ref$startDate","_ref$endDate","_ref$ranked","_ref$tournament","_ref$boardSize","_ref$timeSettings","_ref$handicap","_ref$color","dispatch","getState","params","filterFunction","composeFilterFunction","updateChartDataSource","Object","objectSpread","filter","_ref2","game","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","players","black","getGameHandicapState","white","newData","payload","fetchGames","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","promise","fetchingPage","fetchingTotalPage","_promise","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","sent","apply","toConsumableArray","ceil","count","fetchGamesProgress","setHours","fetchGamesSuccess","start","end","t0","console","error","fetchGamesFailure","stop","_x","_x2","fetchPlayerStart","fetchPlayerSuccess","fetchPlayerFailure","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","extractPlayerAndOpponent","opponent","isPlayerWin","white_lost","black_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","result","daysDifferenceBetween","day1","day2","two","getFullYear","getMonth","getDate","one","days","getTime","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","k","opponentRank","hasOwnProperty","averageGamePerOpponent","toFixed","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scoreDiff","gameDay","return","memberSince","registrationDate","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","sizes","chartData5","TimeSettingsChart","times","PlayerLink","OGS_ROOT","img","GameLink","related","detail","moment","format","OpponentChart","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","style","left","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","SharedComponents_PlayerLink","SharedComponents_GameLink","MiscChart","_Analyzer$computeMisc","streakDurationDisplay","biggestWinDisplay","round","DatePicker","onDateChanged","dates","changeStartDate","build_default","dateFormat","enableTime","enableSeconds","ChartFilter","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onStartDateChanged","changes","filterGames","renderCheckBoxItems","validValues","values","renderCheckbox","defaultChecked","htmlFor","_this$props2","GameFilters_DatePicker","filters","ChartList","filteredGamesData","createGameData","allGamesData","charts","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","getElementById","scrollIntoView","getPlayerData","nextProps","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","userIdPromise","userId","userDataPromise","userData","parseInt","registration_date","fetchPlayer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","exact","Boolean","window","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4dc1fd5.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n}\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\"\r\n}\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"input-group\">\r\n          <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n          </span>\r\n        </div>\r\n        <small className=\"tip help-block\"><em>*Tip: mouse over/tap on a chart to see more info.</em></small>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous statistics\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n          {quickLinks}\r\n          <hr />\r\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS</a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({ showQuickLinks: chartsData.results.length > 0 })\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          if (data.results.length > 0) {\r\n            resolve(data.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(url)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState\r\n} from \"../utils\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const RANKED = \"Ranked\";\r\nexport const UNRANKED = \"Unranked\";\r\n\r\nexport const rankedValues = [\"Ranked\", \"Unranked\"]\r\nexport const tournamentValues = [\"Tournament\", \"Non-tournament\"]\r\nexport const boardSizeValues = [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\r\nexport const timeSettingsValues = [\"Blitz\", \"Live\", \"Correspondence\"]\r\nexport const colorValues = [\"Play as Black\", \"Play as White\"]\r\nexport const handicapValues = [\"Even game\", \"Handicap giver\", \"Handicap taker\"]\r\n\r\nexport const minDate = new Date(-8640000000000000);\r\nexport const maxDate = new Date(8640000000000000);\r\n\r\nconst defaultActionParams = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues,\r\n  tournament: tournamentValues,\r\n  boardSize: boardSizeValues,\r\n  timeSettings: timeSettingsValues,\r\n  handicap: handicapValues,\r\n  color: colorValues\r\n}\r\n\r\nexport const applyGameFilters = ({\r\n  startDate = minDate,\r\n  endDate = maxDate,\r\n  ranked = rankedValues,\r\n  tournament = tournamentValues,\r\n  boardSize = boardSizeValues,\r\n  timeSettings = timeSettingsValues,\r\n  handicap = handicapValues,\r\n  color = colorValues\r\n} = defaultActionParams) => (dispatch, getState) => {\r\n  const playerId = getState().player.id;\r\n  const params = {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId\r\n  };\r\n  const filterFunction = composeFilterFunction(params);\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...params,\r\n      results: getState().games.results\r\n        .filter(filterFunction)\r\n    })\r\n  )\r\n}\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  color,\r\n  playerId\r\n}) => (game, index) => {\r\n\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return gameSatisfyRankedRule(game, ranked)\r\n    && gameSatisfyTournamentRule(game, tournament)\r\n    && gameSatisfyBoardSizeRule(game, boardSize)\r\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\r\n    && gameSatisfyHandicapRule(game, handicap, playerId)\r\n    && gameSatisfyColorRule(game, color, playerId);\r\n}\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(\"Ranked\")) return false;\r\n  if (!game.ranked && !ranked.includes(\"Unranked\")) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(\"Tournament\")) return false;\r\n  if (!isTournamentGame && !tournament.includes(\"Non-tournament\")) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n}\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n}\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n}\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(\"Play as Black\")) return false;\r\n  if (game.players.white.id === playerId && !color.includes(\"Play as White\")) return false;\r\n  return true;\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    let games = [];\r\n\r\n    let promise = fetchGamePage(playerId);\r\n    dispatch(fetchGamesStart(promise));\r\n    let data = await promise;\r\n\r\n    games.push(...data.results);\r\n\r\n    let fetchingPage = 0;\r\n    const fetchingTotalPage = Math.ceil(data.count / 50);\r\n\r\n    while (data.next) {\r\n      fetchingPage++;\r\n      let promise = fetchGamePage(playerId, data.next);\r\n      dispatch(fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      games.push(...data.results);\r\n    }\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import { getPlayerRank } from \"./utils\";\r\n\r\nfunction computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeOpponentsInfo(games, playerId) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { rank: 0 };\r\n\r\n  games.forEach(game => {\r\n    const { opponent } = extractPlayerAndOpponent(game, playerId);\r\n    const opponentRank = getPlayerRank(opponent);\r\n    if (isPlayerWin(game, playerId) && opponentRank > strongestDefeated.rank) {\r\n      strongestDefeated = {\r\n        ...opponent,\r\n        rank: opponentRank,\r\n        game,\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        ...opponent,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponentRank > strongestOpp.rank)\r\n      strongestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n\r\n    if (opponentRank < weakestOpp.rank)\r\n      weakestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n  });\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction extractPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = isPlayerWin(game, distributions.id);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nfunction computeMiscInfo(analyzingGames, player) {\r\n  let mostActiveDay;\r\n  let currentDay = new Date();\r\n  currentDay.setHours(0, 0, 0, 0);\r\n\r\n  let totalLosses = 0;\r\n\r\n  let longestStreak = { streak: 0 }\r\n  let currentStreak = { streak: 0 }\r\n\r\n  let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n  let biggestWin = { diff: 0 }\r\n\r\n  for (let game of analyzingGames) {\r\n\r\n    // Longest streak\r\n    if (isPlayerWin(game, player.id)) {\r\n\r\n      currentStreak.streak++;\r\n      currentStreak.start = game;\r\n\r\n      if (!currentStreak.end) currentStreak.end = game;\r\n\r\n      if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n    }\r\n    else currentStreak = { streak: 0 }\r\n\r\n    // Biggest win\r\n    if (isPlayerWin(game, player.id)) {\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      if (!isNaN(game.outcome.split(\" \")[0])) {\r\n        const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n        if (scoreDiff > biggestWin.diff) {\r\n          biggestWin = {\r\n            game: game,\r\n            opponent: opponent,\r\n            diff: scoreDiff\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Total losses\r\n    else totalLosses++;\r\n\r\n\r\n    // Most active day\r\n    let gameDay = new Date(game.ended);\r\n    gameDay.setHours(0, 0, 0, 0);\r\n    if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n      currentDay = gameDay;\r\n      gamesOnCurrentDay = 1;\r\n    }\r\n    else {\r\n      gamesOnCurrentDay++;\r\n    }\r\n\r\n    if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n      mostActiveDay = currentDay;\r\n      gamesOnMostActiveDay = gamesOnCurrentDay;\r\n    }\r\n  }\r\n\r\n  let memberSince = new Date(player.registrationDate);\r\n  // Change memberSince to date of first game for player who migrated from old server\r\n  if (analyzingGames.length) {\r\n    let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\r\n    if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n  }\r\n\r\n  let gamesPerDay = 0;\r\n  if (analyzingGames.length) {\r\n    let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n    let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n    gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n  }\r\n\r\n  const uniqueTournaments = analyzingGames\r\n    .filter(game => game.tournament !== null)\r\n    .reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []).length;\r\n\r\n  return {\r\n    memberSince,\r\n    gamesPerDay,\r\n    longestStreak,\r\n    mostActiveDay,\r\n    gamesOnMostActiveDay,\r\n    biggestWin,\r\n    uniqueTournaments,\r\n    totalLosses\r\n  }\r\n}\r\n\r\nfunction daysDifferenceBetween(day1, day2) {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  computeMiscInfo,\r\n  isPlayerWin,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Losses', `Wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from 'react';\r\n\r\nimport { getPlayerRankDisplay } from \"../Data/utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (\r\n    <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href={href}>\r\n      <img className=\"img-20\" src={img} alt={username} /> {username}\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst GameLink = ({ game }) => (\r\n  <a href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\r\n    {moment(game.ended).format(\"MMM D, YYYY\")}\r\n  </a>\r\n)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { getPlayerRankDisplay, getPlayerRank } from \"../../Data/utils\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, gamesData.playerId);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Scored a triumphant victory against <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport moment from \"moment\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { gamesData, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments\r\n    } = Analyzer.computeMiscInfo(gamesData.games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to  <GameLink game={longestStreak.end} /></span> : '';\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on  <GameLink game={biggestWin.game} />.</li>\r\n    )\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          {totalLosses >= 50 && (\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <p className=\"gratz\">\r\n                  Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!\r\n                      </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\r\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          <li>Played in {uniqueTournaments} different tournaments.</li>\r\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n          {biggestWinDisplay}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DatePicker extends Component {\r\n  static propTypes = {\r\n    minDate: PropTypes.object.isRequired,\r\n    maxDate: PropTypes.object.isRequired,\r\n    changeStartDate: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    date: this.props.minDate\r\n  }\r\n\r\n  onDateChanged = (dates) => {\r\n    const date = dates[0];\r\n    this.setState({ date }, () => this.props.changeStartDate(this.state.date));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <label>Analyze games starting from</label>\r\n        <Flatpickr\r\n          value={this.state.date || \"\"}\r\n          className=\"form-control flatpickr-input\"\r\n          name=\"date\"\r\n          onChange={this.onDateChanged}\r\n          options={{\r\n            dateFormat: \"d M, Y\",\r\n            minDate: this.props.minDate,\r\n            maxDate: this.props.maxDate,\r\n            enableTime: false,\r\n            enableSeconds: false\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst mapReduxStateToProps = ({ games }) => ({\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || new Date()\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(DatePicker);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from \"./DatePicker\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { applyGameFilters } from \"../../Data/Charts/chartActions\";\r\n\r\nimport {\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"../../Data/Charts/chartActions\";\r\n\r\nclass ChartFilter extends Component {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired\r\n  }\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onStartDateChanged = (startDate) => this.onFilterChanged({ startDate });\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      endDate,\r\n      startDate,\r\n      ...changes\r\n    })\r\n  }\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\r\n    ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n    : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\r\n      </div>\r\n    )\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <DatePicker className=\"form-group col-sm-6 col-lg-4\" changeStartDate={this.onStartDateChanged} />\r\n          </div>\r\n        </div>\r\n        {this.renderCheckBoxItems(rankedValues, ranked, \"ranked\")}\r\n        {this.renderCheckBoxItems(boardSizeValues, boardSize, \"boardSize\", true)}\r\n        {this.renderCheckBoxItems(timeSettingsValues, timeSettings, \"timeSettings\")}\r\n        {this.renderCheckBoxItems(handicapValues, handicap, \"handicap\")}\r\n        {this.renderCheckBoxItems(colorValues, color, \"color\")}\r\n        {this.renderCheckBoxItems(tournamentValues, tournament, \"tournament\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ ...chartsData })\r\nconst maxDispatchToProps = dispatch => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\nimport ChartFilter from '../GameFilters/ChartFilter';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredGamesData = this.createGameData(this.props.chartsData.results);\r\n    const allGamesData = this.createGameData(this.props.games.results);\r\n\r\n    const charts = filteredGamesData.games.length > 0 && (\r\n      <div>\r\n        <hr />\r\n        <WinLoseChart\r\n          title={`${filteredGamesData.games.length} of ${allGamesData.games.length} games match the filters`}\r\n          id={\"total_games_stats\"}\r\n          gamesData={filteredGamesData}\r\n        />\r\n        <ResultDistributionChart\r\n          title={`Game results distribution`}\r\n          id={\"game_results\"}\r\n          gamesData={filteredGamesData}\r\n          player={this.props.player}\r\n        />\r\n        {\r\n          this.props.chartsData.boardSize.length > 1 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          this.props.chartsData.timeSettings.length > 1 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        {charts}\r\n\r\n        {\r\n          allGamesData.games.length > 0 && (\r\n            <div>\r\n              <hr />\r\n              <OpponentChart\r\n                title={`Number of opponents faced`}\r\n                id={\"opponents_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n              <MiscChart\r\n                title={`Miscellaneous statistics`}\r\n                id={\"misc_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/g0tStats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\n\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user !== this.props.user) {\r\n      this.props.getPlayerData(nextProps.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: games.results.length > 0\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nimport {\r\n  FETCH_PLAYER_START\r\n} from '../Player/playerActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return { ...initialState, fetching: state.fetching };\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 1,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER_START } from '../Player/playerActions';\r\n\r\nimport {\r\n  minDate,\r\n  maxDate,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"./chartActions\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues,\r\n  tournament: tournamentValues,\r\n  boardSize: boardSizeValues,\r\n  timeSettings: timeSettingsValues,\r\n  handicap: handicapValues,\r\n  color: colorValues,\r\n  results: []\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return {\r\n      ...state,\r\n      ...payload\r\n    };\r\n\r\n    case FETCH_GAMES_START:\r\n    case FETCH_PLAYER_START:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataSourceReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}