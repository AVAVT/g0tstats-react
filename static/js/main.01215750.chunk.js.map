{"version":3,"sources":["Shared/utils.js","WebApp/Header/Header.jsx","WebApp/Welcome.jsx","Redux/Charts/chartActions.js","Redux/promiseUtils.js","Redux/Games/gameActions.js","Redux/Player/playerActions.js","WebApp/SideBar/SearchBox.jsx","WebApp/SideBar/QuickLinks.jsx","WebApp/SideBar/SideBar.jsx","WebApp/LoadingUser/LoadingUser.js","WebApp/Charts/WinLoseChart.js","WebApp/Charts/ResultDistributionChart.js","WebApp/Charts/BoardSizesChart.js","WebApp/Charts/TimeSettingsChart.js","Shared/Components/ExtLink.jsx","Shared/Components/PlayerLink.jsx","Shared/Components/GameLink.jsx","WebApp/Charts/OpponentChart.js","WebApp/Charts/MiscChart.js","WebApp/GameFilters/ChartFilter.jsx","WebApp/Charts/GameHistoryChart.jsx","WebApp/Charts/ChartList.js","WebApp/Footer/Footer.jsx","WebApp/Statistics.jsx","App.jsx","serviceWorker.js","Redux/Player/playerReducer.js","Redux/Games/gameReducer.js","Redux/Charts/chartDataReducer.js","OGSApi/OGSApi.js","Redux/APIReducer.js","Redux/reducers.js","index.js","Redux/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRating","getPlayerRankDisplay","ratingToKyuDan","isPlayerWin","game","playerId","players","black","id","white_lost","white","black_lost","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","daysDifferenceBetween","day1","day2","two","Date","getFullYear","getMonth","getDate","one","days","getTime","ceil","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","minDate","maxDate","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","_getState$chartsData","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","Object","objectSpread","filterFunction","composeFilterFunction","updateChartDataSource","results","filter","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","getGameHandicapState","newData","type","payload","REQUEST","SUCCESS","FAILURE","PROGRESS","fetchGames","cachedGames","arguments","length","undefined","asyncToGenerator","regenerator_default","mark","_callee","reduxState","fetchingPromise","latestId","OGSApi","fetchingPage","data","fetchingTotalPage","shouldContinueFetching","promise","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamePage","fetchGamesStart","fetchGamesProgress","sent","Symbol","iterator","done","value","push","toConsumableArray","abrupt","t0","return","finish","count","setHours","fetchGamesSuccess","start","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","_ref3","fetchPlayer","_ref2","userIdPromise","userId","userDataPromise","userData","fetchUserId","fetchPlayerStart","fetchUserDataById","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","exporterVersion","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","statistics","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","assignGameResultToDistributions","distributions","isWin","outcome","isNaN","split","points","parseFloat","pointDiff","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","_this$generateChartDa","generateChartData","BoardSizesChart","alignment","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","forEach","_this$computeBoardSiz","chartData5","TimeSettingsChart","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","times","ExtLink","children","PlayerLink","OGS_ROOT","img","OGS_API_ROOT","Components_ExtLink","GameLink","related","detail","moment","format","OpponentChart","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","_extractHistoricalPla","opponentRank","k","averageGamePerOpponent","toFixed","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","configs","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","Components_PlayerLink","Components_GameLink","MiscChart","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","scoreDiff","gameDay","memberSince","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","_this$computeMiscInfo","streakDurationDisplay","biggestWinDisplay","round","ChartFilter","expanded","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this2","_this$props2","Fragment","Button","Collapse","isOpen","build_default","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","computeGameHistory","insertCurrentRank","historicalWinloss","playerRating","isBlack","opponentRating","gameId","renderChartTooltip","chartData","label","role","p","html","item","ChartList","filteredGamesData","allGamesData","charts","Charts_GameHistoryChart","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","user","WebApp_Header_Header","WebApp_SideBar_SideBar","showLoading","WebApp_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","WebApp_Welcome","WebApp_Footer_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","WebApp_Statistics","params","exact","Boolean","location","hostname","initialState","reducer","CancelablePromise","resolve","reject","axios","get","then","res","catch","status","url","combineReducers","APIReducer","playerReducer","gamesReducer","chartReducers","createStore","reducers","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01215750.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\n  if (rank < 30)\n    return (30 - rank) + \"k\";\n  else\n    return (rank - 29) + \"d\";\n}\n\nexport const getPlayerRank = (player) => {\n  try {\n    const rating = player.ratings.overall.rating\n    var rank = Math.floor(\n      Math.log(rating / 850.0) / 0.032\n    );\n    return rank;\n  }\n  catch (err) {\n    return player.ranking;\n  }\n}\n\nexport const getPlayerUnroundedRank = (player) => {\n  try {\n    const rating = player.ratings.overall.rating\n    var rank = Math.log(rating / 850.0) / 0.032;\n    return rank;\n  }\n  catch (err) {\n    return player.ranking;\n  }\n}\n\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\n\nexport const getPlayerRankDisplay = (player) => {\n  return rankNumberToKyuDan(getPlayerRank(player));\n}\n\nexport const ratingToKyuDan = (rating) => {\n  var rank = Math.floor(\n    Math.log(rating / 850.0) / 0.032\n  );\n  return rankNumberToKyuDan(rank);\n}\n\nexport const getGameBoardSize = (game) => {\n  if (game.width === 19 && game.height === 19) return \"19x19\";\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\n  else return \"Others\";\n}\n\nexport const getGameTimeSettings = (game) => {\n  if (game.time_per_move < 20) return \"Blitz\";\n  else if (game.time_per_move > 10800) return \"Correspondence\";\n  else return \"Live\"\n}\n\nexport const getGameHandicapState = (game, playerId) => {\n  if (game.handicap === 0) return \"Even game\";\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\n  else return \"Handicap giver\";\n}\n\nexport const isPlayerWin = (game, playerId) => {\n  return ((game.players.black.id === playerId && game.white_lost)\n    || (game.players.white.id === playerId && game.black_lost))\n}\n\nexport const extractPlayerAndOpponent = (game, playerId) => {\n  return game.players.black.id === playerId\n    ? {\n      player: game.players.black,\n      opponent: game.players.white\n    } : {\n      player: game.players.white,\n      opponent: game.players.black\n    }\n}\n\nexport const extractHistoricalPlayerAndOpponent = (game, playerId) => {\n  return game.players.black.id === playerId\n    ? {\n      historicalPlayer: game.historical_ratings.black,\n      historicalOpponent: game.historical_ratings.white\n    } : {\n      historicalPlayer: game.historical_ratings.white,\n      historicalOpponent: game.historical_ratings.black\n    }\n}\n\nexport const daysDifferenceBetween = (day1, day2) => {\n  /* Copa pasta I don't even know if there's any bug here */\n\n  // Copy date parts of the timestamps, discarding the time parts.\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\n\n  // Do the math.\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\n  var millisBetween = two.getTime() - one.getTime();\n  var days = millisBetween / millisecondsPerDay;\n\n  // Round down.\n  return two > one ? Math.floor(days) : Math.ceil(days);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\n\nimport { Helmet } from \"react-helmet\";\nimport { getPlayerRankDisplay } from \"../../Shared/utils\";\n\n\nclass Header extends Component {\n  static propTypes = {\n    player: PropTypes.shape({\n      username: PropTypes.string,\n      rank: PropTypes.number\n    })\n  }\n\n  render() {\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\n    return (\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\n        </a>\n        <h1 className=\"page_title\">{pageTitle}</h1>\n      </nav>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player }) => ({ player })\n\nexport default connect(mapReduxStateToProps)(Header);\n","import React from 'react';\n\nconst Welcome = () => (\n  <div>\n    <h2>Welcome!</h2>\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\n  </div>\n);\n\nexport default Welcome;\n","import {\n  getGameBoardSize,\n  getGameTimeSettings,\n  getGameHandicapState\n} from \"../../Shared/utils\";\n\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\n\nexport const rankedValues = {\n  Ranked: \"Ranked\",\n  Unranked: \"Unranked\",\n  values: [\"Ranked\", \"Unranked\"]\n}\nexport const tournamentValues = {\n  Tournament: \"Tournament\",\n  NonTournament: \"Non-tournament\",\n  values: [\"Tournament\", \"Non-tournament\"]\n}\nexport const boardSizeValues = {\n  Nineteens: \"19x19\",\n  Thirteens: \"13x13\",\n  Nines: \"9x9\",\n  Others: \"Others\",\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\n}\nexport const timeSettingsValues = {\n  Blitz: \"Blitz\",\n  Live: \"Live\",\n  Correspondence: \"Correspondence\",\n  values: [\"Blitz\", \"Live\", \"Correspondence\"]\n}\nexport const colorValues = {\n  Black: \"Play as Black\",\n  White: \"Play as White\",\n  values: [\"Play as Black\", \"Play as White\"]\n}\nexport const handicapValues = {\n  Even: \"Even game\",\n  Taker: \"Handicap taker\",\n  Giver: \"Handicap giver\",\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"]\n}\n\nexport const minDate = new Date(-8640000000000000);\nexport const maxDate = new Date();\n\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\n\n  const playerId = getState().player.id;\n  const dateOfLastGame = getState().games.end;\n\n  const {\n    startDate,\n    endDate,\n    ranked,\n    tournament,\n    boardSize,\n    timeSettings,\n    handicap,\n    color,\n    limitEndDate\n  } = getState().chartsData;\n\n  const latestLimitEndDate = ((filters && filters.hasOwnProperty('limitEndDate')) ? filters.limitEndDate : limitEndDate);\n  const latestEndDate = ((filters && filters.hasOwnProperty('endDate')) ? filters.endDate : endDate);\n\n  const newEndDate = latestLimitEndDate\n    ? (latestEndDate < dateOfLastGame\n      ? latestEndDate\n      : dateOfLastGame)\n    : maxDate;\n\n  const filterFunctionParams = {\n    startDate,\n    ranked,\n    tournament,\n    boardSize,\n    timeSettings,\n    handicap,\n    color,\n    playerId,\n    limitEndDate,\n    ...filters,\n    endDate: newEndDate\n  }\n\n  const filterFunction = composeFilterFunction(filterFunctionParams);\n\n  dispatch(\n    updateChartDataSource({\n      ...filterFunctionParams,\n      results: getState().games.results\n        .filter(filterFunction)\n    })\n  )\n}\n\nconst composeFilterFunction = ({\n  startDate,\n  endDate,\n  ranked,\n  tournament,\n  boardSize,\n  timeSettings,\n  handicap,\n  color,\n  playerId\n}) => (game, index) => {\n  const date = new Date(game.ended);\n  if (date < startDate || date > endDate) return false;\n\n  return gameSatisfyRankedRule(game, ranked)\n    && gameSatisfyTournamentRule(game, tournament)\n    && gameSatisfyBoardSizeRule(game, boardSize)\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\n    && gameSatisfyHandicapRule(game, handicap, playerId)\n    && gameSatisfyColorRule(game, color, playerId);\n}\n\nconst gameSatisfyRankedRule = (game, ranked) => {\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\n  return true;\n}\n\nconst gameSatisfyTournamentRule = (game, tournament) => {\n  const isTournamentGame = game.tournament !== null;\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament)) return false;\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament)) return false;\n  return true;\n}\n\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\n  const gameSize = getGameBoardSize(game);\n  return boardSize.includes(gameSize);\n}\n\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\n  const gameTimeSettings = getGameTimeSettings(game);\n  return timeSettings.includes(gameTimeSettings);\n}\n\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\n  const gameHandicapState = getGameHandicapState(game, playerId);\n  return handicap.includes(gameHandicapState);\n}\n\nconst gameSatisfyColorRule = (game, color, playerId) => {\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black)) return false;\n  if (game.players.white.id === playerId && !color.includes(colorValues.White)) return false;\n  return true;\n}\n\nconst updateChartDataSource = (newData) => ({\n  type: UPDATE_CHART_DATA_SOURCE,\n  payload: newData\n});","export const REQUEST = type => `${type}_PENDING`;\nexport const SUCCESS = type => `${type}_FULFILLED`;\nexport const FAILURE = type => `${type}_REJECTED`;\nexport const PROGRESS = type => `${type}_PROGRESS`;","import { applyGameFilters } from \"../Charts/chartActions\";\n\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from '../promiseUtils';\n\nexport const FETCH_GAMES = \"FETCH_GAMES\";\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date(8640000000000000);\n\nexport const fetchGames = (playerId, cachedGames = []) => async (dispatch, getState) => {\n  const reduxState = getState();\n\n  const fetchingPromise = reduxState.games.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\n\n  const OGSApi = reduxState.OGSApi;\n\n  try {\n    let games = [];\n    let fetchingPage = 0;\n    let data;\n    let fetchingTotalPage = 0;\n    let shouldContinueFetching = true;\n    do {\n      const promise = OGSApi.fetchGamePage(playerId, data ? data.next : undefined);\n      dispatch(fetchingPage === 0 ? fetchGamesStart(promise) : fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\n      data = await promise;\n      for (const game of data.results) {\n        if (game.id !== latestId) games.push(game);\n        else {\n          shouldContinueFetching = false;\n          games = [...games, ...cachedGames];\n          break;\n        }\n      }\n\n      fetchingPage++;\n      fetchingTotalPage = Math.ceil(data.count / 50);\n    } while (data.next && shouldContinueFetching)\n\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\n    startDate.setHours(0, 0, 0, 0);\n\n    dispatch(fetchGamesSuccess({\n      results: games,\n      start: startDate,\n      end: games.length ? new Date(games[0].ended) : maxDate,\n    }));\n  }\n  catch (error) {\n    console.error(error);\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\n  }\n\n  dispatch(applyGameFilters());\n};\n\nexport const updateGames = (playerId) => async (dispatch, getState) => {\n\n}\n\nconst fetchGamesStart = (promise) => ({\n  type: REQUEST(FETCH_GAMES),\n  payload: promise\n})\n\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\n  type: PROGRESS(FETCH_GAMES),\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\n})\n\nconst fetchGamesSuccess = (data) => ({\n  type: SUCCESS(FETCH_GAMES),\n  payload: data,\n});\n\nconst fetchGamesFailure = (error) => ({\n  type: FAILURE(FETCH_GAMES),\n  payload: { error }\n});","import { fetchGames } from \"../Games/gameActions\";\n\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\n\nexport const FETCH_PLAYER = \"FETCH_PLAYER\";\n\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\n  const fetchingPromise = getState().player.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  dispatch(fetchPlayerSuccess(player));\n  dispatch(fetchGames(player.id, games.results));\n}\n\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\n  const reduxState = getState();\n  const fetchingPromise = reduxState.player.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  const OGSApi = reduxState.OGSApi;\n  try {\n    const userIdPromise = OGSApi.fetchUserId(player);\n    dispatch(fetchPlayerStart(userIdPromise));\n    const userId = await userIdPromise;\n\n    const userDataPromise = OGSApi.fetchUserDataById(userId);\n    dispatch(fetchPlayerStart(userDataPromise));\n    const userData = await userDataPromise;\n\n    dispatch(fetchGames(userData.id));\n\n    dispatch(fetchPlayerSuccess({\n      id: userData.id,\n      username: userData.username,\n      rank: parseInt(userData.ranking),\n      ratings: userData.ratings,\n      registrationDate: userData.registration_date\n    }));\n  }\n  catch (error) {\n    console.error(error);\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\n  }\n};\n\nconst fetchPlayerStart = (promise) => ({\n  type: REQUEST(FETCH_PLAYER),\n  payload: promise\n});\n\nconst fetchPlayerSuccess = (data) => ({\n  type: SUCCESS(FETCH_PLAYER),\n  payload: data,\n});\n\nconst fetchPlayerFailure = (error) => ({\n  type: FAILURE(FETCH_PLAYER),\n  payload: { error }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { saveAs } from 'file-saver';\nimport { importPlayer, fetchPlayer } from \"../../Redux/Player/playerActions\";\n\nconst exporterVersion = 0;\n\nclass SearchBox extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  }\n\n  state = {\n    username: \"\"\n  }\n\n  updateSearchUser = (event) => {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  submit = (event) => {\n    event.preventDefault();\n\n    if (this.state.username) {\n      this.props.history.push(`/user/${this.state.username}`)\n      this.props.getPlayerData(this.state.username);\n\n      this.setState({\n        username: ''\n      });\n\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }\n  }\n\n  downloadJSON = () => {\n    const {\n      id,\n      username,\n      ratings,\n      rank,\n      registrationDate\n    } = this.props.player;\n\n    const {\n      start,\n      end,\n      results\n    } = this.props.games;\n\n    const jsonString = JSON.stringify({\n      exporterVersion,\n      player: {\n        id,\n        username,\n        ratings,\n        rank,\n        registrationDate\n      },\n      games: {\n        start,\n        end,\n        results\n      }\n    });\n\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\n    saveAs(blob, `gotstats_${username}.json`);\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\n  }\n\n  readFile = (event) => {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (evt) => {\n      this.readImportedJSON(evt.target.result);\n    };\n    reader.readAsText(file);\n  }\n\n  readImportedJSON = (jsonString) => {\n    const data = JSON.parse(jsonString);\n    this.props.history.push(`/user/${data.player.username}`)\n    this.props.importPlayerData(data);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submit}>\n        <div className=\"form-group\">\n          <div className=\"input-group\">\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\n            <span className=\"input-group-btn\">\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\n            </span>\n          </div>\n        </div>\n\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\n\n        <div className=\"form-group\">\n          <p className=\"d-flex justify-content-between\">\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\nconst mapDispatchToProps = (dispatch) => ({\n  importPlayerData: data => dispatch(importPlayer(data)),\n  getPlayerData: player => dispatch(fetchPlayer(player))\n})\n\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scrollspy from 'react-scrollspy';\n\nconst links = [\n  [\"total_games_stats\", \"Win/Loss ratio\"],\n  [\"game_results\", \"Game results distribution\"],\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\n  [\"time_settings_stats\", \"Performance across time settings\"],\n  [\"opponents_stats\", \"Opponents statistics\"],\n  [\"misc_stats\", \"Miscellaneous information\"]\n]\n\n\nclass QuickLinks extends Component {\n  static propTypes = {\n    scrollToElem: PropTypes.func.isRequired\n  }\n\n  onLinkClicked = (event, link) => {\n    event.preventDefault();\n    this.props.scrollToElem(link);\n  }\n\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\n\n  render() {\n    return (\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\n        {links.map(this.renderLink)}\n      </Scrollspy>\n    );\n  }\n}\n\nexport default QuickLinks;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchBox from './SearchBox';\nimport QuickLinks from './QuickLinks';\n\nimport { connect } from \"react-redux\";\n\nclass SideBar extends Component {\n  static propTypes = {\n    scrollToElem: PropTypes.func.isRequired,\n    showQuickLinks: PropTypes.bool,\n    showDatePicker: PropTypes.bool,\n  }\n\n  render() {\n    const quickLinks = this.props.showQuickLinks ? (\n      <div className=\"navi d-none d-md-block\">\n        <hr />\n        <small className=\"tip help-block\"><em>*Mouse over/tap on a chart to see more info.</em></small>\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\n        <nav className=\"side_nav sticky-top\">\n          <SearchBox />\n\n          {quickLinks}\n\n          <hr />\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS forum</a>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.results.length > 0 })\n\nexport default connect(mapReduxStateToProps)(SideBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport \"./go_loading.css\";\n\nclass LoadingUser extends Component {\n  static propTypes = {\n    errorMessage: PropTypes.string,\n    currentPage: PropTypes.number,\n    totalPages: PropTypes.number\n  }\n\n  render() {\n    const {\n      isFetchingPlayer,\n      errorMessage,\n      currentPage,\n      totalPages\n    } = this.props;\n\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage + 1}${totalMessage}`;\n\n    return (\n      <div className=\"loading_wrapper\">\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\n        </svg>\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({\n  isFetchingPlayer: player.fetching,\n  currentPage: games.fetchingPage,\n  totalPages: games.fetchingTotalPage,\n  errorMessage: player.fetchError || games.fetchError\n})\n\nexport default connect(mapReduxStateToProps)(LoadingUser);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nclass WinLoseChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired,\n    footer: PropTypes.element\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 60 },\n      colors: [\"#000000\", \"#f8f8ff\"],\n      pieSliceTextStyle: { color: \"#d93344\" },\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      animation: {\n        startup: true,\n        easing: 'inout',\n        duration: 500,\n      },\n    },\n    subChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      animation: {\n        startup: true,\n        easing: 'inout',\n        duration: 500,\n      },\n    }\n  }\n\n  computeWinLoseStatistics = (games, playerId) => {\n    var blackGames = 0, whiteGames = 0,\n      blackLosses = 0, whiteLosses = 0;\n    for (let game of games) {\n      if (game.players.black.id === playerId) {\n        blackGames++;\n        if (game.black_lost) {\n          blackLosses++;\n        }\n      }\n      else {\n        whiteGames++;\n        if (game.white_lost) {\n          whiteLosses++;\n        }\n      }\n    };\n\n    return {\n      blackGames,\n      blackLosses,\n      whiteGames,\n      whiteLosses\n    }\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const statistics = this.computeWinLoseStatistics(games, player.id);\n\n    const chartData1 = [\n      ['Color', 'Games'],\n      ['Black', statistics.blackGames],\n      ['White', statistics.whiteGames],\n    ];\n    const chartData2 = [\n      ['Result', 'Games'],\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\n    ];\n    const chartData3 = statistics.blackGames > 0 ? [\n      ['Result', 'Games'],\n      ['Losses', statistics.blackLosses],\n      ['Wins', statistics.blackGames - statistics.blackLosses],\n    ] : null;\n    const chartData4 = statistics.whiteGames > 0 ? [\n      ['Result', 'Games'],\n      ['Losses', statistics.whiteLosses],\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\n    ] : null;\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-sm-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Total</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">As Black</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">As White</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        {this.props.footer}\n      </section>\n    );\n  }\n}\n\nexport default WinLoseChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nimport { isPlayerWin } from '../../Shared/utils';\n\nclass ResultDistributionChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10, left: 0, right: 0 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    columnChartOptions: {\n      backgroundColor: \"transparent\",\n      isStacked: true,\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\n    }\n  }\n\n  assignGameResultToDistributions = (distributions, game) => {\n    const isWin = isPlayerWin(game, distributions.id);\n\n    if (game.outcome === \"Resignation\") {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\n    }\n    else if (game.outcome === \"Timeout\") {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\n    }\n    else if (!isNaN(game.outcome.split(\" \")[0])) {\n      const points = parseFloat(game.outcome.split(\" \")[0], 10);\n      const pointDiff = Math.floor(points / 10);\n\n      var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\n      result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\n\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\n      distributions[result]++;\n    }\n    else {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\n    }\n\n    return distributions;\n  }\n\n  computeWinLoseDistributions = (games, playerId) => {\n    var distributions = {\n      \"id\": playerId,\n      \"Opp+Other\": 0,\n      \"Opp+Count\": 0,\n      \"Opp+Time\": 0,\n      \"Opp+Res\": 0,\n      \"Opp+40+\": 0,\n      \"Opp+30+\": 0,\n      \"Opp+20+\": 0,\n      \"Opp+10+\": 0,\n      \"Opp+0+\": 0,\n      \"Plr+0+\": 0,\n      \"Plr+10+\": 0,\n      \"Plr+20+\": 0,\n      \"Plr+30+\": 0,\n      \"Plr+40+\": 0,\n      \"Plr+Res\": 0,\n      \"Plr+Time\": 0,\n      \"Plr+Count\": 0,\n      \"Plr+Other\": 0\n    };\n\n    return games.reduce(this.assignGameResultToDistributions, distributions);\n  }\n\n  generateChartData(games, playerId) {\n    const distributions = this.computeWinLoseDistributions(games, playerId);\n\n    return {\n      chartData1: [\n        ['Result', 'Games'],\n        ['Timeout', distributions[\"Plr+Time\"]],\n        ['Resign', distributions[\"Plr+Res\"]],\n        ['Scoring', distributions[\"Plr+Count\"]],\n        ['Other', distributions[\"Plr+Other\"]]\n      ],\n      chartData2: [\n        ['Result', 'Games'],\n        ['Timeout', distributions[\"Opp+Time\"]],\n        ['Resign', distributions[\"Opp+Res\"]],\n        ['Scoring', distributions[\"Opp+Count\"]],\n        ['Other', distributions[\"Opp+Other\"]]\n      ],\n      chartData3: [\n        ['Outcome', 'Losses', `Wins`],\n        ['40+', distributions[\"Opp+40+\"], null],\n        ['30+', distributions[\"Opp+30+\"], null],\n        ['20+', distributions[\"Opp+20+\"], null],\n        ['10+', distributions[\"Opp+10+\"], null],\n        ['0+', distributions[\"Opp+0+\"], null],\n        ['0+', null, distributions[\"Plr+0+\"]],\n        ['10+', null, distributions[\"Plr+10+\"]],\n        ['20+', null, distributions[\"Plr+20+\"]],\n        ['30+', null, distributions[\"Plr+30+\"]],\n        ['40+', null, distributions[\"Plr+40+\"]]\n      ]\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const {\n      chartData1,\n      chartData2,\n      chartData3\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Losses</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData1 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Wins</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <div className=\"row\">\n          {\n            chartData3 ? (\n              <div className=\"col-12\">\n                <h3 className=\"text-center\">Final scoring distribution</h3>\n                <Chart\n                  chartType=\"ColumnChart\"\n                  options={this.state.columnChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ResultDistributionChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\nimport { isPlayerWin } from '../../Shared/utils';\n\nclass BoardSizesChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: {\n        top: 60,\n        left: 0,\n        right: 0\n      },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        alignment: 'center',\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    }\n  }\n\n  computeBoardSizes = (games, playerId) => {\n    var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\n      nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\n\n    games.forEach(game => {\n      if (game.width === 19 && game.height === 19) {\n        nineteenGames++;\n        if (!isPlayerWin(game, playerId)) nineteenLosses++;\n      }\n      else if (game.width === 13 && game.height === 13) {\n        thirteenGames++;\n        if (!isPlayerWin(game, playerId)) thirteenLosses++;\n      }\n      else if (game.width === 9 && game.height === 9) {\n        nineGames++;\n        if (!isPlayerWin(game, playerId)) nineLosses++;\n      }\n      else {\n        otherGames++;\n        if (!isPlayerWin(game, playerId)) otherLosses++;\n      }\n    });\n\n    return {\n      nineteenGames, thirteenGames, nineGames, otherGames,\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\n    }\n  }\n\n  generateChartData = (games, playerId) => {\n    const {\n      nineteenGames, thirteenGames, nineGames, otherGames,\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\n    } = this.computeBoardSizes(games, playerId);\n\n    return {\n      chartData1: [\n        ['Size', 'Games'],\n        ['19x19', nineteenGames],\n        ['13x13', thirteenGames],\n        ['9x9', nineGames],\n        ['Other', otherGames],\n      ],\n      chartData2: nineteenGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', nineteenLosses],\n        ['Wins', (nineteenGames - nineteenLosses)],\n      ] : null,\n      chartData3: thirteenGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', thirteenLosses],\n        ['Wins', (thirteenGames - thirteenLosses)],\n      ] : null,\n      chartData4: nineGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', nineLosses],\n        ['Wins', (nineGames - nineLosses)],\n      ] : null,\n      chartData5: otherGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', otherLosses],\n        ['Wins', (otherGames - otherLosses)],\n      ] : null\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const {\n      chartData1,\n      chartData2,\n      chartData3,\n      chartData4,\n      chartData5\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-md-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">19x19</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">13x13</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">9x9</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData5 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Other Sizes</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData5}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default BoardSizesChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nimport { isPlayerWin } from '../../Shared/utils';\n\nclass TimeSettingsChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: {\n        top: 60,\n        left: 0,\n        right: 0\n      },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    }\n  }\n\n  computeTimeSettings = (games, playerId) => {\n    var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\n      blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\n    games.forEach(game => {\n      if (game.time_per_move < 20) {\n        blitzGames++;\n        if (!isPlayerWin(game, playerId)) {\n          blitzLosses++;\n        }\n      }\n      else if (game.time_per_move > 10800) {\n        correspondenceGames++;\n        if (!isPlayerWin(game, playerId)) {\n          correspondenceLosses++;\n        }\n      }\n      else {\n        liveGames++;\n        if (!isPlayerWin(game, playerId)) {\n          liveLosses++;\n        }\n      }\n    });\n\n    return {\n      blitzGames, liveGames, correspondenceGames,\n      blitzLosses, liveLosses, correspondenceLosses\n    }\n  }\n\n  generateChartData(games, playerId) {\n    const times = this.computeTimeSettings(games, playerId);\n\n    return {\n      chartData1: [\n        ['Size', 'Games'],\n        ['Blitz', times.blitzGames],\n        ['Live', times.liveGames],\n        ['Correspondence', times.correspondenceGames]\n      ],\n      chartData2: times.blitzGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.blitzLosses],\n        ['Wins', (times.blitzGames - times.blitzLosses)],\n      ] : null,\n      chartData3: times.liveGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.liveLosses],\n        ['Wins', (times.liveGames - times.liveLosses)],\n      ] : null,\n      chartData4: times.correspondenceGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.correspondenceLosses],\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\n      ] : null\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      chartData1,\n      chartData2,\n      chartData3,\n      chartData4\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-sm-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Blitz</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Live</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Correspondence</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default TimeSettingsChart;\n","import React from \"react\"\n\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\n\nexport default ExtLink;","import React from 'react';\nimport ExtLink from \"./ExtLink\";\n\nimport { getPlayerRankDisplay } from \"../utils\";\nimport { OGS_ROOT, OGS_API_ROOT } from \"../../OGSApi/configs.json\";\n\nconst PlayerLink = ({ player }) => {\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\n\n  return (<ExtLink href={href} title={username}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\n}\n\nexport default PlayerLink;","import React from 'react';\nimport moment from \"moment\";\n\nimport { OGS_ROOT } from \"../../OGSApi/configs.json\";\n\nimport ExtLink from \"./ExtLink\";\n\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\n\nexport default GameLink;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport configs from '../../OGSApi/configs.json';\nimport {\n  isPlayerWin,\n  getPlayerRankDisplay,\n  getPlayerRank,\n  getPlayerRating,\n  extractPlayerAndOpponent,\n  extractHistoricalPlayerAndOpponent\n} from \"../../Shared/utils\";\n\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\nimport GameLink from \"../../Shared/Components/GameLink\";\n\nclass OpponentChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  computeOpponentsInfo = (games, player) => {\n    var opponents = [], numberOfOpponents = 0;\n    var weakestOpp = { rank: 70 };\n    var strongestOpp = { rank: 0 };\n    var mostPlayed = { games: 0 };\n    var strongestDefeated = { ratingDiff: -9999 };\n\n\n    for (const game of games) {\n      const isWin = isPlayerWin(game, player.id);\n\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\n      const { historicalOpponent, historicalPlayer } = extractHistoricalPlayerAndOpponent(game, player.id);\n      const opponentRank = getPlayerRank(opponent);\n\n      if (isWin) {\n        const ratingDiff = getPlayerRating(opponent) - getPlayerRating(player) + getPlayerRating(historicalOpponent) - getPlayerRating(historicalPlayer);\n        if (ratingDiff > strongestDefeated.ratingDiff) strongestDefeated = {\n          ...opponent,\n          ratingDiff,\n          game,\n        };\n      }\n\n      if (!opponents[opponent.id]) {\n        opponents[opponent.id] = 1;\n      }\n      else {\n        opponents[opponent.id]++;\n      }\n\n      if (opponents[opponent.id] > mostPlayed.games) {\n        mostPlayed = {\n          ...opponent,\n          games: opponents[opponent.id]\n        };\n      }\n\n      if (opponentRank > strongestOpp.rank)\n        strongestOpp = {\n          ...opponent,\n          rank: opponentRank\n        };\n\n      if (opponentRank < weakestOpp.rank)\n        weakestOpp = {\n          ...opponent,\n          rank: opponentRank\n        };\n    }\n\n    numberOfOpponents = 0;\n    for (var k in opponents) {\n      if (opponents.hasOwnProperty(k)) {\n        numberOfOpponents++;\n      }\n    }\n\n    return {\n      strongestOpp,\n      weakestOpp,\n      mostPlayed,\n      strongestDefeated,\n      numberOfOpponents,\n      averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\n    }\n  }\n\n  generateChartData(games, player) {\n    const opponentsInfo = this.computeOpponentsInfo(games, player);\n\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\n    const userBarRate = getPlayerRank(this.props.player) - 5;\n\n    return {\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\n      weakestDisp: {\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\n        style: { left: `${weakestBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\n      },\n      userDisp: {\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\n        style: { left: `${userBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\n      },\n      strongestDisp: {\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\n        style: { left: `${strongestBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\n      },\n      mostPlayedDisp: opponentsInfo.mostPlayed,\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      numberOfOpponents,\n      weakestDisp,\n      userDisp,\n      strongestDisp,\n      mostPlayedDisp,\n      strongestDefeatedDisp,\n      averageGamePerOpponent\n    } = this.generateChartData(games, player);\n\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\n\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\n\n        <div className=\"row\">\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\n            <ul className=\"bar_legend\">\n              <li style={weakestDisp.style}>\n                <div>Weakest Opponent</div><span></span>\n              </li>\n              <li style={strongestDisp.style}>\n                <div>Strongest Opponent</div><span></span>\n              </li>\n            </ul>\n            <div className=\"bar_chart\">\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={weakestDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={weakestDisp.title}\n                style={weakestDisp.style}>\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\n              </a>\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={userDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={userDisp.title}\n                style={userDisp.style}>\n                <img src={userDisp.img} alt={userDisp.title} />\n              </a>\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={strongestDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={strongestDisp.title}\n                style={strongestDisp.style}>\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\n              </a>\n            </div>\n            <ul className=\"ruler\">\n              <li><span></span><div><small><em>25k</em></small></div></li>\n              <li><span></span><div><small><em>10k</em></small></div></li>\n              <li><span></span><div><small><em>1d</em></small></div></li>\n              <li><span></span><div><small><em>9d</em></small></div></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ul className=\"info_list\">\n              <li>\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\n              </li>\n              {\n                !!strongestDefeatedDisp.username &&\n                <li>Strongest defeated opponent: <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\n              }\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\n            </ul>\n          </div>\n        </div>\n      </section >\n    );\n  }\n}\n\nexport default OpponentChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from \"moment\";\n\nimport {\n  isPlayerWin,\n  extractPlayerAndOpponent,\n  daysDifferenceBetween\n} from '../../Shared/utils';\n\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\nimport GameLink from \"../../Shared/Components/GameLink\";\n\nclass MiscChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    columnChartOptions: {\n      backgroundColor: \"transparent\",\n      isStacked: true,\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\n    }\n  }\n\n  computeMiscInfo = (analyzingGames, player) => {\n    let mostActiveDay;\n    let currentDay = new Date();\n    currentDay.setHours(0, 0, 0, 0);\n\n    let totalLosses = 0;\n\n    let longestStreak = { streak: 0 }\n    let currentStreak = { streak: 0 }\n\n    let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\n\n    let biggestWin = { diff: 0 }\n\n    for (let game of analyzingGames) {\n      const isWin = isPlayerWin(game, player.id);\n\n      // Longest streak\n      if (isWin) {\n\n        currentStreak.streak++;\n        currentStreak.start = game;\n\n        if (!currentStreak.end) currentStreak.end = game;\n\n        if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\n      }\n      else currentStreak = { streak: 0 }\n\n      // Biggest win\n      if (isWin) {\n        const { opponent } = extractPlayerAndOpponent(game, player.id);\n        if (!isNaN(game.outcome.split(\" \")[0])) {\n          const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\n          if (scoreDiff > biggestWin.diff) {\n            biggestWin = {\n              game: game,\n              opponent: opponent,\n              diff: scoreDiff\n            }\n          }\n        }\n      }\n      // Total losses\n      else totalLosses++;\n\n\n      // Most active day\n      let gameDay = new Date(game.ended);\n      gameDay.setHours(0, 0, 0, 0);\n      if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\n        currentDay = gameDay;\n        gamesOnCurrentDay = 1;\n      }\n      else {\n        gamesOnCurrentDay++;\n      }\n\n      if (gamesOnCurrentDay > gamesOnMostActiveDay) {\n        mostActiveDay = currentDay;\n        gamesOnMostActiveDay = gamesOnCurrentDay;\n      }\n    }\n\n    let memberSince = new Date(player.registrationDate);\n    // Change memberSince to date of first game for player who migrated from old server\n    if (analyzingGames.length) {\n      let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\n      if (firstGameDate < memberSince) memberSince = firstGameDate;\n    }\n\n    let gamesPerDay = 0;\n    if (analyzingGames.length) {\n      let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\n      let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\n      gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\n    }\n\n    const uniqueTournaments = analyzingGames\n      .filter(game => game.tournament !== null)\n      .reduce((result, game) => {\n        if (result.indexOf(game.tournament) === -1) {\n          result.push(game.tournament);\n        }\n\n        return result;\n      }, []).length;\n\n    return {\n      memberSince,\n      gamesPerDay,\n      longestStreak,\n      mostActiveDay,\n      gamesOnMostActiveDay,\n      biggestWin,\n      uniqueTournaments,\n      totalLosses\n    }\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      memberSince,\n      gamesPerDay,\n      longestStreak,\n      mostActiveDay,\n      gamesOnMostActiveDay,\n      biggestWin,\n      totalLosses,\n      uniqueTournaments\n    } = this.computeMiscInfo(games, player);\n\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to <GameLink game={longestStreak.end} /></span> : '';\n    const biggestWinDisplay = biggestWin.game && (\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on <GameLink game={biggestWin.game} />.</li>\n    )\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <ul className=\"info_list\">\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\n          <li>Played in {uniqueTournaments} different tournaments.</li>\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\n          {biggestWinDisplay}\n          {totalLosses >= 50 && (\n            <li>Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!</li>\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default MiscChart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Flatpickr from \"react-flatpickr\";\nimport 'flatpickr/dist/themes/material_red.css'\nimport { connect } from \"react-redux\";\nimport { Collapse, Button } from 'reactstrap';\n\nimport {\n  applyGameFilters,\n  rankedValues,\n  tournamentValues,\n  boardSizeValues,\n  timeSettingsValues,\n  colorValues,\n  handicapValues\n} from \"../../Redux/Charts/chartActions\";\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date();\n\nclass ChartFilter extends PureComponent {\n  static propTypes = {\n    startDate: PropTypes.object.isRequired,\n    endDate: PropTypes.object.isRequired,\n    limitEndDate: PropTypes.bool.isRequired,\n    ranked: PropTypes.array.isRequired,\n    tournament: PropTypes.array.isRequired,\n    boardSize: PropTypes.array.isRequired,\n    timeSettings: PropTypes.array.isRequired,\n    handicap: PropTypes.array.isRequired,\n    color: PropTypes.array.isRequired,\n    filterGames: PropTypes.func.isRequired,\n  }\n  state = {\n    expanded: false\n  }\n\n  onCheckboxChanged = (event) => {\n    const name = event.target.name;\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\n    this.onFilterChanged({\n      [name]: value\n    });\n  }\n\n  onToggleChanged = (event) => {\n    const name = event.target.name;\n    const value = event.target.checked;\n    this.onFilterChanged({\n      [name]: value\n    });\n  }\n\n  onDateChanged = (name, dates) => {\n    const date = dates[0];\n    this.onFilterChanged({ [name]: date });\n  }\n\n  onFilterChanged = (changes) => {\n    const {\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color,\n      startDate,\n      endDate\n    } = this.props;\n\n    this.props.filterGames({\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color,\n      endDate,\n      startDate,\n      ...changes\n    })\n  }\n\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\n    ? (\n      <div className=\"form-group col-sm-6 col-lg-4\">\n        <div className=\"row\">\n          {validValues.map((state, index) => (\n            <div className=\"col-5\" key={index}>\n              {this.renderCheckbox(values, name, state, index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n    : (\n      <div className=\"form-group col-sm-6 col-lg-4\">\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\n      </div>\n    )\n  renderCheckbox = (values, name, state, index) => (\n    <div className=\"form-check\" key={index}>\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\n        {state}\n      </label>\n    </div>\n  )\n\n  render() {\n    const {\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color\n    } = this.props;\n\n    return (\n      <>\n        <Button color=\"secondary\" className=\"mb-3\" onClick={() => this.setState({ expanded: !this.state.expanded })}>Filters {this.state.expanded ? '-' : '+'}</Button>\n        <Collapse isOpen={this.state.expanded}>\n          <form onSubmit={e => e.preventDefault()} className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"row\">\n                <div className=\"form-group col-sm-6 col-lg-4\">\n                  <label>Analyze games starting from</label>\n                  <Flatpickr\n                    value={this.props.startDate || \"\"}\n                    className=\"form-control flatpickr-input\"\n                    name=\"startDate\"\n                    onChange={(dates) => this.onDateChanged('startDate', dates)}\n                    options={{\n                      dateFormat: \"M d, Y\",\n                      minDate: this.props.minDate,\n                      maxDate: this.props.maxDate,\n                      enableTime: false,\n                      enableSeconds: false\n                    }}\n                  />\n                </div>\n                <div className=\"form-group col-sm-6 col-lg-4\">\n                  <label className=\"form-check\">\n                    <input name=\"limitEndDate\" className=\"form-check-input\" type=\"checkbox\" id=\"limit_endDate\" value=\"limitEndDate\" defaultChecked={this.props.limitEndDate} onChange={this.onToggleChanged} />\n                    <label className=\"form-check-label\" htmlFor=\"limit_endDate\">{`limit end date${this.props.limitEndDate ? ' to' : ''}`}</label>\n                  </label>\n                  {\n                    this.props.limitEndDate &&\n                    <Flatpickr\n                      value={this.props.endDate || \"\"}\n                      className=\"form-control flatpickr-input\"\n                      name=\"endDate\"\n                      onChange={(dates) => this.onDateChanged('endDate', dates)}\n                      options={{\n                        dateFormat: \"M d, Y\",\n                        minDate: this.props.minDate,\n                        maxDate: this.props.maxDate,\n                        enableTime: false,\n                        enableSeconds: false\n                      }}\n                    />\n                  }\n                </div>\n              </div>\n            </div>\n            {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\n            {this.renderCheckBoxItems(boardSizeValues.values, boardSize, \"boardSize\", true)}\n            {this.renderCheckBoxItems(timeSettingsValues.values, timeSettings, \"timeSettings\")}\n            {this.renderCheckBoxItems(handicapValues.values, handicap, \"handicap\")}\n            {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\n            {this.renderCheckBoxItems(tournamentValues.values, tournament, \"tournament\")}\n          </form>\n        </Collapse>\n      </>\n    );\n  }\n}\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\n  ...chartsData,\n  minDate: games.start || minDate,\n  maxDate: games.end || maxDate\n})\nconst maxDispatchToProps = dispatch => ({\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\n})\n\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'react-google-charts';\n\nimport configs from '../../OGSApi/configs.json';\nimport {\n  ratingToKyuDan,\n  getPlayerRating,\n  isPlayerWin,\n  extractHistoricalPlayerAndOpponent\n} from \"../../Shared/utils\";\n\nimport moment from \"moment\";\n\nclass GameHistoryChart extends Component {\n  static propTypes = {\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired,\n    insertCurrentRank: PropTypes.bool.isRequired\n  }\n\n  state = {\n    scatterPlotChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 50, left: 50, right: 5 },\n      colors: [\"#5486d1\", \"#d93344\", \"#41CD64\", \"#9d4dc5\"],\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      series: [\n        { type: 'line' },\n        { type: 'scatter', pointShape: { type: 'triangle', rotation: 180 } },\n        { type: 'scatter', pointShape: { type: 'triangle' } }\n      ],\n      hAxis: {\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: {\n          color: 'transparent'\n        }, format: \"MMM ''yy\"\n      },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: { count: 0 } },\n      tooltip: {\n        isHtml: true, trigger: 'selection'\n      }\n    }\n  }\n\n  computeGameHistory = (games, player, insertCurrentRank) => {\n    let historicalWinloss = [];\n\n    if (insertCurrentRank || games.length < 2) {\n      historicalWinloss.push({\n        date: new Date(),\n        playerRating: getPlayerRating(player)\n      })\n    }\n\n    for (const game of games) {\n      const isWin = isPlayerWin(game, player.id);\n      const { historicalPlayer, historicalOpponent } = extractHistoricalPlayerAndOpponent(game, player.id);\n      historicalWinloss.push(\n        {\n          isBlack: game.players.black.id === player.id,\n          isWin,\n          date: new Date(game.ended),\n          playerRating: getPlayerRating(historicalPlayer),\n          opponentRating: getPlayerRating(historicalOpponent),\n          gameId: game.id\n        }\n      )\n    }\n    return historicalWinloss;\n  }\n\n  renderChartTooltip = ({ isBlack, isWin, date, playerRating, opponentRating, gameId }) => opponentRating\n    ? `<h6><a class=\"${isWin ? 'text-green' : 'text-red'}\" href=\"${configs.OGS_ROOT}game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(date).format(\"MMM D, YYYY HH:mm\")} - ${isWin ? 'Win' : 'Loss'}</a></h6>\n      <div><i class=\"fas fa-circle\" style=\"${isBlack ? 'color: #000000;' : 'color: #ffffff;'}\"></i> Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>\n      <div><i class=\"fas fa-circle\" style=\"${isBlack ? 'color: #ffffff;' : 'color: #000000;'}\"></i> Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(opponentRating)})</div>`\n    : `<h6>Currently</h6>\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>`\n\n  render() {\n    const {\n      games, player, insertCurrentRank\n    } = this.props;\n\n    const historicalWinloss = this.computeGameHistory(games, player, insertCurrentRank);\n\n    const chartData = [\n      [\n        'Date',\n        { type: 'number', label: 'Player Rating' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n        { type: 'number', label: 'Opponent Rating (Loss)' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n        { type: 'number', label: 'Opponent Rating (Win)' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n      ],\n      ...(\n        historicalWinloss.map(\n          item => [\n            item.date,\n            item.playerRating,\n            this.renderChartTooltip(item),\n            item.isWin ? null : item.opponentRating,\n            this.renderChartTooltip(item),\n            item.isWin ? item.opponentRating : null,\n            this.renderChartTooltip(item),\n          ]\n        )\n      )\n    ]\n\n    return (<Chart\n      chartType=\"ComboChart\"\n      data={chartData}\n      options={this.state.scatterPlotChartOptions}\n      width={'100%'}\n      height={'400px'}\n    />\n    );\n  }\n}\n\nexport default GameHistoryChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport WinLoseChart from './WinLoseChart';\nimport ResultDistributionChart from './ResultDistributionChart';\nimport BoardSizesChart from './BoardSizesChart';\nimport TimeSettingsChart from './TimeSettingsChart';\nimport OpponentChart from './OpponentChart';\nimport MiscChart from './MiscChart';\nimport ChartFilter from '../GameFilters/ChartFilter';\nimport GameHistoryChart from './GameHistoryChart';\n\n\nclass ChartList extends Component {\n  static propTypes = {\n    games: PropTypes.object.isRequired,\n    chartsData: PropTypes.object.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { player, chartsData, games } = this.props;\n\n    const filteredGamesData = chartsData.results;\n    const allGamesData = games.results;\n\n    const charts = filteredGamesData.length > 0 && (\n      <div>\n        <GameHistoryChart\n          games={filteredGamesData}\n          player={player}\n          insertCurrentRank={!chartsData.limitEndDate}\n        />\n\n        <WinLoseChart\n          games={filteredGamesData}\n          player={player}\n        />\n\n        <ResultDistributionChart\n          title={`Game results distribution`}\n          id={\"game_results\"}\n          games={filteredGamesData}\n          player={player}\n        />\n        {\n          chartsData.boardSize.length > 1 && (\n            <BoardSizesChart\n              title={`Performance across board sizes`}\n              id={\"board_sizes_stats\"}\n              games={filteredGamesData}\n              player={player}\n            />\n          )\n        }\n        {\n          chartsData.timeSettings.length > 1 && (\n            <TimeSettingsChart\n              title={`Performance across time settings`}\n              id={\"time_settings_stats\"}\n              games={filteredGamesData}\n              player={player}\n            />\n          )\n        }\n      </div>\n    )\n\n\n    return (\n      <div>\n        <ChartFilter />\n\n        <hr />\n        <h2\n          id=\"total_games_stats\"\n          className=\"text-center\">\n          {`${filteredGamesData.length} of ${allGamesData.length} games match the filters`}\n        </h2>\n\n        {charts}\n\n        {\n          allGamesData.length > 0 && (\n            <div>\n              <h2 className=\"all_time_title\">Lifetime Statistics</h2>\n              <OpponentChart\n                title={`Unique opponents faced`}\n                id={\"opponents_stats\"}\n                games={allGamesData}\n                player={player}\n              />\n              <MiscChart\n                title={`Miscellaneous`}\n                id={\"misc_stats\"}\n                games={allGamesData}\n                player={player}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\n\nexport default connect(mapReduxStateToProps)(ChartList);\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\n        </div>\n        <div className=\"col-sm-4 text-right\">\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Welcome from './Welcome';\nimport SideBar from './SideBar/SideBar';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport { fetchPlayer } from \"../Redux/Player/playerActions\";\n\nimport LoadingUser from './LoadingUser/LoadingUser';\nimport ChartList from './Charts/ChartList';\nimport Footer from './Footer/Footer';\n\nclass Statistics extends Component {\n  static propTypes = {\n    getPlayerData: PropTypes.func.isRequired,\n    player: PropTypes.object.isRequired,\n    user: PropTypes.string,\n    showLoading: PropTypes.bool.isRequired,\n    showStatistics: PropTypes.bool.isRequired,\n  }\n\n  scrollToElem(id) {\n    document.getElementById(id).scrollIntoView();\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.props.getPlayerData(this.props.user);\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <div className=\"row\">\n            <SideBar scrollToElem={this.scrollToElem} />\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\n              {this.props.showLoading\n                ? <LoadingUser />\n                : this.props.showStatistics\n                  ? <ChartList />\n                  : <Welcome />}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </main>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({\n  player,\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\n  showStatistics: player.id > -1\n})\n\nconst mapReduxDispatchToProps = dispatch => ({\n  getPlayerData: player => dispatch(fetchPlayer(player))\n})\n\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './WebApp/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_PLAYER } from './playerActions';\n\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\n\nconst initialState = {\n  id: -1,\n  username: \"\",\n  ratings: {\n    overall: {\n      rating: 0\n    }\n  },\n  rank: 0,\n  fetching: null,\n  fetchError: \"\",\n  registrationDate: null\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REQUEST(FETCH_PLAYER): return {\n      ...initialState,\n      fetching: payload,\n      fetchError: \"\"\n    }\n\n    case SUCCESS(FETCH_PLAYER): return {\n      ...state,\n      fetching: null,\n      ...payload\n    }\n\n    case FAILURE(FETCH_PLAYER): return {\n      ...state,\n      fetching: null,\n      fetchError: payload.error\n    }\n\n    default: return state;\n  }\n}\n\nexport default reducer;","import {\n  FETCH_GAMES\n} from './gameActions';\n\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from '../promiseUtils';\n\nimport {\n  FETCH_PLAYER\n} from '../Player/playerActions';\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date(8640000000000000);\n\nconst initialState = {\n  results: [],\n  fetching: null,\n  fetchingPage: 0,\n  fetchingTotalPage: 0,\n  fetchError: \"\",\n  start: minDate,\n  end: maxDate\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REQUEST(FETCH_PLAYER): return {\n      ...initialState,\n      fetching: state.fetching\n    };\n\n    case REQUEST(FETCH_GAMES): return {\n      ...state,\n      fetching: payload,\n      fetchingPage: 0,\n      fetchingTotalPage: 0,\n      fetchError: \"\",\n      start: minDate,\n      end: maxDate\n    }\n\n    case PROGRESS(FETCH_GAMES): return {\n      ...state,\n      ...payload\n    }\n\n    case SUCCESS(FETCH_GAMES): return {\n      ...state,\n      fetching: null,\n      ...payload,\n    }\n\n    case FAILURE(FETCH_GAMES): return {\n      ...state,\n      fetching: null,\n      fetchError: payload.error\n    }\n\n    default: return state;\n  }\n}\n\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\nimport { FETCH_GAMES } from \"../Games/gameActions\";\nimport { FETCH_PLAYER } from '../Player/playerActions';\n\nimport { REQUEST, SUCCESS } from '../promiseUtils';\n\nimport {\n  minDate,\n  maxDate,\n  rankedValues,\n  tournamentValues,\n  boardSizeValues,\n  timeSettingsValues,\n  colorValues,\n  handicapValues\n} from \"./chartActions\";\n\nconst initialState = {\n  startDate: minDate,\n  endDate: maxDate,\n  ranked: rankedValues.values,\n  tournament: tournamentValues.values,\n  boardSize: boardSizeValues.values,\n  timeSettings: timeSettingsValues.values,\n  handicap: handicapValues.values,\n  color: colorValues.values,\n  limitEndDate: false,\n  results: []\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case UPDATE_CHART_DATA_SOURCE: return {\n      ...state,\n      ...payload\n    };\n\n    case REQUEST(FETCH_GAMES):\n    case REQUEST(FETCH_PLAYER):\n      return {\n        ...initialState\n      };\n\n    case SUCCESS(FETCH_GAMES):\n      return {\n        ...state,\n        startDate: payload.start\n      }\n    default: return state;\n  }\n}\n\nexport default reducer;","import axios from 'axios';\nimport configs from './configs.json';\nimport CancelablePromise from 'cancelable-promise';\n\nconst OGSApi = {\n  fetchUserId: (user) => {\n    return new CancelablePromise((resolve, reject) => {\n      if (isNaN(user)) { // Entered username\n        axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\n          .then(res => res.data)\n          .then(function (data) {\n            if (data.results.length > 0) {\n              resolve(data.results[0].id);\n            }\n            else {\n              reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\n            }\n          })\n          .catch(function (err) {\n            reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\n          });\n      }\n      else {  // Entered user id\n        resolve(user);\n      }\n    });\n  },\n\n  fetchUserDataById: (id) => {\n    return new CancelablePromise((resolve, reject) => {\n      axios.get(`${configs.OGS_API_ROOT}${id}`)\n        .then(res => res.data)\n        .then(function (data) {\n          resolve(data);\n        })\n        .catch(function (err) {\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\n        });\n    });\n  },\n\n  fetchGamePage: (playerId, url) => {\n    if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\n\n    return new CancelablePromise((resolve, reject) => {\n      axios.get(url)\n        .then(res => res.data)\n        .then(function (data) {\n          resolve(data);\n        })\n        .catch(function (err) {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default OGSApi;","import OGSApi from '../OGSApi/OGSApi';\n\nexport const OVERRIDE_API = \"OVERRIDE_API\";\n\nconst reducer = (state = OGSApi, { type, payload }) => type === OVERRIDE_API ? payload : state;\n\nexport default reducer;","import { combineReducers } from \"redux\";\nimport playerReducer from \"./Player/playerReducer\";\nimport gamesReducer from \"./Games/gameReducer\";\nimport chartReducers from \"./Charts/chartDataReducer\";\nimport APIReducer from \"./APIReducer\";\n\nexport default combineReducers({\n  OGSApi: APIReducer,\n  player: playerReducer,\n  games: gamesReducer,\n  chartsData: chartReducers\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './Redux/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport reducers from \"./reducers\";\n\nexport const createReduxStore = () => {\n  return createStore(\n    reducers,\n    composeWithReduxDevTools(\n      applyMiddleware(reduxThunk)\n    )\n  );\n}"],"sourceRoot":""}