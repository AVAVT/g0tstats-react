{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Data/Charts/chartActions.js","Statistics/SideBar/DatePicker.jsx","Statistics/SideBar/SideBar.jsx","OGSApi/OGSApi.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataSourceReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRankDisplay","rank","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","SearchBox","state","updateSearchUser","event","_this","setState","target","value","submit","preventDefault","history","push","document","activeElement","blur","onSubmit","onChange","name","type","required","placeholder","withRouter","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","index","key","onClick","e","Scrollspy_default","items","map","currentClassName","minDate","Date","maxDate","chooseChartDataTimeRange","arguments","length","undefined","from","to","_ref$from","_ref$to","dispatch","getState","updateChartDataSource","games","results","filter","game","date","ended","newData","payload","DatePicker","onDateChanged","dates","filterGames","changeStartDate","build_default","options","dateFormat","enableTime","enableSeconds","start","end","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","datePicker","showDatePicker","SideBar_DatePicker","SideBar_SearchBox","chartsData","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","$","get","configs","OGS_API_ROOT","done","res","id","fail","status","fetchUserDataById","fetchGamePage","playerId","url","fetchGames","Object","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","promise","data","fetchingPage","fetchingTotalPage","_promise","startDate","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","sent","apply","toConsumableArray","ceil","count","fetchGamesProgress","setHours","fetchGamesSuccess","t0","console","error","fetchGamesFailure","stop","_x","_x2","_ref2","fetchPlayerStart","fetchPlayerSuccess","fetchPlayerFailure","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","width","height","cx","cy","r","strokeWidth","fill","fetchError","isPlayerWin","players","black","white_lost","white","black_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","result","daysDifferenceBetween","day1","day2","two","getFullYear","getMonth","getDate","one","days","getTime","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","time_per_move","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","k","opponent","extractPlayerAndOpponent","opponentRank","objectSpread","related","detail","hasOwnProperty","averageGamePerOpponent","toFixed","computeMiscInfo","allGames","analyzingGames","mostActiveDay","currentDay","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","gameDay","return","memberSince","registrationDate","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","color","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","footer","ResultDistributionChart","pieChartOptions","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","sizes","chartData5","TimeSettingsChart","times","OpponentChart","opponentsInfo","weakestBarRate","strongestBarRate","userBarRate","weakestLegendStyle","marginLeft","strongestLegendStyle","weakestDisp","OGS_ROOT","style","left","img","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","gameHref","rel","data-toggle","data-placement","moment","format","MiscChart","createLinkToGame","_Analyzer$computeMisc","streakDurationDisplay","round","ChartList","createGameData","lostGames","loseCount","currentGame","rankedGames","ranked","unrankedGames","evenGames","handicap","tournamentGames","tournament","uniqueTournaments","indexOf","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","animate","scrollTop","offset","getPlayerData","nextProps","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","userIdPromise","userId","userDataPromise","userData","parseInt","registration_date","fetchPlayer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","params","exact","Boolean","window","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b269f533.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n          <h1 className=\"page_title\">{pageTitle}</h1>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.history.push(`/user/${this.state.username}`)\r\n\r\n    this.setState({\r\n      username: ''\r\n    });\r\n\r\n    if (document.activeElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"input-group\">\r\n          <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" required placeholder=\"Username or ID\" className=\"form-control\" />\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n          </span>\r\n        </div>\r\n        <small className=\"tip help-block\"><em>*Tip: mouse over/tap on a chart to see more info.</em></small>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Total games played on OGS\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"ranked_games_stats\", \"Ranked games\"],\r\n  [\"unranked_games_stats\", \"Unranked games\"],\r\n  [\"even_games_stats\", \"Even games\"],\r\n  [\"tournament_games_stats\", \"Performance in tournaments\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous statistics\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","export const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const chooseChartDataTimeRange = ({ from = minDate, to = maxDate } = { from: minDate, to: maxDate }) => (dispatch, getState) => {\r\n  dispatch(\r\n    updateChartDataSource(\r\n      getState().games.results\r\n        .filter(game => {\r\n          const date = new Date(game.ended);\r\n          return date >= from && date <= to;\r\n        })\r\n    )\r\n  )\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { chooseChartDataTimeRange } from \"../../Data/Charts/chartActions\";\r\n\r\nclass DatePicker extends Component {\r\n  static propTypes = {\r\n    minDate: PropTypes.object.isRequired,\r\n    maxDate: PropTypes.object.isRequired,\r\n    changeStartDate: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    date: this.props.minDate\r\n  }\r\n\r\n  onDateChanged = (dates) => {\r\n    const date = dates[0];\r\n    this.setState({ date });\r\n  }\r\n\r\n  filterGames = (event) => {\r\n    event.preventDefault();\r\n    this.props.changeStartDate(this.state.date);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.filterGames}>\r\n        <p>Analyze games starting from</p>\r\n        <div className=\"input-group\">\r\n          <Flatpickr\r\n            value={this.state.date || \"\"}\r\n            className=\"form-control flatpickr-input\"\r\n            name=\"date\"\r\n            onChange={this.onDateChanged}\r\n            options={{\r\n              dateFormat: \"d M, Y\",\r\n              minDate: this.props.minDate,\r\n              maxDate: this.props.maxDate,\r\n              enableTime: false,\r\n              enableSeconds: false\r\n            }}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button type=\"submit\" className=\"input-group-btn btn btn-primary\"><i className=\"fa fa-search\"></i></button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst mapReduxStateToProps = ({ games }) => ({\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || new Date()\r\n})\r\nconst mapReduxDispatchToProps = (dispatch) => ({\r\n  changeStartDate: date => dispatch(chooseChartDataTimeRange({ from: date }))\r\n});\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(DatePicker);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from './DatePicker';\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi hidden-sm hidden-xs\">\r\n        <hr />\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n    const datePicker = this.props.showDatePicker ? (\r\n      <div className=\"hidden-sm hidden-xs\">\r\n        <hr />\r\n        <DatePicker />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n          {quickLinks}\r\n          {datePicker}\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({ showQuickLinks: chartsData.length > 0, showDatePicker: games.results.length > 0 })\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import $ from 'jquery';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      $.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .done(function (res) {\r\n          if (res.results.length > 0) {\r\n            resolve(res.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .fail(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    $.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .done(function (res) {\r\n        resolve(res);\r\n      })\r\n      .fail(function (err) {\r\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    $.get(url)\r\n      .done(function (res) {\r\n        resolve(res);\r\n      })\r\n      .fail(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { chooseChartDataTimeRange } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    let games = [];\r\n\r\n    let promise = fetchGamePage(playerId);\r\n    dispatch(fetchGamesStart(promise));\r\n    let data = await promise;\r\n\r\n    games.push(...data.results);\r\n\r\n    let fetchingPage = 0;\r\n    const fetchingTotalPage = Math.ceil(data.count / 50);\r\n\r\n    while (data.next) {\r\n      fetchingPage++;\r\n      let promise = fetchGamePage(playerId, data.next);\r\n      dispatch(fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      games.push(...data.results);\r\n    }\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(chooseChartDataTimeRange());\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import { getPlayerRank } from \"./utils\";\r\n\r\nfunction computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeOpponentsInfo(games, playerId) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { rank: 0 };\r\n\r\n  games.forEach(game => {\r\n    const { opponent } = extractPlayerAndOpponent(game, playerId);\r\n    const opponentRank = getPlayerRank(opponent);\r\n    if (isPlayerWin(game, playerId) && opponentRank > strongestDefeated.rank) {\r\n      strongestDefeated = {\r\n        ...opponent,\r\n        url: game.related.detail.split(\"games/\")[1],\r\n        date: game.ended,\r\n        rank: opponentRank,\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        ...opponent,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponentRank > strongestOpp.rank)\r\n      strongestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n\r\n    if (opponentRank < weakestOpp.rank)\r\n      weakestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n  });\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction extractPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = (game.players.black.id === distributions.id && game.white_lost) || (game.players.white.id === distributions.id && game.black_lost);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nfunction computeMiscInfo(allGames, analyzingGames, player) {\r\n  let mostActiveDay;\r\n  let currentDay = new Date();\r\n  currentDay.setHours(0, 0, 0, 0);\r\n\r\n  let longestStreak = { streak: 0 }\r\n  let currentStreak = { streak: 0 }\r\n\r\n  let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n  for (let game of analyzingGames) {\r\n\r\n    // Longest streak\r\n    if (isPlayerWin(game, player.id)) {\r\n\r\n      currentStreak.streak++;\r\n      currentStreak.start = game;\r\n\r\n      if (!currentStreak.end) currentStreak.end = game;\r\n\r\n      if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n    }\r\n    else currentStreak = { streak: 0 }\r\n\r\n\r\n    // Most active day\r\n    let gameDay = new Date(game.ended);\r\n    gameDay.setHours(0, 0, 0, 0);\r\n    if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n      currentDay = gameDay;\r\n      gamesOnCurrentDay = 1;\r\n    }\r\n    else {\r\n      gamesOnCurrentDay++;\r\n    }\r\n\r\n    if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n      mostActiveDay = currentDay;\r\n      gamesOnMostActiveDay = gamesOnCurrentDay;\r\n    }\r\n  }\r\n\r\n  let memberSince = new Date(player.registrationDate);\r\n  // Change memberSince to date of first game for player who migrated from old server\r\n  if (allGames.length) {\r\n    let firstGameDate = new Date(allGames[allGames.length - 1].started);\r\n    if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n  }\r\n\r\n  let gamesPerDay = 0;\r\n  if (analyzingGames.length) {\r\n    let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n    let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n    gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n  }\r\n\r\n  return {\r\n    memberSince: memberSince,\r\n    gamesPerDay: gamesPerDay,\r\n    longestStreak: longestStreak,\r\n    mostActiveDay: mostActiveDay,\r\n    gamesOnMostActiveDay: gamesOnMostActiveDay\r\n  }\r\n}\r\n\r\nfunction daysDifferenceBetween(day1, day2) {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  computeMiscInfo,\r\n  isPlayerWin,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Games opponent wins', `Games ${this.props.player.username} wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport moment from 'moment';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, gamesData.playerId);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = opponentsInfo.weakestOpp.rank - 5;\r\n    const strongestBarRate = opponentsInfo.strongestOpp.rank - 5;\r\n    const userBarRate = this.props.player.rank - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestLegendStyle: { marginLeft: `${weakestBarRate * 3.03030303}%` },\r\n      strongestLegendStyle: { marginLeft: `${(strongestBarRate - weakestBarRate) * 3.03030303}%` },\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.mostPlayed.id}/${opponentsInfo.mostPlayed.username}`,\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.mostPlayed.id}/icon?size=32`,\r\n        username: `${opponentsInfo.mostPlayed.username} (${getPlayerRankDisplay(opponentsInfo.mostPlayed)})`,\r\n        games: opponentsInfo.mostPlayed.games\r\n      },\r\n      strongestDefeatedDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestDefeated.id}/${opponentsInfo.strongestDefeated.username}`,\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestDefeated.id}/icon?size=32`,\r\n        username: `${opponentsInfo.strongestDefeated.username} (${getPlayerRankDisplay(opponentsInfo.strongestDefeated)})`,\r\n        date: opponentsInfo.strongestDefeated.date,\r\n        gameHref: `http://online-go.com/game/${opponentsInfo.strongestDefeated.url}`\r\n      },\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestLegendStyle,\r\n      strongestLegendStyle,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestLegendStyle}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestLegendStyle}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with:\r\n                {' '}\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={mostPlayedDisp.href}>\r\n                  <img className=\"img-20\" src={mostPlayedDisp.img} alt={mostPlayedDisp.username} />\r\n                  {' '}\r\n                  {mostPlayedDisp.username}\r\n                </a>\r\n                {' '}\r\n                in {mostPlayedDisp.games} games.\r\n              </li>\r\n\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                (<li>\r\n                  Scored a triumphant victory against\r\n                {' '}\r\n                  <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href={strongestDefeatedDisp.href}>\r\n                    <img className=\"img-20\" src={strongestDefeatedDisp.img} alt={strongestDefeatedDisp.username} />\r\n                    {' '}\r\n                    {strongestDefeatedDisp.username}\r\n                  </a>\r\n                  {' '}\r\n                  on <a href={strongestDefeatedDisp.gameHref} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{moment(strongestDefeatedDisp.date).format('MMM DD, YYYY')}</a>.\r\n              </li>)\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport moment from \"moment\";\r\nimport { OGS_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    allGames: PropTypes.array.isRequired,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  createLinkToGame = (game) => <a href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{moment(game.ended).format(\"DD MMM, YYYY\")}</a>\r\n\r\n  render() {\r\n    const { allGames, gamesData, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay\r\n    } = Analyzer.computeMiscInfo(allGames, gamesData.games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from {this.createLinkToGame(longestStreak.start)} to {this.createLinkToGame(longestStreak.end)}</span> : '';\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          <ul className=\"info_list\">\r\n            <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n            <li>Average games per day: {Math.round(gamesPerDay * 100) / 100}.</li>\r\n            <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n            <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    chartsData: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const gamesData = this.createGameData(this.props.chartsData);\r\n\r\n    const lostGames = gamesData.games.reduce((loseCount, currentGame) => {\r\n      if (!Analyzer.isPlayerWin(currentGame, this.props.player.id)) {\r\n        return loseCount + 1;\r\n      }\r\n      else {\r\n        return loseCount;\r\n      }\r\n    }, 0);\r\n\r\n    const rankedGames = gamesData.games.filter(game => game.ranked);\r\n    const unrankedGames = gamesData.games.filter(game => !game.ranked);\r\n    const evenGames = gamesData.games.filter(game => game.handicap === 0);\r\n    const tournamentGames = gamesData.games.filter(game => game.tournament !== null);\r\n    const uniqueTournaments = tournamentGames.reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []);\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Total games played on OGS: ${gamesData.games.length}`}\r\n              id={\"total_games_stats\"}\r\n              gamesData={gamesData}\r\n              footer={\r\n                lostGames >= 50 ? (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xs-12\">\r\n                      <p className=\"gratz\">\r\n                        Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <ResultDistributionChart\r\n              title={`Game results distribution`}\r\n              id={\"game_results\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          rankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Ranked Games: ${rankedGames.length}`}\r\n              id={\"ranked_games_stats\"}\r\n              gamesData={this.createGameData(rankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          unrankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Unranked Games: ${unrankedGames.length}`}\r\n              id={\"unranked_games_stats\"}\r\n              gamesData={this.createGameData(unrankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          evenGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Even Games: ${evenGames.length}`}\r\n              id={\"even_games_stats\"}\r\n              gamesData={this.createGameData(evenGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          tournamentGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Participated in ${uniqueTournaments.length} tournaments`}\r\n              id={\"tournament_games_stats\"}\r\n              gamesData={this.createGameData(tournamentGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <OpponentChart\r\n              title={`Number of opponents faced`}\r\n              id={\"opponents_stats\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <MiscChart\r\n              title={`Miscellaneous statistics`}\r\n              id={\"misc_stats\"}\r\n              allGames={this.props.games.results}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/g0tStats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport $ from \"jquery\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    $('html,body').animate({ scrollTop: $(\"#\" + id).offset().top }, 'fast');\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user !== this.props.user) {\r\n      this.props.getPlayerData(nextProps.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: games.results.length > 0\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: false,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 1,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START } from \"../Games/gameActions\";\r\n\r\nconst initialState = []\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return payload;\r\n    case FETCH_GAMES_START: return initialState;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataSourceReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}