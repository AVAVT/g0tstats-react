{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","OGSApi/OGSApi.js","Data/Charts/chartActions.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Statistics/SideBar/SideBar.jsx","Statistics/LoadingUser/LoadingUser.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","SharedComponents/ExtLink.jsx","SharedComponents/PlayerLink.jsx","SharedComponents/GameLink.jsx","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/GameFilters/ChartFilter.jsx","Statistics/Charts/GameHistoryChart.jsx","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRating","getPlayerRankDisplay","ratingToKyuDan","isPlayerWin","game","playerId","players","black","id","white_lost","white","black_lost","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","daysDifferenceBetween","day1","day2","two","Date","getFullYear","getMonth","getDate","one","days","getTime","ceil","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","axios","get","configs","OGS_API_ROOT","then","res","data","results","length","catch","status","fetchUserDataById","fetchGamePage","url","undefined","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","minDate","maxDate","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","_getState$chartsData","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","Object","objectSpread","filterFunction","composeFilterFunction","updateChartDataSource","filter","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","getGameHandicapState","newData","type","payload","fetchGames","cachedGames","arguments","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","latestId","fetchingPage","fetchingTotalPage","shouldContinueFetching","promise","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","fetchGamesProgress","sent","Symbol","iterator","done","value","push","toConsumableArray","abrupt","t0","return","finish","count","setHours","fetchGamesSuccess","start","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","_ref3","fetchPlayer","_ref2","userIdPromise","userId","userDataPromise","userData","fetchPlayerStart","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","exporterVersion","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","statistics","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","_this$generateChartDa","generateChartData","BoardSizesChart","alignment","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","forEach","_this$computeBoardSiz","chartData5","TimeSettingsChart","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","times","ExtLink","children","PlayerLink","OGS_ROOT","img","SharedComponents_ExtLink","GameLink","related","detail","moment","format","OpponentChart","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","_extractHistoricalPla","opponentRank","k","averageGamePerOpponent","toFixed","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","SharedComponents_PlayerLink","SharedComponents_GameLink","MiscChart","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","scoreDiff","gameDay","memberSince","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","_this$computeMiscInfo","streakDurationDisplay","biggestWinDisplay","round","ChartFilter","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this2","_this$props2","build_default","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","computeGameHistory","insertCurrentRank","historicalWinloss","playerRating","opponentRating","gameId","renderChartTooltip","chartData","label","role","p","html","item","ChartList","filteredGamesData","allGamesData","charts","Charts_GameHistoryChart","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","params","exact","Boolean","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0174993.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\n  if (rank < 30)\n    return (30 - rank) + \"k\";\n  else\n    return (rank - 29) + \"d\";\n}\n\nexport const getPlayerRank = (player) => {\n  try {\n    const rating = player.ratings.overall.rating\n    var rank = Math.floor(\n      Math.log(rating / 850.0) / 0.032\n    );\n    return rank;\n  }\n  catch (err) {\n    return player.ranking;\n  }\n}\n\nexport const getPlayerUnroundedRank = (player) => {\n  try {\n    const rating = player.ratings.overall.rating\n    var rank = Math.log(rating / 850.0) / 0.032;\n    return rank;\n  }\n  catch (err) {\n    return player.ranking;\n  }\n}\n\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\n\nexport const getPlayerRankDisplay = (player) => {\n  return rankNumberToKyuDan(getPlayerRank(player));\n}\n\nexport const ratingToKyuDan = (rating) => {\n  var rank = Math.floor(\n    Math.log(rating / 850.0) / 0.032\n  );\n  return rankNumberToKyuDan(rank);\n}\n\nexport const getGameBoardSize = (game) => {\n  if (game.width === 19 && game.height === 19) return \"19x19\";\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\n  else return \"Others\";\n}\n\nexport const getGameTimeSettings = (game) => {\n  if (game.time_per_move < 20) return \"Blitz\";\n  else if (game.time_per_move > 10800) return \"Correspondence\";\n  else return \"Live\"\n}\n\nexport const getGameHandicapState = (game, playerId) => {\n  if (game.handicap === 0) return \"Even game\";\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\n  else return \"Handicap giver\";\n}\n\nexport const isPlayerWin = (game, playerId) => {\n  return ((game.players.black.id === playerId && game.white_lost)\n    || (game.players.white.id === playerId && game.black_lost))\n}\n\nexport const extractPlayerAndOpponent = (game, playerId) => {\n  return game.players.black.id === playerId\n    ? {\n      player: game.players.black,\n      opponent: game.players.white\n    } : {\n      player: game.players.white,\n      opponent: game.players.black\n    }\n}\n\nexport const extractHistoricalPlayerAndOpponent = (game, playerId) => {\n  return game.players.black.id === playerId\n    ? {\n      historicalPlayer: game.historical_ratings.black,\n      historicalOpponent: game.historical_ratings.white\n    } : {\n      historicalPlayer: game.historical_ratings.white,\n      historicalOpponent: game.historical_ratings.black\n    }\n}\n\nexport const daysDifferenceBetween = (day1, day2) => {\n  /* Copa pasta I don't even know if there's any bug here */\n\n  // Copy date parts of the timestamps, discarding the time parts.\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\n\n  // Do the math.\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\n  var millisBetween = two.getTime() - one.getTime();\n  var days = millisBetween / millisecondsPerDay;\n\n  // Round down.\n  return two > one ? Math.floor(days) : Math.ceil(days);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from \"react-redux\";\n\nimport { Helmet } from \"react-helmet\";\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\n\n\nclass Header extends Component {\n  static propTypes = {\n    player: PropTypes.shape({\n      username: PropTypes.string,\n      rank: PropTypes.number\n    })\n  }\n\n  render() {\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\n    return (\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\n        <Helmet>\n          <title>{title}</title>\n        </Helmet>\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\n        </a>\n        <h1 className=\"page_title\">{pageTitle}</h1>\n      </nav>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player }) => ({ player })\n\nexport default connect(mapReduxStateToProps)(Header);\n","import React from 'react';\n\nconst Welcome = () => (\n  <div>\n    <h2>Welcome!</h2>\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\n  </div>\n);\n\nexport default Welcome;\n","import axios from 'axios';\nimport configs from './configs.json';\nimport CancelablePromise from 'cancelable-promise';\n\nexport const fetchUserId = (user) => {\n  return new CancelablePromise((resolve, reject) => {\n    if (isNaN(user)) { // Entered username\n      axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\n        .then(res => res.data)\n        .then(function (data) {\n          if (data.results.length > 0) {\n            resolve(data.results[0].id);\n          }\n          else {\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\n          }\n        })\n        .catch(function (err) {\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\n        });\n    }\n    else {  // Entered user id\n      resolve(user);\n    }\n  });\n}\n\nexport const fetchUserDataById = (id) => {\n  return new CancelablePromise((resolve, reject) => {\n    axios.get(`${configs.OGS_API_ROOT}${id}`)\n      .then(res => res.data)\n      .then(function (data) {\n        resolve(data);\n      })\n      .catch(function (err) {\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\n      });\n  });\n}\n\n\nexport const fetchGamePage = (playerId, url) => {\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\n\n  return new CancelablePromise((resolve, reject) => {\n    axios.get(url)\n      .then(res => res.data)\n      .then(function (data) {\n        resolve(data);\n      })\n      .catch(function (err) {\n        reject(err);\n      });\n  });\n};","import {\n  getGameBoardSize,\n  getGameTimeSettings,\n  getGameHandicapState\n} from \"../utils\";\n\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\n\nexport const rankedValues = {\n  Ranked: \"Ranked\",\n  Unranked: \"Unranked\",\n  values: [\"Ranked\", \"Unranked\"]\n}\nexport const tournamentValues = {\n  Tournament: \"Tournament\",\n  NonTournament: \"Non-tournament\",\n  values: [\"Tournament\", \"Non-tournament\"]\n}\nexport const boardSizeValues = {\n  Nineteens: \"19x19\",\n  Thirteens: \"13x13\",\n  Nines: \"9x9\",\n  Others: \"Others\",\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\n}\nexport const timeSettingsValues = {\n  Blitz: \"Blitz\",\n  Live: \"Live\",\n  Correspondence: \"Correspondence\",\n  values: [\"Blitz\", \"Live\", \"Correspondence\"]\n}\nexport const colorValues = {\n  Black: \"Play as Black\",\n  White: \"Play as White\",\n  values: [\"Play as Black\", \"Play as White\"]\n}\nexport const handicapValues = {\n  Even: \"Even game\",\n  Taker: \"Handicap taker\",\n  Giver: \"Handicap giver\",\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"]\n}\n\nexport const minDate = new Date(-8640000000000000);\nexport const maxDate = new Date();\n\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\n\n  const playerId = getState().player.id;\n  const dateOfLastGame = getState().games.end;\n\n  const {\n    startDate,\n    endDate,\n    ranked,\n    tournament,\n    boardSize,\n    timeSettings,\n    handicap,\n    color,\n    limitEndDate\n  } = getState().chartsData;\n\n  const latestLimitEndDate = ((filters && filters.hasOwnProperty('limitEndDate')) ? filters.limitEndDate : limitEndDate);\n  const latestEndDate = ((filters && filters.hasOwnProperty('endDate')) ? filters.endDate : endDate);\n\n  const newEndDate = latestLimitEndDate\n    ? (latestEndDate < dateOfLastGame\n      ? latestEndDate\n      : dateOfLastGame)\n    : maxDate;\n\n  const filterFunctionParams = {\n    startDate,\n    ranked,\n    tournament,\n    boardSize,\n    timeSettings,\n    handicap,\n    color,\n    playerId,\n    limitEndDate,\n    ...filters,\n    endDate: newEndDate\n  }\n\n  const filterFunction = composeFilterFunction(filterFunctionParams);\n\n  dispatch(\n    updateChartDataSource({\n      ...filterFunctionParams,\n      results: getState().games.results\n        .filter(filterFunction)\n    })\n  )\n}\n\nconst composeFilterFunction = ({\n  startDate,\n  endDate,\n  ranked,\n  tournament,\n  boardSize,\n  timeSettings,\n  handicap,\n  color,\n  playerId\n}) => (game, index) => {\n  const date = new Date(game.ended);\n  if (date < startDate || date > endDate) return false;\n\n  return gameSatisfyRankedRule(game, ranked)\n    && gameSatisfyTournamentRule(game, tournament)\n    && gameSatisfyBoardSizeRule(game, boardSize)\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\n    && gameSatisfyHandicapRule(game, handicap, playerId)\n    && gameSatisfyColorRule(game, color, playerId);\n}\n\nconst gameSatisfyRankedRule = (game, ranked) => {\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\n  return true;\n}\n\nconst gameSatisfyTournamentRule = (game, tournament) => {\n  const isTournamentGame = game.tournament !== null;\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament)) return false;\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament)) return false;\n  return true;\n}\n\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\n  const gameSize = getGameBoardSize(game);\n  return boardSize.includes(gameSize);\n}\n\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\n  const gameTimeSettings = getGameTimeSettings(game);\n  return timeSettings.includes(gameTimeSettings);\n}\n\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\n  const gameHandicapState = getGameHandicapState(game, playerId);\n  return handicap.includes(gameHandicapState);\n}\n\nconst gameSatisfyColorRule = (game, color, playerId) => {\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black)) return false;\n  if (game.players.white.id === playerId && !color.includes(colorValues.White)) return false;\n  return true;\n}\n\nconst updateChartDataSource = (newData) => ({\n  type: UPDATE_CHART_DATA_SOURCE,\n  payload: newData\n});","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\n\nimport { applyGameFilters } from \"../Charts/chartActions\";\n\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date(8640000000000000);\n\nexport const fetchGames = (playerId, cachedGames = []) => async (dispatch, getState) => {\n  const fetchingPromise = getState().games.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\n\n  try {\n    let games = [];\n    let fetchingPage = 0;\n    let data;\n    let fetchingTotalPage = 0;\n    let shouldContinueFetching = true;\n    do {\n      const promise = fetchGamePage(playerId, data ? data.next : undefined);\n      dispatch(fetchingPage === 0 ? fetchGamesStart(promise) : fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\n      data = await promise;\n      for (const game of data.results) {\n        if (game.id !== latestId) games.push(game);\n        else {\n          shouldContinueFetching = false;\n          games = [...games, ...cachedGames];\n          break;\n        }\n      }\n\n      fetchingPage++;\n      fetchingTotalPage = Math.ceil(data.count / 50);\n    } while (data.next && shouldContinueFetching)\n\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\n    startDate.setHours(0, 0, 0, 0);\n\n    dispatch(fetchGamesSuccess({\n      results: games,\n      start: startDate,\n      end: games.length ? new Date(games[0].ended) : maxDate,\n    }));\n  }\n  catch (error) {\n    console.error(error);\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\n  }\n\n  dispatch(applyGameFilters());\n};\n\nexport const updateGames = (playerId) => async (dispatch, getState) => {\n\n}\n\nconst fetchGamesStart = (promise) => ({\n  type: FETCH_GAMES_START,\n  payload: promise\n})\n\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\n  type: FETCH_GAMES_PROGRESS,\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\n})\n\nconst fetchGamesSuccess = (data) => ({\n  type: FETCH_GAMES_SUCCESS,\n  payload: data,\n});\n\nconst fetchGamesFailure = (error) => ({\n  type: FETCH_GAMES_FAILURE,\n  payload: { error }\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\nimport { fetchGames } from \"../Games/gameActions\";\n\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\n\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\n  const fetchingPromise = getState().player.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  dispatch(fetchPlayerSuccess(player));\n  dispatch(fetchGames(player.id, games.results));\n}\n\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\n  const fetchingPromise = getState().player.fetching;\n  if (fetchingPromise) fetchingPromise.cancel();\n\n  try {\n    const userIdPromise = fetchUserId(player);\n    dispatch(fetchPlayerStart(userIdPromise));\n    const userId = await userIdPromise;\n\n    const userDataPromise = fetchUserDataById(userId);\n    dispatch(fetchPlayerStart(userDataPromise));\n    const userData = await userDataPromise;\n\n    dispatch(fetchGames(userData.id));\n\n    dispatch(fetchPlayerSuccess({\n      id: userData.id,\n      username: userData.username,\n      rank: parseInt(userData.ranking),\n      ratings: userData.ratings,\n      registrationDate: userData.registration_date\n    }));\n  }\n  catch (error) {\n    console.error(error);\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\n  }\n};\n\nconst fetchPlayerStart = (promise) => ({\n  type: FETCH_PLAYER_START,\n  payload: promise\n});\n\nconst fetchPlayerSuccess = (data) => ({\n  type: FETCH_PLAYER_SUCCESS,\n  payload: data,\n});\n\nconst fetchPlayerFailure = (error) => ({\n  type: FETCH_PLAYER_FAILURE,\n  payload: { error }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { saveAs } from 'file-saver';\nimport { importPlayer, fetchPlayer } from \"../../Data/Player/playerActions\";\n\nconst exporterVersion = 0;\n\nclass SearchBox extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  }\n\n  state = {\n    username: \"\"\n  }\n\n  updateSearchUser = (event) => {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  submit = (event) => {\n    event.preventDefault();\n\n    if (this.state.username) {\n      this.props.history.push(`/user/${this.state.username}`)\n      this.props.getPlayerData(this.state.username);\n\n      this.setState({\n        username: ''\n      });\n\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }\n  }\n\n  downloadJSON = () => {\n    const {\n      id,\n      username,\n      ratings,\n      rank,\n      registrationDate\n    } = this.props.player;\n\n    const {\n      start,\n      end,\n      results\n    } = this.props.games;\n\n    const jsonString = JSON.stringify({\n      exporterVersion,\n      player: {\n        id,\n        username,\n        ratings,\n        rank,\n        registrationDate\n      },\n      games: {\n        start,\n        end,\n        results\n      }\n    });\n\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\n    saveAs(blob, `gotstats_${username}.json`);\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\n  }\n\n  readFile = (event) => {\n    const file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (evt) => {\n      this.readImportedJSON(evt.target.result);\n    };\n    reader.readAsText(file);\n  }\n\n  readImportedJSON = (jsonString) => {\n    const data = JSON.parse(jsonString);\n    this.props.history.push(`/user/${data.player.username}`)\n    this.props.importPlayerData(data);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submit}>\n        <div className=\"form-group\">\n          <div className=\"input-group\">\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\n            <span className=\"input-group-btn\">\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\n            </span>\n          </div>\n        </div>\n\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\n\n        <div className=\"form-group\">\n          <p className=\"d-flex justify-content-between\">\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\nconst mapDispatchToProps = (dispatch) => ({\n  importPlayerData: data => dispatch(importPlayer(data)),\n  getPlayerData: player => dispatch(fetchPlayer(player))\n})\n\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scrollspy from 'react-scrollspy';\n\nconst links = [\n  [\"total_games_stats\", \"Win/Loss ratio\"],\n  [\"game_results\", \"Game results distribution\"],\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\n  [\"time_settings_stats\", \"Performance across time settings\"],\n  [\"opponents_stats\", \"Opponents statistics\"],\n  [\"misc_stats\", \"Miscellaneous information\"]\n]\n\n\nclass QuickLinks extends Component {\n  static propTypes = {\n    scrollToElem: PropTypes.func.isRequired\n  }\n\n  onLinkClicked = (event, link) => {\n    event.preventDefault();\n    this.props.scrollToElem(link);\n  }\n\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\n\n  render() {\n    return (\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\n        {links.map(this.renderLink)}\n      </Scrollspy>\n    );\n  }\n}\n\nexport default QuickLinks;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchBox from './SearchBox';\nimport QuickLinks from './QuickLinks';\n\nimport { connect } from \"react-redux\";\n\nclass SideBar extends Component {\n  static propTypes = {\n    scrollToElem: PropTypes.func.isRequired,\n    showQuickLinks: PropTypes.bool,\n    showDatePicker: PropTypes.bool,\n  }\n\n  render() {\n    const quickLinks = this.props.showQuickLinks ? (\n      <div className=\"navi d-none d-md-block\">\n        <hr />\n        <small className=\"tip help-block\"><em>*Mouse over/tap on a chart to see more info.</em></small>\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\n      </div>\n    ) : null;\n\n    return (\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\n        <nav className=\"side_nav sticky-top\">\n          <SearchBox />\n\n          {quickLinks}\n\n          <hr />\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS forum</a>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.results.length > 0 })\n\nexport default connect(mapReduxStateToProps)(SideBar);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport \"./go_loading.css\";\n\nclass LoadingUser extends Component {\n  static propTypes = {\n    errorMessage: PropTypes.string,\n    currentPage: PropTypes.number,\n    totalPages: PropTypes.number\n  }\n\n  render() {\n    const {\n      isFetchingPlayer,\n      errorMessage,\n      currentPage,\n      totalPages\n    } = this.props;\n\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage + 1}${totalMessage}`;\n\n    return (\n      <div className=\"loading_wrapper\">\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\n        </svg>\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\n      </div>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({\n  isFetchingPlayer: player.fetching,\n  currentPage: games.fetchingPage,\n  totalPages: games.fetchingTotalPage,\n  errorMessage: player.fetchError || games.fetchError\n})\n\nexport default connect(mapReduxStateToProps)(LoadingUser);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nclass WinLoseChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired,\n    footer: PropTypes.element\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 60 },\n      colors: [\"#000000\", \"#f8f8ff\"],\n      pieSliceTextStyle: { color: \"#d93344\" },\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      animation: {\n        startup: true,\n        easing: 'inout',\n        duration: 500,\n      },\n    },\n    subChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      animation: {\n        startup: true,\n        easing: 'inout',\n        duration: 500,\n      },\n    }\n  }\n\n  computeWinLoseStatistics = (games, playerId) => {\n    var blackGames = 0, whiteGames = 0,\n      blackLosses = 0, whiteLosses = 0;\n    for (let game of games) {\n      if (game.players.black.id === playerId) {\n        blackGames++;\n        if (game.black_lost) {\n          blackLosses++;\n        }\n      }\n      else {\n        whiteGames++;\n        if (game.white_lost) {\n          whiteLosses++;\n        }\n      }\n    };\n\n    return {\n      blackGames,\n      blackLosses,\n      whiteGames,\n      whiteLosses\n    }\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const statistics = this.computeWinLoseStatistics(games, player.id);\n\n    const chartData1 = [\n      ['Color', 'Games'],\n      ['Black', statistics.blackGames],\n      ['White', statistics.whiteGames],\n    ];\n    const chartData2 = [\n      ['Result', 'Games'],\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\n    ];\n    const chartData3 = statistics.blackGames > 0 ? [\n      ['Result', 'Games'],\n      ['Losses', statistics.blackLosses],\n      ['Wins', statistics.blackGames - statistics.blackLosses],\n    ] : null;\n    const chartData4 = statistics.whiteGames > 0 ? [\n      ['Result', 'Games'],\n      ['Losses', statistics.whiteLosses],\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\n    ] : null;\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-sm-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Total</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">As Black</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">As White</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.subChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        {this.props.footer}\n      </section>\n    );\n  }\n}\n\nexport default WinLoseChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nimport { isPlayerWin } from '../../Data/utils';\n\nclass ResultDistributionChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10, left: 0, right: 0 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    columnChartOptions: {\n      backgroundColor: \"transparent\",\n      isStacked: true,\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\n    }\n  }\n\n  assignGameResultToDistributions = (distributions, game) => {\n    const isWin = isPlayerWin(game, distributions.id);\n\n    if (game.outcome === \"Resignation\") {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\n    }\n    else if (game.outcome === \"Timeout\") {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\n    }\n    else if (!isNaN(game.outcome.split(\" \")[0])) {\n      const points = parseFloat(game.outcome.split(\" \")[0], 10);\n      const pointDiff = Math.floor(points / 10);\n\n      var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\n      result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\n\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\n      distributions[result]++;\n    }\n    else {\n      distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\n    }\n\n    return distributions;\n  }\n\n  computeWinLoseDistributions = (games, playerId) => {\n    var distributions = {\n      \"id\": playerId,\n      \"Opp+Other\": 0,\n      \"Opp+Count\": 0,\n      \"Opp+Time\": 0,\n      \"Opp+Res\": 0,\n      \"Opp+40+\": 0,\n      \"Opp+30+\": 0,\n      \"Opp+20+\": 0,\n      \"Opp+10+\": 0,\n      \"Opp+0+\": 0,\n      \"Plr+0+\": 0,\n      \"Plr+10+\": 0,\n      \"Plr+20+\": 0,\n      \"Plr+30+\": 0,\n      \"Plr+40+\": 0,\n      \"Plr+Res\": 0,\n      \"Plr+Time\": 0,\n      \"Plr+Count\": 0,\n      \"Plr+Other\": 0\n    };\n\n    return games.reduce(this.assignGameResultToDistributions, distributions);\n  }\n\n  generateChartData(games, playerId) {\n    const distributions = this.computeWinLoseDistributions(games, playerId);\n\n    return {\n      chartData1: [\n        ['Result', 'Games'],\n        ['Resign', distributions[\"Plr+Res\"]],\n        ['Timeout', distributions[\"Plr+Time\"]],\n        ['Scoring', distributions[\"Plr+Count\"]],\n        ['Other', distributions[\"Plr+Other\"]]\n      ],\n      chartData2: [\n        ['Result', 'Games'],\n        ['Resign', distributions[\"Opp+Res\"]],\n        ['Timeout', distributions[\"Opp+Time\"]],\n        ['Scoring', distributions[\"Opp+Count\"]],\n        ['Other', distributions[\"Opp+Other\"]]\n      ],\n      chartData3: [\n        ['Outcome', 'Losses', `Wins`],\n        ['40+', distributions[\"Opp+40+\"], null],\n        ['30+', distributions[\"Opp+30+\"], null],\n        ['20+', distributions[\"Opp+20+\"], null],\n        ['10+', distributions[\"Opp+10+\"], null],\n        ['0+', distributions[\"Opp+0+\"], null],\n        ['0+', null, distributions[\"Plr+0+\"]],\n        ['10+', null, distributions[\"Plr+10+\"]],\n        ['20+', null, distributions[\"Plr+20+\"]],\n        ['30+', null, distributions[\"Plr+30+\"]],\n        ['40+', null, distributions[\"Plr+40+\"]]\n      ]\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const {\n      chartData1,\n      chartData2,\n      chartData3\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Losses</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData1 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Wins</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <div className=\"row\">\n          {\n            chartData3 ? (\n              <div className=\"col-12\">\n                <h3 className=\"text-center\">Final scoring distribution</h3>\n                <Chart\n                  chartType=\"ColumnChart\"\n                  options={this.state.columnChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'300px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ResultDistributionChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\nimport { isPlayerWin } from '../../Data/utils';\n\nclass BoardSizesChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: {\n        top: 60,\n        left: 0,\n        right: 0\n      },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        alignment: 'center',\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    }\n  }\n\n  computeBoardSizes = (games, playerId) => {\n    var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\n      nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\n\n    games.forEach(game => {\n      if (game.width === 19 && game.height === 19) {\n        nineteenGames++;\n        if (!isPlayerWin(game, playerId)) nineteenLosses++;\n      }\n      else if (game.width === 13 && game.height === 13) {\n        thirteenGames++;\n        if (!isPlayerWin(game, playerId)) thirteenLosses++;\n      }\n      else if (game.width === 9 && game.height === 9) {\n        nineGames++;\n        if (!isPlayerWin(game, playerId)) nineLosses++;\n      }\n      else {\n        otherGames++;\n        if (!isPlayerWin(game, playerId)) otherLosses++;\n      }\n    });\n\n    return {\n      nineteenGames, thirteenGames, nineGames, otherGames,\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\n    }\n  }\n\n  generateChartData = (games, playerId) => {\n    const {\n      nineteenGames, thirteenGames, nineGames, otherGames,\n      nineteenLosses, thirteenLosses, nineLosses, otherLosses\n    } = this.computeBoardSizes(games, playerId);\n\n    return {\n      chartData1: [\n        ['Size', 'Games'],\n        ['19x19', nineteenGames],\n        ['13x13', thirteenGames],\n        ['9x9', nineGames],\n        ['Other', otherGames],\n      ],\n      chartData2: nineteenGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', nineteenLosses],\n        ['Wins', (nineteenGames - nineteenLosses)],\n      ] : null,\n      chartData3: thirteenGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', thirteenLosses],\n        ['Wins', (thirteenGames - thirteenLosses)],\n      ] : null,\n      chartData4: nineGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', nineLosses],\n        ['Wins', (nineGames - nineLosses)],\n      ] : null,\n      chartData5: otherGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', otherLosses],\n        ['Wins', (otherGames - otherLosses)],\n      ] : null\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n\n    const {\n      chartData1,\n      chartData2,\n      chartData3,\n      chartData4,\n      chartData5\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-md-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">19x19</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">13x13</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">9x9</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData5 ? (\n              <div className=\"col-md-6\">\n                <h5 className=\"text-center\">Other Sizes</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData5}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default BoardSizesChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart } from 'react-google-charts';\n\nimport { isPlayerWin } from '../../Data/utils';\n\nclass TimeSettingsChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    mainChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: {\n        top: 60,\n        left: 0,\n        right: 0\n      },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    },\n    pieChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      pieSliceTextStyle: { color: \"#ffffff\" },\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      }\n    }\n  }\n\n  computeTimeSettings = (games, playerId) => {\n    var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\n      blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\n    games.forEach(game => {\n      if (game.time_per_move < 20) {\n        blitzGames++;\n        if (!isPlayerWin(game, playerId)) {\n          blitzLosses++;\n        }\n      }\n      else if (game.time_per_move > 10800) {\n        correspondenceGames++;\n        if (!isPlayerWin(game, playerId)) {\n          correspondenceLosses++;\n        }\n      }\n      else {\n        liveGames++;\n        if (!isPlayerWin(game, playerId)) {\n          liveLosses++;\n        }\n      }\n    });\n\n    return {\n      blitzGames, liveGames, correspondenceGames,\n      blitzLosses, liveLosses, correspondenceLosses\n    }\n  }\n\n  generateChartData(games, playerId) {\n    const times = this.computeTimeSettings(games, playerId);\n\n    return {\n      chartData1: [\n        ['Size', 'Games'],\n        ['Blitz', times.blitzGames],\n        ['Live', times.liveGames],\n        ['Correspondence', times.correspondenceGames]\n      ],\n      chartData2: times.blitzGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.blitzLosses],\n        ['Wins', (times.blitzGames - times.blitzLosses)],\n      ] : null,\n      chartData3: times.liveGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.liveLosses],\n        ['Wins', (times.liveGames - times.liveLosses)],\n      ] : null,\n      chartData4: times.correspondenceGames > 0 ? [\n        ['Result', 'Games'],\n        ['Losses', times.correspondenceLosses],\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\n      ] : null\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      chartData1,\n      chartData2,\n      chartData3,\n      chartData4\n    } = this.generateChartData(games, player.id);\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <div className=\"row\">\n          {\n            chartData1 ? (\n              <div className=\"col-sm-6 mr-auto ml-auto\">\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.mainChartOptions}\n                  data={chartData1}\n                  width={'100%'}\n                  height={'400px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\n        <div className=\"row\">\n          {\n            chartData2 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Blitz</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData2}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData3 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Live</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData3}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n          {\n            chartData4 ? (\n              <div className=\"col-md-4\">\n                <h5 className=\"text-center\">Correspondence</h5>\n                <Chart\n                  chartType=\"PieChart\"\n                  options={this.state.pieChartOptions}\n                  data={chartData4}\n                  width={'100%'}\n                  height={'250px'}\n                />\n              </div>\n            ) : null\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default TimeSettingsChart;\n","import React from \"react\"\n\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\n\nexport default ExtLink;","import React from 'react';\nimport ExtLink from \"./ExtLink\";\n\nimport { getPlayerRankDisplay } from \"../Data/utils\";\nimport { OGS_ROOT, OGS_API_ROOT } from \"../OGSApi/configs.json\";\n\nconst PlayerLink = ({ player }) => {\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\n\n  return (<ExtLink href={href}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\n}\n\nexport default PlayerLink;","import React from 'react';\nimport moment from \"moment\";\n\nimport { OGS_ROOT } from \"../OGSApi/configs.json\";\n\nimport ExtLink from \"./ExtLink\";\n\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\n\nexport default GameLink;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport configs from '../../OGSApi/configs.json';\nimport {\n  isPlayerWin,\n  getPlayerRankDisplay,\n  getPlayerRank,\n  getPlayerRating,\n  extractPlayerAndOpponent,\n  extractHistoricalPlayerAndOpponent\n} from \"../../Data/utils\";\n\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\nimport GameLink from \"../../SharedComponents/GameLink\";\n\nclass OpponentChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  computeOpponentsInfo = (games, player) => {\n    var opponents = [], numberOfOpponents = 0;\n    var weakestOpp = { rank: 70 };\n    var strongestOpp = { rank: 0 };\n    var mostPlayed = { games: 0 };\n    var strongestDefeated = { ratingDiff: -9999 };\n\n\n    for (const game of games) {\n      const isWin = isPlayerWin(game, player.id);\n\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\n      const { historicalOpponent, historicalPlayer } = extractHistoricalPlayerAndOpponent(game, player.id);\n      const opponentRank = getPlayerRank(opponent);\n\n      if (isWin) {\n        const ratingDiff = getPlayerRating(opponent) - getPlayerRating(player) + getPlayerRating(historicalOpponent) - getPlayerRating(historicalPlayer);\n        if (ratingDiff > strongestDefeated.ratingDiff) strongestDefeated = {\n          ...opponent,\n          ratingDiff,\n          game,\n        };\n      }\n\n      if (!opponents[opponent.id]) {\n        opponents[opponent.id] = 1;\n      }\n      else {\n        opponents[opponent.id]++;\n      }\n\n      if (opponents[opponent.id] > mostPlayed.games) {\n        mostPlayed = {\n          ...opponent,\n          games: opponents[opponent.id]\n        };\n      }\n\n      if (opponentRank > strongestOpp.rank)\n        strongestOpp = {\n          ...opponent,\n          rank: opponentRank\n        };\n\n      if (opponentRank < weakestOpp.rank)\n        weakestOpp = {\n          ...opponent,\n          rank: opponentRank\n        };\n    }\n\n    numberOfOpponents = 0;\n    for (var k in opponents) {\n      if (opponents.hasOwnProperty(k)) {\n        numberOfOpponents++;\n      }\n    }\n\n    return {\n      strongestOpp,\n      weakestOpp,\n      mostPlayed,\n      strongestDefeated,\n      numberOfOpponents,\n      averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\n    }\n  }\n\n  generateChartData(games, player) {\n    const opponentsInfo = this.computeOpponentsInfo(games, player);\n\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\n    const userBarRate = getPlayerRank(this.props.player) - 5;\n\n    return {\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\n      weakestDisp: {\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\n        style: { left: `${weakestBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\n      },\n      userDisp: {\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\n        style: { left: `${userBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\n      },\n      strongestDisp: {\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\n        style: { left: `${strongestBarRate * 3.03030303}%` },\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\n      },\n      mostPlayedDisp: opponentsInfo.mostPlayed,\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\n    };\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      numberOfOpponents,\n      weakestDisp,\n      userDisp,\n      strongestDisp,\n      mostPlayedDisp,\n      strongestDefeatedDisp,\n      averageGamePerOpponent\n    } = this.generateChartData(games, player);\n\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\n\n\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\n\n        <div className=\"row\">\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\n            <ul className=\"bar_legend\">\n              <li style={weakestDisp.style}>\n                <div>Weakest Opponent</div><span></span>\n              </li>\n              <li style={strongestDisp.style}>\n                <div>Strongest Opponent</div><span></span>\n              </li>\n            </ul>\n            <div className=\"bar_chart\">\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={weakestDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={weakestDisp.title}\n                style={weakestDisp.style}>\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\n              </a>\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={userDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={userDisp.title}\n                style={userDisp.style}>\n                <img src={userDisp.img} alt={userDisp.title} />\n              </a>\n              <a target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={strongestDisp.href}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={strongestDisp.title}\n                style={strongestDisp.style}>\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\n              </a>\n            </div>\n            <ul className=\"ruler\">\n              <li><span></span><div><small><em>25k</em></small></div></li>\n              <li><span></span><div><small><em>10k</em></small></div></li>\n              <li><span></span><div><small><em>1d</em></small></div></li>\n              <li><span></span><div><small><em>9d</em></small></div></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ul className=\"info_list\">\n              <li>\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\n              </li>\n              {\n                !!strongestDefeatedDisp.username &&\n                <li>Scored a triumphant victory against <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\n              }\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\n            </ul>\n          </div>\n        </div>\n      </section >\n    );\n  }\n}\n\nexport default OpponentChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from \"moment\";\n\nimport {\n  isPlayerWin,\n  extractPlayerAndOpponent,\n  daysDifferenceBetween\n} from '../../Data/utils';\n\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\nimport GameLink from \"../../SharedComponents/GameLink\";\n\nclass MiscChart extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  state = {\n    columnChartOptions: {\n      backgroundColor: \"transparent\",\n      isStacked: true,\n      chartArea: { top: 10 },\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\n      legend: {\n        maxLines: 2,\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\n    }\n  }\n\n  computeMiscInfo = (analyzingGames, player) => {\n    let mostActiveDay;\n    let currentDay = new Date();\n    currentDay.setHours(0, 0, 0, 0);\n\n    let totalLosses = 0;\n\n    let longestStreak = { streak: 0 }\n    let currentStreak = { streak: 0 }\n\n    let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\n\n    let biggestWin = { diff: 0 }\n\n    for (let game of analyzingGames) {\n      const isWin = isPlayerWin(game, player.id);\n\n      // Longest streak\n      if (isWin) {\n\n        currentStreak.streak++;\n        currentStreak.start = game;\n\n        if (!currentStreak.end) currentStreak.end = game;\n\n        if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\n      }\n      else currentStreak = { streak: 0 }\n\n      // Biggest win\n      if (isWin) {\n        const { opponent } = extractPlayerAndOpponent(game, player.id);\n        if (!isNaN(game.outcome.split(\" \")[0])) {\n          const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\n          if (scoreDiff > biggestWin.diff) {\n            biggestWin = {\n              game: game,\n              opponent: opponent,\n              diff: scoreDiff\n            }\n          }\n        }\n      }\n      // Total losses\n      else totalLosses++;\n\n\n      // Most active day\n      let gameDay = new Date(game.ended);\n      gameDay.setHours(0, 0, 0, 0);\n      if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\n        currentDay = gameDay;\n        gamesOnCurrentDay = 1;\n      }\n      else {\n        gamesOnCurrentDay++;\n      }\n\n      if (gamesOnCurrentDay > gamesOnMostActiveDay) {\n        mostActiveDay = currentDay;\n        gamesOnMostActiveDay = gamesOnCurrentDay;\n      }\n    }\n\n    let memberSince = new Date(player.registrationDate);\n    // Change memberSince to date of first game for player who migrated from old server\n    if (analyzingGames.length) {\n      let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\n      if (firstGameDate < memberSince) memberSince = firstGameDate;\n    }\n\n    let gamesPerDay = 0;\n    if (analyzingGames.length) {\n      let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\n      let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\n      gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\n    }\n\n    const uniqueTournaments = analyzingGames\n      .filter(game => game.tournament !== null)\n      .reduce((result, game) => {\n        if (result.indexOf(game.tournament) === -1) {\n          result.push(game.tournament);\n        }\n\n        return result;\n      }, []).length;\n\n    return {\n      memberSince,\n      gamesPerDay,\n      longestStreak,\n      mostActiveDay,\n      gamesOnMostActiveDay,\n      biggestWin,\n      uniqueTournaments,\n      totalLosses\n    }\n  }\n\n  render() {\n    const { games, player } = this.props;\n    const {\n      memberSince,\n      gamesPerDay,\n      longestStreak,\n      mostActiveDay,\n      gamesOnMostActiveDay,\n      biggestWin,\n      totalLosses,\n      uniqueTournaments\n    } = this.computeMiscInfo(games, player);\n\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to <GameLink game={longestStreak.end} /></span> : '';\n    const biggestWinDisplay = biggestWin.game && (\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on <GameLink game={biggestWin.game} />.</li>\n    )\n    return (\n      <section className=\"stats_block\">\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\n        <ul className=\"info_list\">\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\n          <li>Played in {uniqueTournaments} different tournaments.</li>\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\n          {biggestWinDisplay}\n          {totalLosses >= 50 && (\n            <li>Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!</li>\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default MiscChart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Flatpickr from \"react-flatpickr\";\nimport 'flatpickr/dist/themes/material_red.css'\nimport { connect } from \"react-redux\";\n\nimport { applyGameFilters } from \"../../Data/Charts/chartActions\";\n\nimport {\n  rankedValues,\n  tournamentValues,\n  boardSizeValues,\n  timeSettingsValues,\n  colorValues,\n  handicapValues\n} from \"../../Data/Charts/chartActions\";\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date();\n\nclass ChartFilter extends PureComponent {\n  static propTypes = {\n    startDate: PropTypes.object.isRequired,\n    endDate: PropTypes.object.isRequired,\n    limitEndDate: PropTypes.bool.isRequired,\n    ranked: PropTypes.array.isRequired,\n    tournament: PropTypes.array.isRequired,\n    boardSize: PropTypes.array.isRequired,\n    timeSettings: PropTypes.array.isRequired,\n    handicap: PropTypes.array.isRequired,\n    color: PropTypes.array.isRequired,\n    filterGames: PropTypes.func.isRequired,\n  }\n\n  onCheckboxChanged = (event) => {\n    const name = event.target.name;\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\n    this.onFilterChanged({\n      [name]: value\n    });\n  }\n\n  onToggleChanged = (event) => {\n    const name = event.target.name;\n    const value = event.target.checked;\n    this.onFilterChanged({\n      [name]: value\n    });\n  }\n\n  onDateChanged = (name, dates) => {\n    const date = dates[0];\n    this.onFilterChanged({ [name]: date });\n  }\n\n  onFilterChanged = (changes) => {\n    const {\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color,\n      startDate,\n      endDate\n    } = this.props;\n\n    this.props.filterGames({\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color,\n      endDate,\n      startDate,\n      ...changes\n    })\n  }\n\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\n    ? (\n      <div className=\"form-group col-sm-6 col-lg-4\">\n        <div className=\"row\">\n          {validValues.map((state, index) => (\n            <div className=\"col-5\" key={index}>\n              {this.renderCheckbox(values, name, state, index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n    : (\n      <div className=\"form-group col-sm-6 col-lg-4\">\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\n      </div>\n    )\n  renderCheckbox = (values, name, state, index) => (\n    <div className=\"form-check\" key={index}>\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\n        {state}\n      </label>\n    </div>\n  )\n\n  render() {\n    const {\n      ranked,\n      tournament,\n      boardSize,\n      timeSettings,\n      handicap,\n      color\n    } = this.props;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"row\">\n            <div className=\"form-group col-sm-6 col-lg-4\">\n              <label>Analyze games starting from</label>\n              <Flatpickr\n                value={this.props.startDate || \"\"}\n                className=\"form-control flatpickr-input\"\n                name=\"startDate\"\n                onChange={(dates) => this.onDateChanged('startDate', dates)}\n                options={{\n                  dateFormat: \"M d, Y\",\n                  minDate: this.props.minDate,\n                  maxDate: this.props.maxDate,\n                  enableTime: false,\n                  enableSeconds: false\n                }}\n              />\n            </div>\n            <div className=\"form-group col-sm-6 col-lg-4\">\n              <label className=\"form-check\">\n                <input name=\"limitEndDate\" className=\"form-check-input\" type=\"checkbox\" id=\"limit_endDate\" value=\"limitEndDate\" defaultChecked={this.props.limitEndDate} onChange={this.onToggleChanged} />\n                <label className=\"form-check-label\" htmlFor=\"limit_endDate\">{`limit end date${this.props.limitEndDate ? ' to' : ''}`}</label>\n              </label>\n              {\n                this.props.limitEndDate &&\n                <Flatpickr\n                  value={this.props.endDate || \"\"}\n                  className=\"form-control flatpickr-input\"\n                  name=\"endDate\"\n                  onChange={(dates) => this.onDateChanged('endDate', dates)}\n                  options={{\n                    dateFormat: \"M d, Y\",\n                    minDate: this.props.minDate,\n                    maxDate: this.props.maxDate,\n                    enableTime: false,\n                    enableSeconds: false\n                  }}\n                />\n              }\n            </div>\n          </div>\n        </div>\n        {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\n        {this.renderCheckBoxItems(boardSizeValues.values, boardSize, \"boardSize\", true)}\n        {this.renderCheckBoxItems(timeSettingsValues.values, timeSettings, \"timeSettings\")}\n        {this.renderCheckBoxItems(handicapValues.values, handicap, \"handicap\")}\n        {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\n        {this.renderCheckBoxItems(tournamentValues.values, tournament, \"tournament\")}\n      </form>\n    );\n  }\n}\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\n  ...chartsData,\n  minDate: games.start || minDate,\n  maxDate: games.end || maxDate\n})\nconst maxDispatchToProps = dispatch => ({\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\n})\n\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'react-google-charts';\n\nimport configs from '../../OGSApi/configs.json';\nimport {\n  ratingToKyuDan,\n  getPlayerRating,\n  isPlayerWin,\n  extractHistoricalPlayerAndOpponent\n} from \"../../Data/utils\";\n\nimport moment from \"moment\";\n\nclass GameHistoryChart extends Component {\n  static propTypes = {\n    games: PropTypes.array.isRequired,\n    player: PropTypes.object.isRequired,\n    insertCurrentRank: PropTypes.bool.isRequired\n  }\n\n  state = {\n    scatterPlotChartOptions: {\n      backgroundColor: \"transparent\",\n      chartArea: { top: 50, left: 50, right: 5 },\n      colors: [\"#5486d1\", \"#d93344\", \"#41CD64\", \"#9d4dc5\"],\n      legend: {\n        position: \"bottom\",\n        textStyle: {\n          color: \"#f8f8ff\",\n          fontName: \"Roboto\",\n          fontSize: 14\n        }\n      },\n      series: [\n        { type: 'line' },\n        { type: 'scatter', pointShape: { type: 'triangle', rotation: 180 } },\n        { type: 'scatter', pointShape: { type: 'triangle' } }\n      ],\n      hAxis: {\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: {\n          color: 'transparent', count: 2\n        }, format: \"MMM ''yy\"\n      },\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: { count: 0 } },\n      tooltip: {\n        isHtml: true, trigger: 'selection'\n      }\n    }\n  }\n\n  computeGameHistory = (games, player, insertCurrentRank) => {\n    let historicalWinloss = [];\n\n    if (insertCurrentRank) {\n      historicalWinloss.push({\n        date: new Date(),\n        playerRating: getPlayerRating(player)\n      })\n    }\n\n    for (const game of games) {\n      const isWin = isPlayerWin(game, player.id);\n      const { historicalPlayer, historicalOpponent } = extractHistoricalPlayerAndOpponent(game, player.id);\n      historicalWinloss.push(\n        {\n          isWin,\n          date: new Date(game.ended),\n          playerRating: getPlayerRating(historicalPlayer),\n          opponentRating: getPlayerRating(historicalOpponent),\n          gameId: game.id\n        }\n      )\n    }\n    return historicalWinloss;\n  }\n\n  renderChartTooltip = (isWin, date, playerRating, opponentRating, gameId) => opponentRating\n    ? `<h6><a href=\"${configs.OGS_ROOT}game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(date).format(\"MMM D, YYYY HH:mm\")}</a></h6>\n      <div class=\"${isWin ? 'text-green' : 'text-red'}\">${isWin ? 'Win' : 'Loss'}</div>\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>\n      <div>Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(opponentRating)})</div>`\n    : `<h6>Currently</h6>\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>`\n\n  render() {\n    const {\n      games, player, insertCurrentRank\n    } = this.props;\n\n    const historicalWinloss = this.computeGameHistory(games, player, insertCurrentRank);\n\n    const chartData = [\n      [\n        'Date',\n        { type: 'number', label: 'Player Rating' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n        { type: 'number', label: 'Opponent Rating (Loss)' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n        { type: 'number', label: 'Opponent Rating (Win)' },\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\n      ],\n      ...(\n        historicalWinloss.map(\n          item => [\n            item.date,\n            item.playerRating,\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\n            item.isWin ? null : item.opponentRating,\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\n            item.isWin ? item.opponentRating : null,\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\n          ]\n        )\n      )\n    ]\n\n    return (<Chart\n      chartType=\"ComboChart\"\n      data={chartData}\n      options={this.state.scatterPlotChartOptions}\n      width={'100%'}\n      height={'400px'}\n    />\n    );\n  }\n}\n\nexport default GameHistoryChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport WinLoseChart from './WinLoseChart';\nimport ResultDistributionChart from './ResultDistributionChart';\nimport BoardSizesChart from './BoardSizesChart';\nimport TimeSettingsChart from './TimeSettingsChart';\nimport OpponentChart from './OpponentChart';\nimport MiscChart from './MiscChart';\nimport ChartFilter from '../GameFilters/ChartFilter';\nimport GameHistoryChart from './GameHistoryChart';\n\n\nclass ChartList extends Component {\n  static propTypes = {\n    games: PropTypes.object.isRequired,\n    chartsData: PropTypes.object.isRequired,\n    player: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { player, chartsData, games } = this.props;\n\n    const filteredGamesData = chartsData.results;\n    const allGamesData = games.results;\n\n    const charts = filteredGamesData.length > 0 && (\n      <div>\n        <GameHistoryChart\n          games={filteredGamesData}\n          player={player}\n          insertCurrentRank={!chartsData.limitEndDate}\n        />\n\n        <WinLoseChart\n          games={filteredGamesData}\n          player={player}\n        />\n\n        <ResultDistributionChart\n          title={`Game results distribution`}\n          id={\"game_results\"}\n          games={filteredGamesData}\n          player={player}\n        />\n        {\n          chartsData.boardSize.length > 1 && (\n            <BoardSizesChart\n              title={`Performance across board sizes`}\n              id={\"board_sizes_stats\"}\n              games={filteredGamesData}\n              player={player}\n            />\n          )\n        }\n        {\n          chartsData.timeSettings.length > 1 && (\n            <TimeSettingsChart\n              title={`Performance across time settings`}\n              id={\"time_settings_stats\"}\n              games={filteredGamesData}\n              player={player}\n            />\n          )\n        }\n      </div>\n    )\n\n\n    return (\n      <div>\n        <ChartFilter />\n\n        <hr />\n        <h2\n          id=\"total_games_stats\"\n          className=\"text-center\">\n          {`${filteredGamesData.length} of ${allGamesData.length} games match the filters`}\n        </h2>\n\n        {charts}\n\n        {\n          allGamesData.length > 0 && (\n            <div>\n              <h2 className=\"all_time_title\">Lifetime Statistics</h2>\n              <OpponentChart\n                title={`Unique opponents faced`}\n                id={\"opponents_stats\"}\n                games={allGamesData}\n                player={player}\n              />\n              <MiscChart\n                title={`Miscellaneous`}\n                id={\"misc_stats\"}\n                games={allGamesData}\n                player={player}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\n\nexport default connect(mapReduxStateToProps)(ChartList);\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\n        </div>\n        <div className=\"col-sm-4 text-right\">\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\n        </div>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Welcome from './Welcome';\nimport SideBar from './SideBar/SideBar';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\n\nimport LoadingUser from './LoadingUser/LoadingUser';\nimport ChartList from './Charts/ChartList';\nimport Footer from './Footer';\n\nclass Statistics extends Component {\n  static propTypes = {\n    getPlayerData: PropTypes.func.isRequired,\n    player: PropTypes.object.isRequired,\n    user: PropTypes.string,\n    showLoading: PropTypes.bool.isRequired,\n    showStatistics: PropTypes.bool.isRequired,\n  }\n\n  scrollToElem(id) {\n    document.getElementById(id).scrollIntoView();\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.props.getPlayerData(this.props.user);\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <div className=\"row\">\n            <SideBar scrollToElem={this.scrollToElem} />\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\n              {this.props.showLoading\n                ? <LoadingUser />\n                : this.props.showStatistics\n                  ? <ChartList />\n                  : <Welcome />}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </main>\n    );\n  }\n}\n\nconst mapReduxStateToProps = ({ player, games }) => ({\n  player,\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\n  showStatistics: player.id > -1\n})\n\nconst mapReduxDispatchToProps = dispatch => ({\n  getPlayerData: player => dispatch(fetchPlayer(player))\n})\n\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_PLAYER_START,\n  FETCH_PLAYER_SUCCESS,\n  FETCH_PLAYER_FAILURE\n} from './playerActions';\n\nconst initialState = {\n  id: -1,\n  username: \"\",\n  ratings: {\n    overall: {\n      rating: 0\n    }\n  },\n  rank: 0,\n  fetching: null,\n  fetchError: \"\",\n  registrationDate: null\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_PLAYER_START: return {\n      ...initialState,\n      fetching: payload,\n      fetchError: \"\"\n    }\n\n    case FETCH_PLAYER_SUCCESS: return {\n      ...state,\n      fetching: null,\n      ...payload\n    }\n\n    case FETCH_PLAYER_FAILURE: return {\n      ...state,\n      fetching: null,\n      fetchError: payload.error\n    }\n\n    default: return state;\n  }\n}\n\nexport default reducer;","import {\n  FETCH_GAMES_START,\n  FETCH_GAMES_SUCCESS,\n  FETCH_GAMES_FAILURE,\n  FETCH_GAMES_PROGRESS\n} from './gameActions';\n\nimport {\n  FETCH_PLAYER_START\n} from '../Player/playerActions';\n\nconst minDate = new Date(-8640000000000000);\nconst maxDate = new Date(8640000000000000);\n\nconst initialState = {\n  results: [],\n  fetching: null,\n  fetchingPage: 0,\n  fetchingTotalPage: 0,\n  fetchError: \"\",\n  start: minDate,\n  end: maxDate\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case FETCH_PLAYER_START: return { ...initialState, fetching: state.fetching };\n\n    case FETCH_GAMES_START: return {\n      ...state,\n      fetching: payload,\n      fetchingPage: 0,\n      fetchingTotalPage: 0,\n      fetchError: \"\",\n      start: minDate,\n      end: maxDate\n    }\n\n    case FETCH_GAMES_PROGRESS: return {\n      ...state,\n      ...payload\n    }\n\n    case FETCH_GAMES_SUCCESS: return {\n      ...state,\n      fetching: null,\n      ...payload,\n    }\n\n    case FETCH_GAMES_FAILURE: return {\n      ...state,\n      fetching: null,\n      fetchError: payload.error\n    }\n\n    default: return state;\n  }\n}\n\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\nimport { FETCH_GAMES_START, FETCH_GAMES_SUCCESS } from \"../Games/gameActions\";\nimport { FETCH_PLAYER_START } from '../Player/playerActions';\n\nimport {\n  minDate,\n  maxDate,\n  rankedValues,\n  tournamentValues,\n  boardSizeValues,\n  timeSettingsValues,\n  colorValues,\n  handicapValues\n} from \"./chartActions\";\n\nconst initialState = {\n  startDate: minDate,\n  endDate: maxDate,\n  ranked: rankedValues.values,\n  tournament: tournamentValues.values,\n  boardSize: boardSizeValues.values,\n  timeSettings: timeSettingsValues.values,\n  handicap: handicapValues.values,\n  color: colorValues.values,\n  limitEndDate: false,\n  results: []\n}\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case UPDATE_CHART_DATA_SOURCE: return {\n      ...state,\n      ...payload\n    };\n\n    case FETCH_GAMES_START:\n    case FETCH_PLAYER_START:\n      return {\n        ...initialState\n      };\n\n    case FETCH_GAMES_SUCCESS:\n      return {\n        ...state,\n        startDate: payload.start\n      }\n    default: return state;\n  }\n}\n\nexport default reducer;","import { combineReducers } from \"redux\";\nimport playerReducer from \"./Player/playerReducer\";\nimport gamesReducer from \"./Games/gameReducer\";\nimport chartReducers from \"./Charts/chartDataReducer\";\n\nexport default combineReducers({\n  player: playerReducer,\n  games: gamesReducer,\n  chartsData: chartReducers\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"../Data/reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nexport const createReduxStore = () => {\n  return createStore(\n    reducer,\n    composeWithReduxDevTools(\n      applyMiddleware(reduxThunk)\n    )\n  );\n}"],"sourceRoot":""}