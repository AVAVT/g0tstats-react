{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Data/Charts/chartActions.js","Statistics/SideBar/DatePicker.jsx","Statistics/SideBar/SideBar.jsx","OGSApi/OGSApi.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","SharedComponents/PlayerLink.jsx","SharedComponents/GameLink.jsx","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataSourceReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRankDisplay","rank","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","SearchBox","state","updateSearchUser","event","_this","setState","target","value","submit","preventDefault","history","push","document","activeElement","blur","onSubmit","onChange","name","type","placeholder","withRouter","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","index","key","onClick","e","Scrollspy_default","items","map","currentClassName","minDate","Date","maxDate","chooseChartDataTimeRange","arguments","length","undefined","from","to","_ref$from","_ref$to","dispatch","getState","updateChartDataSource","games","results","filter","game","date","ended","newData","payload","DatePicker","onDateChanged","dates","changeStartDate","build_default","options","dateFormat","enableTime","enableSeconds","start","end","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","datePicker","showDatePicker","SideBar_DatePicker","SideBar_SearchBox","chartsData","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","axios","get","configs","OGS_API_ROOT","then","res","data","id","catch","status","fetchUserDataById","fetchGamePage","playerId","url","fetchGames","Object","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","promise","fetchingPage","fetchingTotalPage","_promise","startDate","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","sent","apply","toConsumableArray","ceil","count","fetchGamesProgress","setHours","fetchGamesSuccess","t0","console","error","fetchGamesFailure","stop","_x","_x2","_ref2","fetchPlayerStart","fetchPlayerSuccess","fetchPlayerFailure","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","width","height","cx","cy","r","strokeWidth","fill","fetchError","extractPlayerAndOpponent","players","black","opponent","white","isPlayerWin","white_lost","black_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","result","daysDifferenceBetween","day1","day2","two","getFullYear","getMonth","getDate","one","days","getTime","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","time_per_move","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","k","opponentRank","objectSpread","hasOwnProperty","averageGamePerOpponent","toFixed","computeMiscInfo","allGames","analyzingGames","mostActiveDay","currentDay","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scoreDiff","gameDay","return","memberSince","registrationDate","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","color","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","footer","ResultDistributionChart","pieChartOptions","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","sizes","chartData5","TimeSettingsChart","times","PlayerLink","OGS_ROOT","img","rel","GameLink","related","detail","moment","format","OpponentChart","opponentsInfo","weakestBarRate","strongestBarRate","userBarRate","weakestLegendStyle","marginLeft","strongestLegendStyle","weakestDisp","style","left","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","SharedComponents_PlayerLink","SharedComponents_GameLink","MiscChart","_Analyzer$computeMisc","streakDurationDisplay","biggestWinDisplay","round","ChartList","createGameData","lostGames","loseCount","currentGame","rankedGames","ranked","unrankedGames","evenGames","handicap","tournamentGames","tournament","uniqueTournaments","indexOf","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","getElementById","scrollIntoView","getPlayerData","nextProps","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","userIdPromise","userId","userDataPromise","userData","parseInt","registration_date","fetchPlayer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","params","exact","Boolean","window","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1484ac64.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"input-group\">\r\n          <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n          </span>\r\n        </div>\r\n        <small className=\"tip help-block\"><em>*Tip: mouse over/tap on a chart to see more info.</em></small>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Total games played on OGS\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"ranked_games_stats\", \"Ranked games\"],\r\n  [\"unranked_games_stats\", \"Unranked games\"],\r\n  [\"even_games_stats\", \"Even games\"],\r\n  [\"tournament_games_stats\", \"Performance in tournaments\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous statistics\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","export const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const chooseChartDataTimeRange = ({ from = minDate, to = maxDate } = { from: minDate, to: maxDate }) => (dispatch, getState) => {\r\n  dispatch(\r\n    updateChartDataSource(\r\n      getState().games.results\r\n        .filter(game => {\r\n          const date = new Date(game.ended);\r\n          return date >= from && date <= to;\r\n        })\r\n    )\r\n  )\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { chooseChartDataTimeRange } from \"../../Data/Charts/chartActions\";\r\n\r\nclass DatePicker extends Component {\r\n  static propTypes = {\r\n    minDate: PropTypes.object.isRequired,\r\n    maxDate: PropTypes.object.isRequired,\r\n    changeStartDate: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    date: this.props.minDate\r\n  }\r\n\r\n  onDateChanged = (dates) => {\r\n    const date = dates[0];\r\n    this.setState({ date }, () => this.props.changeStartDate(this.state.date));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Analyze games starting from</p>\r\n        <div className=\"input-group\">\r\n          <Flatpickr\r\n            value={this.state.date || \"\"}\r\n            className=\"form-control flatpickr-input\"\r\n            name=\"date\"\r\n            onChange={this.onDateChanged}\r\n            options={{\r\n              dateFormat: \"d M, Y\",\r\n              minDate: this.props.minDate,\r\n              maxDate: this.props.maxDate,\r\n              enableTime: false,\r\n              enableSeconds: false\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst mapReduxStateToProps = ({ games }) => ({\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || new Date()\r\n})\r\nconst mapReduxDispatchToProps = (dispatch) => ({\r\n  changeStartDate: date => dispatch(chooseChartDataTimeRange({ from: date }))\r\n});\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(DatePicker);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from './DatePicker';\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n    const datePicker = this.props.showDatePicker ? (\r\n      <div className=\" d-none d-md-block\">\r\n        <hr />\r\n        <DatePicker />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n          {quickLinks}\r\n          {datePicker}\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({ showQuickLinks: chartsData.length > 0, showDatePicker: games.results.length > 0 })\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          if (data.results.length > 0) {\r\n            resolve(data.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(url)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { chooseChartDataTimeRange } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    let games = [];\r\n\r\n    let promise = fetchGamePage(playerId);\r\n    dispatch(fetchGamesStart(promise));\r\n    let data = await promise;\r\n\r\n    games.push(...data.results);\r\n\r\n    let fetchingPage = 0;\r\n    const fetchingTotalPage = Math.ceil(data.count / 50);\r\n\r\n    while (data.next) {\r\n      fetchingPage++;\r\n      let promise = fetchGamePage(playerId, data.next);\r\n      dispatch(fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      games.push(...data.results);\r\n    }\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(chooseChartDataTimeRange());\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import { getPlayerRank } from \"./utils\";\r\n\r\nfunction computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeOpponentsInfo(games, playerId) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { rank: 0 };\r\n\r\n  games.forEach(game => {\r\n    const { opponent } = extractPlayerAndOpponent(game, playerId);\r\n    const opponentRank = getPlayerRank(opponent);\r\n    if (isPlayerWin(game, playerId) && opponentRank > strongestDefeated.rank) {\r\n      strongestDefeated = {\r\n        ...opponent,\r\n        rank: opponentRank,\r\n        game,\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        ...opponent,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponentRank > strongestOpp.rank)\r\n      strongestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n\r\n    if (opponentRank < weakestOpp.rank)\r\n      weakestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n  });\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction extractPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = isPlayerWin(game, distributions.id);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nfunction computeMiscInfo(allGames, analyzingGames, player) {\r\n  let mostActiveDay;\r\n  let currentDay = new Date();\r\n  currentDay.setHours(0, 0, 0, 0);\r\n\r\n  let longestStreak = { streak: 0 }\r\n  let currentStreak = { streak: 0 }\r\n\r\n  let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n  let biggestWin = {\r\n    diff: 0\r\n  }\r\n\r\n  for (let game of analyzingGames) {\r\n\r\n    // Longest streak\r\n    if (isPlayerWin(game, player.id)) {\r\n\r\n      currentStreak.streak++;\r\n      currentStreak.start = game;\r\n\r\n      if (!currentStreak.end) currentStreak.end = game;\r\n\r\n      if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n    }\r\n    else currentStreak = { streak: 0 }\r\n\r\n    // Biggest win\r\n    if (isPlayerWin(game, player.id)) {\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      if (!isNaN(game.outcome.split(\" \")[0])) {\r\n        const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n        if (scoreDiff > biggestWin.diff) {\r\n          biggestWin = {\r\n            game: game,\r\n            opponent: opponent,\r\n            diff: scoreDiff\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // Most active day\r\n    let gameDay = new Date(game.ended);\r\n    gameDay.setHours(0, 0, 0, 0);\r\n    if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n      currentDay = gameDay;\r\n      gamesOnCurrentDay = 1;\r\n    }\r\n    else {\r\n      gamesOnCurrentDay++;\r\n    }\r\n\r\n    if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n      mostActiveDay = currentDay;\r\n      gamesOnMostActiveDay = gamesOnCurrentDay;\r\n    }\r\n  }\r\n\r\n  let memberSince = new Date(player.registrationDate);\r\n  // Change memberSince to date of first game for player who migrated from old server\r\n  if (allGames.length) {\r\n    let firstGameDate = new Date(allGames[allGames.length - 1].started);\r\n    if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n  }\r\n\r\n  let gamesPerDay = 0;\r\n  if (analyzingGames.length) {\r\n    let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n    let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n    gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n  }\r\n\r\n  return {\r\n    memberSince,\r\n    gamesPerDay,\r\n    longestStreak,\r\n    mostActiveDay,\r\n    gamesOnMostActiveDay,\r\n    biggestWin\r\n  }\r\n}\r\n\r\nfunction daysDifferenceBetween(day1, day2) {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  computeMiscInfo,\r\n  isPlayerWin,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Games opponent wins', `Games ${this.props.player.username} wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from 'react';\r\n\r\nimport { getPlayerRankDisplay } from \"../Data/utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (\r\n    <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href={href}>\r\n      <img className=\"img-20\" src={img} alt={username} /> {username}\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst GameLink = ({ game }) => (\r\n  <a href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\r\n    {moment(game.ended).format(\"MMM D, YYYY\")}\r\n  </a>\r\n)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, gamesData.playerId);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = opponentsInfo.weakestOpp.rank - 5;\r\n    const strongestBarRate = opponentsInfo.strongestOpp.rank - 5;\r\n    const userBarRate = this.props.player.rank - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestLegendStyle: { marginLeft: `${weakestBarRate * 3.03030303}%` },\r\n      strongestLegendStyle: { marginLeft: `${(strongestBarRate - weakestBarRate) * 3.03030303}%` },\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestLegendStyle,\r\n      strongestLegendStyle,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestLegendStyle}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestLegendStyle}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Scored a triumphant victory against <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport moment from \"moment\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    allGames: PropTypes.array.isRequired,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { allGames, gamesData, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin\r\n    } = Analyzer.computeMiscInfo(allGames, gamesData.games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to  <GameLink game={longestStreak.end} /></span> : '';\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on  <GameLink game={biggestWin.game} />.</li>\r\n    )\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          <ul className=\"info_list\">\r\n            <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n            <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\r\n            <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n            {biggestWinDisplay}\r\n            <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    chartsData: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const gamesData = this.createGameData(this.props.chartsData);\r\n\r\n    const lostGames = gamesData.games.reduce((loseCount, currentGame) => {\r\n      if (!Analyzer.isPlayerWin(currentGame, this.props.player.id)) {\r\n        return loseCount + 1;\r\n      }\r\n      else {\r\n        return loseCount;\r\n      }\r\n    }, 0);\r\n\r\n    const rankedGames = gamesData.games.filter(game => game.ranked);\r\n    const unrankedGames = gamesData.games.filter(game => !game.ranked);\r\n    const evenGames = gamesData.games.filter(game => game.handicap === 0);\r\n    const tournamentGames = gamesData.games.filter(game => game.tournament !== null);\r\n    const uniqueTournaments = tournamentGames.reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []);\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Total games played on OGS: ${gamesData.games.length}`}\r\n              id={\"total_games_stats\"}\r\n              gamesData={gamesData}\r\n              footer={\r\n                lostGames >= 50 ? (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <p className=\"gratz\">\r\n                        Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <ResultDistributionChart\r\n              title={`Game results distribution`}\r\n              id={\"game_results\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          rankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Ranked Games: ${rankedGames.length}`}\r\n              id={\"ranked_games_stats\"}\r\n              gamesData={this.createGameData(rankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          unrankedGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Unranked Games: ${unrankedGames.length}`}\r\n              id={\"unranked_games_stats\"}\r\n              gamesData={this.createGameData(unrankedGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          evenGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Even Games: ${evenGames.length}`}\r\n              id={\"even_games_stats\"}\r\n              gamesData={this.createGameData(evenGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          tournamentGames.length > 0 && (\r\n            <WinLoseChart\r\n              title={`Participated in ${uniqueTournaments.length} tournaments`}\r\n              id={\"tournament_games_stats\"}\r\n              gamesData={this.createGameData(tournamentGames)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={gamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <OpponentChart\r\n              title={`Number of opponents faced`}\r\n              id={\"opponents_stats\"}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          gamesData.games.length > 0 && (\r\n            <MiscChart\r\n              title={`Miscellaneous statistics`}\r\n              id={\"misc_stats\"}\r\n              allGames={this.props.games.results}\r\n              gamesData={gamesData}\r\n              player={this.props.player}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/g0tStats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\n\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user !== this.props.user) {\r\n      this.props.getPlayerData(nextProps.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: games.results.length > 0\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nimport {\r\n  FETCH_PLAYER_START\r\n} from '../Player/playerActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return { ...initialState, fetching: state.fetching };\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 1,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER_START } from '../Player/playerActions';\r\nconst initialState = []\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return payload;\r\n\r\n    case FETCH_GAMES_START:\r\n    case FETCH_PLAYER_START:\r\n      return [...initialState];\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataSourceReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}