{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","OGSApi/OGSApi.js","Data/Charts/chartActions.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Statistics/SideBar/SideBar.jsx","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","SharedComponents/ExtLink.jsx","SharedComponents/PlayerLink.jsx","SharedComponents/GameLink.jsx","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/GameFilters/DatePicker.jsx","Statistics/GameFilters/ChartFilter.jsx","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataSourceReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRankDisplay","rank","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","axios","get","configs","OGS_API_ROOT","then","res","data","results","length","id","catch","status","fetchUserDataById","fetchGamePage","playerId","url","undefined","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","minDate","Date","maxDate","defaultActionParams","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","applyGameFilters","arguments","_ref$startDate","_ref$endDate","_ref$ranked","_ref$tournament","_ref$boardSize","_ref$timeSettings","_ref$handicap","_ref$color","dispatch","getState","params","filterFunction","composeFilterFunction","updateChartDataSource","Object","objectSpread","games","filter","_ref2","game","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","players","black","getGameHandicapState","white","newData","type","payload","fetchGames","cachedGames","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","latestId","fetchingPage","fetchingTotalPage","shouldContinueFetching","promise","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","fetchGamesProgress","sent","Symbol","iterator","done","value","push","toConsumableArray","abrupt","t0","return","finish","ceil","count","setHours","fetchGamesSuccess","start","end","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","_ref3","fetchPlayer","userIdPromise","userId","userDataPromise","userData","fetchPlayerStart","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","chartsData","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","extractPlayerAndOpponent","opponent","isPlayerWin","white_lost","black_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","daysDifferenceBetween","day1","day2","two","getFullYear","getMonth","getDate","one","days","getTime","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","k","opponentRank","hasOwnProperty","averageGamePerOpponent","toFixed","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","scoreDiff","gameDay","memberSince","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","sizes","chartData5","TimeSettingsChart","times","ExtLink","children","PlayerLink","OGS_ROOT","img","SharedComponents_ExtLink","GameLink","related","detail","moment","format","OpponentChart","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","left","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","SharedComponents_PlayerLink","SharedComponents_GameLink","MiscChart","_Analyzer$computeMisc","streakDurationDisplay","biggestWinDisplay","round","DatePicker","onDateChanged","dates","changeStartDate","build_default","dateFormat","enableTime","enableSeconds","ChartFilter","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onStartDateChanged","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this$props2","GameFilters_DatePicker","filters","ChartList","filteredGamesData","createGameData","allGamesData","charts","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","exact","Boolean","window","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b12aaeaf.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n}\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\"\r\n}\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          if (data.results.length > 0) {\r\n            resolve(data.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(url)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState\r\n} from \"../utils\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const rankedValues = {\r\n  Ranked: \"Ranked\",\r\n  Unranked: \"Unranked\",\r\n  values: [\"Ranked\", \"Unranked\"]\r\n}\r\nexport const tournamentValues = {\r\n  Tournament: \"Tournament\",\r\n  NonTournament: \"Non-tournament\",\r\n  values: [\"Tournament\", \"Non-tournament\"]\r\n}\r\nexport const boardSizeValues = {\r\n  Nineteens: \"19x19\",\r\n  Thirteens: \"13x13\",\r\n  Nines: \"9x9\",\r\n  Others: \"Others\",\r\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\r\n}\r\nexport const timeSettingsValues = {\r\n  Blitz: \"Blitz\",\r\n  Live: \"Live\",\r\n  Correspondence: \"Correspondence\",\r\n  values: [\"Blitz\", \"Live\", \"Correspondence\"]\r\n}\r\nexport const colorValues = {\r\n  Black: \"Play as Black\",\r\n  White: \"Play as White\",\r\n  values: [\"Play as Black\", \"Play as White\"]\r\n}\r\nexport const handicapValues = {\r\n  Even: \"Even game\",\r\n  Taker: \"Handicap taker\",\r\n  Giver: \"Handicap giver\",\r\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"]\r\n}\r\n\r\nexport const minDate = new Date(-8640000000000000);\r\nexport const maxDate = new Date(8640000000000000);\r\n\r\nconst defaultActionParams = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values\r\n}\r\n\r\nexport const applyGameFilters = ({\r\n  startDate = minDate,\r\n  endDate = maxDate,\r\n  ranked = rankedValues.values,\r\n  tournament = tournamentValues.values,\r\n  boardSize = boardSizeValues.values,\r\n  timeSettings = timeSettingsValues.values,\r\n  handicap = handicapValues.values,\r\n  color = colorValues.values\r\n} = defaultActionParams) => (dispatch, getState) => {\r\n\r\n  const playerId = getState().player.id;\r\n\r\n  const params = {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId\r\n  };\r\n  const filterFunction = composeFilterFunction(params);\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...params,\r\n      results: getState().games.results\r\n        .filter(filterFunction)\r\n    })\r\n  )\r\n}\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  color,\r\n  playerId\r\n}) => (game, index) => {\r\n\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return gameSatisfyRankedRule(game, ranked)\r\n    && gameSatisfyTournamentRule(game, tournament)\r\n    && gameSatisfyBoardSizeRule(game, boardSize)\r\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\r\n    && gameSatisfyHandicapRule(game, handicap, playerId)\r\n    && gameSatisfyColorRule(game, color, playerId);\r\n}\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\r\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament)) return false;\r\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n}\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n}\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n}\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black)) return false;\r\n  if (game.players.white.id === playerId && !color.includes(colorValues.White)) return false;\r\n  return true;\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId, cachedGames = []) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\r\n\r\n  try {\r\n    let games = [];\r\n    let fetchingPage = 0;\r\n    let data;\r\n    let fetchingTotalPage = 0;\r\n    let shouldContinueFetching = true;\r\n    do {\r\n      const promise = fetchGamePage(playerId, data ? data.next : undefined);\r\n      dispatch(fetchingPage === 0 ? fetchGamesStart(promise) : fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      for (const game of data.results) {\r\n        if (game.id !== latestId) games.push(game);\r\n        else {\r\n          shouldContinueFetching = false;\r\n          games = [...games, ...cachedGames];\r\n          break;\r\n        }\r\n      }\r\n\r\n      fetchingPage++;\r\n      fetchingTotalPage = Math.ceil(data.count / 50);\r\n    } while (data.next && shouldContinueFetching)\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nexport const updateGames = (playerId) => async (dispatch, getState) => {\r\n\r\n}\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  dispatch(fetchPlayerSuccess(player));\r\n  dispatch(fetchGames(player.id, games.results));\r\n}\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { saveAs } from 'file-saver';\r\nimport { importPlayer, fetchPlayer } from \"../../Data/Player/playerActions\";\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n      this.props.getPlayerData(this.state.username);\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadJSON = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      rating,\r\n      rank,\r\n      registrationDate\r\n    } = this.props.player;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      results\r\n    } = this.props.games;\r\n\r\n    const jsonString = JSON.stringify({\r\n      player: {\r\n        id,\r\n        username,\r\n        rating,\r\n        rank,\r\n        registrationDate\r\n      },\r\n      games: {\r\n        start,\r\n        end,\r\n        results\r\n      }\r\n    });\r\n\r\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\r\n    saveAs(blob, `gotstats_${username}.json`);\r\n  }\r\n\r\n  readFile = (event) => {\r\n    const file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      this.readImportedJSON(evt.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  readImportedJSON = (jsonString) => {\r\n    const data = JSON.parse(jsonString);\r\n    this.props.history.push(`/user/${data.player.username}`)\r\n    this.props.importPlayerData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"input-group\">\r\n          <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n          <span className=\"input-group-btn\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n          </span>\r\n        </div>\r\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\r\n        <div>\r\n          <p className=\"d-flex justify-content-between\">\r\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\r\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\r\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  importPlayerData: data => dispatch(importPlayer(data)),\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous statistics\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <small className=\"tip help-block\"><em>*Mouse over/tap on a chart to see more info.</em></small>\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n\r\n          {quickLinks}\r\n\r\n          <hr />\r\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS</a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.results.length > 0 })\r\n\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage + 1}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import { getPlayerRank } from \"./utils\";\r\n\r\nfunction computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeOpponentsInfo(games, playerId) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { rank: 0 };\r\n\r\n  games.forEach(game => {\r\n    const { opponent } = extractPlayerAndOpponent(game, playerId);\r\n    const opponentRank = getPlayerRank(opponent);\r\n    if (isPlayerWin(game, playerId) && opponentRank > strongestDefeated.rank) {\r\n      strongestDefeated = {\r\n        ...opponent,\r\n        rank: opponentRank,\r\n        game,\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        ...opponent,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponentRank > strongestOpp.rank)\r\n      strongestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n\r\n    if (opponentRank < weakestOpp.rank)\r\n      weakestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n  });\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction extractPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = isPlayerWin(game, distributions.id);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nfunction computeMiscInfo(analyzingGames, player) {\r\n  let mostActiveDay;\r\n  let currentDay = new Date();\r\n  currentDay.setHours(0, 0, 0, 0);\r\n\r\n  let totalLosses = 0;\r\n\r\n  let longestStreak = { streak: 0 }\r\n  let currentStreak = { streak: 0 }\r\n\r\n  let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n  let biggestWin = { diff: 0 }\r\n\r\n  for (let game of analyzingGames) {\r\n\r\n    // Longest streak\r\n    if (isPlayerWin(game, player.id)) {\r\n\r\n      currentStreak.streak++;\r\n      currentStreak.start = game;\r\n\r\n      if (!currentStreak.end) currentStreak.end = game;\r\n\r\n      if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n    }\r\n    else currentStreak = { streak: 0 }\r\n\r\n    // Biggest win\r\n    if (isPlayerWin(game, player.id)) {\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      if (!isNaN(game.outcome.split(\" \")[0])) {\r\n        const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n        if (scoreDiff > biggestWin.diff) {\r\n          biggestWin = {\r\n            game: game,\r\n            opponent: opponent,\r\n            diff: scoreDiff\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Total losses\r\n    else totalLosses++;\r\n\r\n\r\n    // Most active day\r\n    let gameDay = new Date(game.ended);\r\n    gameDay.setHours(0, 0, 0, 0);\r\n    if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n      currentDay = gameDay;\r\n      gamesOnCurrentDay = 1;\r\n    }\r\n    else {\r\n      gamesOnCurrentDay++;\r\n    }\r\n\r\n    if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n      mostActiveDay = currentDay;\r\n      gamesOnMostActiveDay = gamesOnCurrentDay;\r\n    }\r\n  }\r\n\r\n  let memberSince = new Date(player.registrationDate);\r\n  // Change memberSince to date of first game for player who migrated from old server\r\n  if (analyzingGames.length) {\r\n    let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\r\n    if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n  }\r\n\r\n  let gamesPerDay = 0;\r\n  if (analyzingGames.length) {\r\n    let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n    let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n    gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n  }\r\n\r\n  const uniqueTournaments = analyzingGames\r\n    .filter(game => game.tournament !== null)\r\n    .reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []).length;\r\n\r\n  return {\r\n    memberSince,\r\n    gamesPerDay,\r\n    longestStreak,\r\n    mostActiveDay,\r\n    gamesOnMostActiveDay,\r\n    biggestWin,\r\n    uniqueTournaments,\r\n    totalLosses\r\n  }\r\n}\r\n\r\nfunction daysDifferenceBetween(day1, day2) {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  computeMiscInfo,\r\n  isPlayerWin,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Losses', `Wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 30 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from \"react\"\r\n\r\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\r\n\r\nexport default ExtLink;","import React from 'react';\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nimport { getPlayerRankDisplay } from \"../Data/utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (<ExtLink href={href}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { getPlayerRankDisplay, getPlayerRank } from \"../../Data/utils\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, gamesData.playerId);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Scored a triumphant victory against <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport moment from \"moment\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { gamesData, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments\r\n    } = Analyzer.computeMiscInfo(gamesData.games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to <GameLink game={longestStreak.end} /></span> : '';\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on <GameLink game={biggestWin.game} />.</li>\r\n    )\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\r\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          <li>Played in {uniqueTournaments} different tournaments.</li>\r\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n          {biggestWinDisplay}\r\n          {totalLosses >= 50 && (\r\n            <li>Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!</li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass DatePicker extends Component {\r\n  static propTypes = {\r\n    minDate: PropTypes.object.isRequired,\r\n    maxDate: PropTypes.object.isRequired,\r\n    changeStartDate: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    date: this.props.minDate\r\n  }\r\n\r\n  onDateChanged = (dates) => {\r\n    const date = dates[0];\r\n    this.setState({ date }, () => this.props.changeStartDate(this.state.date));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <label>Analyze games starting from</label>\r\n        <Flatpickr\r\n          value={this.state.date || \"\"}\r\n          className=\"form-control flatpickr-input\"\r\n          name=\"date\"\r\n          onChange={this.onDateChanged}\r\n          options={{\r\n            dateFormat: \"M d, Y\",\r\n            minDate: this.props.minDate,\r\n            maxDate: this.props.maxDate,\r\n            enableTime: false,\r\n            enableSeconds: false\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst mapReduxStateToProps = ({ games }) => ({\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || new Date()\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(DatePicker);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from \"./DatePicker\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { applyGameFilters } from \"../../Data/Charts/chartActions\";\r\n\r\nimport {\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"../../Data/Charts/chartActions\";\r\n\r\nclass ChartFilter extends Component {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired\r\n  }\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onStartDateChanged = (startDate) => this.onFilterChanged({ startDate });\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      endDate,\r\n      startDate,\r\n      ...changes\r\n    })\r\n  }\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\r\n    ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n    : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\r\n      </div>\r\n    )\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <DatePicker className=\"form-group col-sm-6 col-lg-4\" changeStartDate={this.onStartDateChanged} />\r\n          </div>\r\n        </div>\r\n        {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\r\n        {this.renderCheckBoxItems(boardSizeValues.values, boardSize, \"boardSize\", true)}\r\n        {this.renderCheckBoxItems(timeSettingsValues.values, timeSettings, \"timeSettings\")}\r\n        {this.renderCheckBoxItems(handicapValues.values, handicap, \"handicap\")}\r\n        {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\r\n        {this.renderCheckBoxItems(tournamentValues.values, tournament, \"tournament\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ ...chartsData })\r\nconst maxDispatchToProps = dispatch => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\nimport ChartFilter from '../GameFilters/ChartFilter';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredGamesData = this.createGameData(this.props.chartsData.results);\r\n    const allGamesData = this.createGameData(this.props.games.results);\r\n\r\n    const charts = filteredGamesData.games.length > 0 && (\r\n      <div>\r\n        <WinLoseChart\r\n          gamesData={filteredGamesData}\r\n        />\r\n        <ResultDistributionChart\r\n          title={`Game results distribution`}\r\n          id={\"game_results\"}\r\n          gamesData={filteredGamesData}\r\n          player={this.props.player}\r\n        />\r\n        {\r\n          this.props.chartsData.boardSize.length > 1 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          this.props.chartsData.timeSettings.length > 1 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        <hr />\r\n        <h2 id=\"total_games_stats\" className=\"text-center\">{`${filteredGamesData.games.length} of ${allGamesData.games.length} games match the filters`}</h2>\r\n\r\n        {charts}\r\n\r\n        {\r\n          allGamesData.games.length > 0 && (\r\n            <div>\r\n              <h2 className=\"all_time_title\">Lifetime Statistics</h2>\r\n              <OpponentChart\r\n                title={`Unique opponents faced`}\r\n                id={\"opponents_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n              <MiscChart\r\n                title={`Miscellaneous`}\r\n                id={\"misc_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/g0tStats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\n\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  player,\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: games.results.length > 0\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  rating: 0,\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nimport {\r\n  FETCH_PLAYER_START\r\n} from '../Player/playerActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return { ...initialState, fetching: state.fetching };\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 0,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER_START } from '../Player/playerActions';\r\n\r\nimport {\r\n  minDate,\r\n  maxDate,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"./chartActions\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values,\r\n  results: []\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return {\r\n      ...state,\r\n      ...payload\r\n    };\r\n\r\n    case FETCH_GAMES_START:\r\n    case FETCH_PLAYER_START:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataSourceReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}