{"version":3,"sources":["Data/utils.js","Statistics/Header/Header.jsx","Statistics/Welcome.jsx","OGSApi/OGSApi.js","Data/Charts/chartActions.js","Data/Games/gameActions.js","Data/Player/playerActions.js","Statistics/SideBar/SearchBox.jsx","Statistics/SideBar/QuickLinks.jsx","Statistics/SideBar/SideBar.jsx","Statistics/LoadingUser/LoadingUser.js","Data/Analyzer.js","Statistics/Charts/WinLoseChart.js","Statistics/Charts/ResultDistributionChart.js","Statistics/Charts/BoardSizesChart.js","Statistics/Charts/TimeSettingsChart.js","SharedComponents/ExtLink.jsx","SharedComponents/PlayerLink.jsx","SharedComponents/GameLink.jsx","Statistics/Charts/OpponentChart.js","Statistics/Charts/MiscChart.js","Statistics/GameFilters/ChartFilter.jsx","Statistics/Charts/GameHistoryChart.jsx","Statistics/Charts/ChartList.js","Statistics/Footer.jsx","Statistics/Statistics.jsx","App.jsx","serviceWorker.js","Data/Player/playerReducer.js","Data/Games/gameReducer.js","Data/Charts/chartDataReducer.js","Data/reducer.js","index.js","reduxStore/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","log","err","ranking","getPlayerRating","getPlayerRankDisplay","ratingToKyuDan","Header","pageTitle","this","props","username","concat","title","react_default","a","createElement","className","Helmet","href","process","src","alt","Component","connect","_ref","Welcome","fetchUserId","user","CancelablePromise","resolve","reject","isNaN","axios","get","configs","OGS_API_ROOT","then","res","data","results","length","id","catch","status","fetchUserDataById","fetchGamePage","playerId","url","undefined","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","colorValues","Black","White","handicapValues","Even","Taker","Giver","minDate","Date","maxDate","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","_getState$chartsData","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","Object","objectSpread","filterFunction","composeFilterFunction","updateChartDataSource","filter","game","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","players","black","getGameHandicapState","white","newData","type","payload","fetchGames","cachedGames","arguments","asyncToGenerator","regenerator_default","mark","_callee","fetchingPromise","latestId","fetchingPage","fetchingTotalPage","shouldContinueFetching","promise","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","fetching","cancel","fetchGamesStart","fetchGamesProgress","sent","Symbol","iterator","done","value","push","toConsumableArray","abrupt","t0","return","finish","ceil","count","setHours","fetchGamesSuccess","start","t1","console","error","fetchGamesFailure","stop","_x","_x2","apply","_ref3","fetchPlayer","_ref2","userIdPromise","userId","userDataPromise","userData","fetchPlayerStart","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","exporterVersion","SearchBox","state","updateSearchUser","event","_this","setState","target","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","_this$props$player","_this$props$games","jsonString","JSON","stringify","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","Scrollspy_default","items","map","currentClassName","SideBar","quickLinks","showQuickLinks","SideBar_QuickLinks","SideBar_SearchBox","rel","LoadingUser","_this$props","isFetchingPlayer","errorMessage","currentPage","totalPages","totalMessage","loadMessage","cx","cy","r","strokeWidth","fill","fetchError","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","isPlayerWin","white_lost","black_lost","assignGameResultToDistributions","distributions","isWin","outcome","split","points","parseFloat","pointDiff","daysDifferenceBetween","day1","day2","two","getFullYear","getMonth","getDate","one","days","getTime","Analyzer","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","forEach","computeWinLoseDistributions","Opp+Other","Opp+Count","Opp+Time","Opp+Res","Opp+40+","Opp+30+","Opp+20+","Opp+10+","Opp+0+","Plr+0+","Plr+10+","Plr+20+","Plr+30+","Plr+40+","Plr+Res","Plr+Time","Plr+Count","Plr+Other","reduce","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","computeOpponentsInfo","opponents","numberOfOpponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_extractHistoricalPla2","opponentRank","k","averageGamePerOpponent","toFixed","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","scoreDiff","gameDay","memberSince","firstGameDate","started","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","computeGameHistory","historicalWinloss","playerRating","_extractHistoricalPla","opponentRating","gameId","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","statistics","gamesData","chartData1","chartData2","chartData3","chartData4","index_esm","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","_this$generateChartDa","generateChartData","BoardSizesChart","alignment","sizes","chartData5","TimeSettingsChart","times","ExtLink","children","PlayerLink","OGS_ROOT","img","SharedComponents_ExtLink","GameLink","related","detail","moment","format","OpponentChart","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","SharedComponents_PlayerLink","SharedComponents_GameLink","MiscChart","_Analyzer$computeMisc","streakDurationDisplay","biggestWinDisplay","round","ChartFilter","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","defineProperty","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","renderCheckbox","defaultChecked","htmlFor","_this2","_this$props2","build_default","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","renderChartTooltip","insertCurrentRank","chartData","label","role","p","html","item","ChartList","filteredGamesData","createGameData","allGamesData","charts","Charts_GameHistoryChart","Charts_WinLoseChart","Charts_ResultDistributionChart","Charts_BoardSizesChart","Charts_TimeSettingsChart","GameFilters_ChartFilter","Charts_OpponentChart","Charts_MiscChart","Footer","Statistics","scrollIntoView","Statistics_Header_Header","Statistics_SideBar_SideBar","showLoading","Statistics_LoadingUser_LoadingUser","showStatistics","Charts_ChartList","Statistics_Welcome","Statistics_Footer","App","reduxStore","es","store","react_router_dom","react_router","path","component","match","src_Statistics_Statistics","params","exact","Boolean","location","hostname","initialState","reducer","combineReducers","playerReducer","gamesReducer","chartReducers","createStore","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e552b9f.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30)\r\n    return (30 - rank) + \"k\";\r\n  else\r\n    return (rank - 29) + \"d\";\r\n}\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.floor(\r\n      Math.log(rating / 850.0) / 0.032\r\n    );\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerUnroundedRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating\r\n    var rank = Math.log(rating / 850.0) / 0.032;\r\n    return rank;\r\n  }\r\n  catch (err) {\r\n    return player.ranking;\r\n  }\r\n}\r\n\r\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n}\r\n\r\nexport const ratingToKyuDan = (rating) => {\r\n  var rank = Math.floor(\r\n    Math.log(rating / 850.0) / 0.032\r\n  );\r\n  return rankNumberToKyuDan(rank);\r\n}\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n}\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\"\r\n}\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Data/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">Start by entering username into the search field to the right (case-sensitive).</p>\r\n    <p>You can also use userID: my profile page is <em>https://online-go.com/user/view/197819</em>, meaning my user ID is 197819.</p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nexport const fetchUserId = (user) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    if (isNaN(user)) { // Entered username\r\n      axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          if (data.results.length > 0) {\r\n            resolve(data.results[0].id);\r\n          }\r\n          else {\r\n            reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n          }\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    }\r\n    else {  // Entered user id\r\n      resolve(user);\r\n    }\r\n  });\r\n}\r\n\r\nexport const fetchUserDataById = (id) => {\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n      });\r\n  });\r\n}\r\n\r\n\r\nexport const fetchGamePage = (playerId, url) => {\r\n  if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n  return new CancelablePromise((resolve, reject) => {\r\n    axios.get(url)\r\n      .then(res => res.data)\r\n      .then(function (data) {\r\n        resolve(data);\r\n      })\r\n      .catch(function (err) {\r\n        reject(err);\r\n      });\r\n  });\r\n};","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState\r\n} from \"../utils\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const rankedValues = {\r\n  Ranked: \"Ranked\",\r\n  Unranked: \"Unranked\",\r\n  values: [\"Ranked\", \"Unranked\"]\r\n}\r\nexport const tournamentValues = {\r\n  Tournament: \"Tournament\",\r\n  NonTournament: \"Non-tournament\",\r\n  values: [\"Tournament\", \"Non-tournament\"]\r\n}\r\nexport const boardSizeValues = {\r\n  Nineteens: \"19x19\",\r\n  Thirteens: \"13x13\",\r\n  Nines: \"9x9\",\r\n  Others: \"Others\",\r\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"]\r\n}\r\nexport const timeSettingsValues = {\r\n  Blitz: \"Blitz\",\r\n  Live: \"Live\",\r\n  Correspondence: \"Correspondence\",\r\n  values: [\"Blitz\", \"Live\", \"Correspondence\"]\r\n}\r\nexport const colorValues = {\r\n  Black: \"Play as Black\",\r\n  White: \"Play as White\",\r\n  values: [\"Play as Black\", \"Play as White\"]\r\n}\r\nexport const handicapValues = {\r\n  Even: \"Even game\",\r\n  Taker: \"Handicap taker\",\r\n  Giver: \"Handicap giver\",\r\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"]\r\n}\r\n\r\nexport const minDate = new Date(-8640000000000000);\r\nexport const maxDate = new Date();\r\n\r\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\r\n\r\n  const playerId = getState().player.id;\r\n  const dateOfLastGame = getState().games.end;\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    limitEndDate\r\n  } = getState().chartsData;\r\n\r\n  const latestLimitEndDate = ((filters && filters.hasOwnProperty('limitEndDate')) ? filters.limitEndDate : limitEndDate);\r\n  const latestEndDate = ((filters && filters.hasOwnProperty('endDate')) ? filters.endDate : endDate);\r\n\r\n  const newEndDate = latestLimitEndDate\r\n    ? (latestEndDate < dateOfLastGame\r\n      ? latestEndDate\r\n      : dateOfLastGame)\r\n    : maxDate;\r\n\r\n  const filterFunctionParams = {\r\n    startDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId,\r\n    limitEndDate,\r\n    ...filters,\r\n    endDate: newEndDate\r\n  }\r\n\r\n  const filterFunction = composeFilterFunction(filterFunctionParams);\r\n\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...filterFunctionParams,\r\n      results: getState().games.results\r\n        .filter(filterFunction)\r\n    })\r\n  )\r\n}\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  color,\r\n  playerId\r\n}) => (game, index) => {\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return gameSatisfyRankedRule(game, ranked)\r\n    && gameSatisfyTournamentRule(game, tournament)\r\n    && gameSatisfyBoardSizeRule(game, boardSize)\r\n    && gameSatisfyTimeSettingsRule(game, timeSettings)\r\n    && gameSatisfyHandicapRule(game, handicap, playerId)\r\n    && gameSatisfyColorRule(game, color, playerId);\r\n}\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\r\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament)) return false;\r\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament)) return false;\r\n  return true;\r\n}\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n}\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n}\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n}\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black)) return false;\r\n  if (game.players.white.id === playerId && !color.includes(colorValues.White)) return false;\r\n  return true;\r\n}\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData\r\n});","import { fetchGamePage } from \"../../OGSApi/OGSApi\";\r\n\r\nimport { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nexport const FETCH_GAMES_START = \"FETCH_GAMES_START\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\r\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nexport const fetchGames = (playerId, cachedGames = []) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\r\n\r\n  try {\r\n    let games = [];\r\n    let fetchingPage = 0;\r\n    let data;\r\n    let fetchingTotalPage = 0;\r\n    let shouldContinueFetching = true;\r\n    do {\r\n      const promise = fetchGamePage(playerId, data ? data.next : undefined);\r\n      dispatch(fetchingPage === 0 ? fetchGamesStart(promise) : fetchGamesProgress({ promise, fetchingPage, fetchingTotalPage }))\r\n      data = await promise;\r\n      for (const game of data.results) {\r\n        if (game.id !== latestId) games.push(game);\r\n        else {\r\n          shouldContinueFetching = false;\r\n          games = [...games, ...cachedGames];\r\n          break;\r\n        }\r\n      }\r\n\r\n      fetchingPage++;\r\n      fetchingTotalPage = Math.ceil(data.count / 50);\r\n    } while (data.next && shouldContinueFetching)\r\n\r\n    let startDate = games.length ? new Date(games[games.length - 1].ended) : minDate;\r\n    startDate.setHours(0, 0, 0, 0);\r\n\r\n    dispatch(fetchGamesSuccess({\r\n      results: games,\r\n      start: startDate,\r\n      end: games.length ? new Date(games[0].ended) : maxDate,\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error))\r\n    else dispatch(fetchGamesFailure(\"An error has occured while fetching user games. Please try again later.\"));\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nexport const updateGames = (playerId) => async (dispatch, getState) => {\r\n\r\n}\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: FETCH_GAMES_START,\r\n  payload: promise\r\n})\r\n\r\nconst fetchGamesProgress = ({ promise, fetchingPage, fetchingTotalPage }) => ({\r\n  type: FETCH_GAMES_PROGRESS,\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage }\r\n})\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: FETCH_GAMES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FETCH_GAMES_FAILURE,\r\n  payload: { error }\r\n});","import { fetchUserId, fetchUserDataById } from \"../../OGSApi/OGSApi\";\r\nimport { fetchGames } from \"../Games/gameActions\";\r\n\r\nexport const FETCH_PLAYER_START = \"FETCH_PLAYER_START\";\r\nexport const FETCH_PLAYER_SUCCESS = \"FETCH_PLAYER_SUCCESS\";\r\nexport const FETCH_PLAYER_FAILURE = \"FETCH_PLAYER_FAILURE\";\r\n\r\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  dispatch(fetchPlayerSuccess(player));\r\n  dispatch(fetchGames(player.id, games.results));\r\n}\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  try {\r\n    const userIdPromise = fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: FETCH_PLAYER_START,\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: FETCH_PLAYER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FETCH_PLAYER_FAILURE,\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { saveAs } from 'file-saver';\r\nimport { importPlayer, fetchPlayer } from \"../../Data/Player/playerActions\";\r\n\r\nconst exporterVersion = 0;\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n      this.props.getPlayerData(this.state.username);\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadJSON = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      ratings,\r\n      rank,\r\n      registrationDate\r\n    } = this.props.player;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      results\r\n    } = this.props.games;\r\n\r\n    const jsonString = JSON.stringify({\r\n      exporterVersion,\r\n      player: {\r\n        id,\r\n        username,\r\n        ratings,\r\n        rank,\r\n        registrationDate\r\n      },\r\n      games: {\r\n        start,\r\n        end,\r\n        results\r\n      }\r\n    });\r\n\r\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\r\n    saveAs(blob, `gotstats_${username}.json`);\r\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\r\n  }\r\n\r\n  readFile = (event) => {\r\n    const file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      this.readImportedJSON(evt.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  readImportedJSON = (jsonString) => {\r\n    const data = JSON.parse(jsonString);\r\n    this.props.history.push(`/user/${data.player.username}`)\r\n    this.props.importPlayerData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-group\">\r\n          <div className=\"input-group\">\r\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n            <span className=\"input-group-btn\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\r\n\r\n        <div className=\"form-group\">\r\n          <p className=\"d-flex justify-content-between\">\r\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\r\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\r\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  importPlayerData: data => dispatch(importPlayer(data)),\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous information\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SearchBox from './SearchBox';\r\nimport QuickLinks from './QuickLinks';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SideBar extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired,\r\n    showQuickLinks: PropTypes.bool,\r\n    showDatePicker: PropTypes.bool,\r\n  }\r\n\r\n  render() {\r\n    const quickLinks = this.props.showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <small className=\"tip help-block\"><em>*Mouse over/tap on a chart to see more info.</em></small>\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          <SearchBox />\r\n\r\n          {quickLinks}\r\n\r\n          <hr />\r\n          <a href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support thread on OGS forum</a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ chartsData }) => ({ showQuickLinks: chartsData.results.length > 0 })\r\n\r\nexport default connect(mapReduxStateToProps)(SideBar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetchingPlayer,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages\r\n    } = this.props;\r\n\r\n    const totalMessage = totalPages ? ` of ${totalPages}` : \"\";\r\n    const loadMessage = isFetchingPlayer ? `Fetching user info from OGS` : `Fetching games result from OGS: page ${currentPage + 1}${totalMessage}`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle className=\"black_stone3\" cx=\"71.5\" cy=\"28.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone2\" cx=\"28.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone1\" cx=\"114.5\" cy=\"71.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"black_stone4\" cx=\"71.5\" cy=\"114.5\" r=\"19.5\" strokeWidth=\"0\" fill=\"#000000\" />\r\n          <circle className=\"white_stone\" cx=\"71.5\" cy=\"71.5\" r=\"20\" strokeWidth=\"0\" fill=\"#f8f8ff\" />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import { getPlayerRank, getPlayerRating } from \"./utils\";\r\n\r\nfunction computeWinLoseStatistics(games, playerId) {\r\n  var blackGames = 0, whiteGames = 0,\r\n    blackLosses = 0, whiteLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.players.black.id === playerId) {\r\n      blackGames++;\r\n      if (game.black_lost) {\r\n        blackLosses++;\r\n      }\r\n    }\r\n    else {\r\n      whiteGames++;\r\n      if (game.white_lost) {\r\n        whiteLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blackGames,\r\n    blackLosses,\r\n    whiteGames,\r\n    whiteLosses\r\n  }\r\n}\r\n\r\nfunction computeWinLoseDistributions(games, playerId) {\r\n  var distributions = {\r\n    \"id\": playerId,\r\n    \"Opp+Other\": 0,\r\n    \"Opp+Count\": 0,\r\n    \"Opp+Time\": 0,\r\n    \"Opp+Res\": 0,\r\n    \"Opp+40+\": 0,\r\n    \"Opp+30+\": 0,\r\n    \"Opp+20+\": 0,\r\n    \"Opp+10+\": 0,\r\n    \"Opp+0+\": 0,\r\n    \"Plr+0+\": 0,\r\n    \"Plr+10+\": 0,\r\n    \"Plr+20+\": 0,\r\n    \"Plr+30+\": 0,\r\n    \"Plr+40+\": 0,\r\n    \"Plr+Res\": 0,\r\n    \"Plr+Time\": 0,\r\n    \"Plr+Count\": 0,\r\n    \"Plr+Other\": 0\r\n  };\r\n\r\n  return games.reduce(assignGameResultToDistributions, distributions);\r\n}\r\n\r\nfunction computeBoardSizes(games, playerId) {\r\n  var nineteenGames = 0, thirteenGames = 0, nineGames = 0, otherGames = 0,\r\n    nineteenLosses = 0, thirteenLosses = 0, nineLosses = 0, otherLosses = 0;\r\n\r\n  games.forEach(game => {\r\n    if (game.width === 19 && game.height === 19) {\r\n      nineteenGames++;\r\n      if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n    }\r\n    else if (game.width === 13 && game.height === 13) {\r\n      thirteenGames++;\r\n      if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n    }\r\n    else if (game.width === 9 && game.height === 9) {\r\n      nineGames++;\r\n      if (!isPlayerWin(game, playerId)) nineLosses++;\r\n    }\r\n    else {\r\n      otherGames++;\r\n      if (!isPlayerWin(game, playerId)) otherLosses++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    nineteenGames, thirteenGames, nineGames, otherGames,\r\n    nineteenLosses, thirteenLosses, nineLosses, otherLosses\r\n  }\r\n}\r\n\r\nfunction computeTimeSettings(games, playerId) {\r\n  var blitzGames = 0, liveGames = 0, correspondenceGames = 0,\r\n    blitzLosses = 0, liveLosses = 0, correspondenceLosses = 0;\r\n  games.forEach(game => {\r\n    if (game.time_per_move < 20) {\r\n      blitzGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        blitzLosses++;\r\n      }\r\n    }\r\n    else if (game.time_per_move > 10800) {\r\n      correspondenceGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        correspondenceLosses++;\r\n      }\r\n    }\r\n    else {\r\n      liveGames++;\r\n      if (!isPlayerWin(game, playerId)) {\r\n        liveLosses++;\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    blitzGames, liveGames, correspondenceGames,\r\n    blitzLosses, liveLosses, correspondenceLosses\r\n  }\r\n}\r\n\r\nfunction computeGameHistory(games, player, insertCurrentRank = true) {\r\n  let historicalWinloss = [];\r\n\r\n  if (insertCurrentRank) {\r\n    historicalWinloss.push({\r\n      date: new Date(),\r\n      playerRating: getPlayerRating(player)\r\n    })\r\n  }\r\n\r\n  for (const game of games) {\r\n    const isWin = isPlayerWin(game, player.id);\r\n    const { historicalPlayer, historicalOpponent } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n    historicalWinloss.push(\r\n      {\r\n        isWin,\r\n        date: new Date(game.ended),\r\n        playerRating: getPlayerRating(historicalPlayer),\r\n        opponentRating: getPlayerRating(historicalOpponent),\r\n        gameId: game.id\r\n      }\r\n    )\r\n  }\r\n  return historicalWinloss;\r\n}\r\n\r\nfunction computeOpponentsInfo(games, player) {\r\n  var opponents = [], numberOfOpponents = 0;\r\n  var weakestOpp = { rank: 70 };\r\n  var strongestOpp = { rank: 0 };\r\n  var mostPlayed = { games: 0 };\r\n  var strongestDefeated = { ratingDiff: -9999 };\r\n\r\n\r\n  for (const game of games) {\r\n    const isWin = isPlayerWin(game, player.id);\r\n\r\n    const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n    const { historicalOpponent, historicalPlayer } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n    const opponentRank = getPlayerRank(opponent);\r\n\r\n    if (isWin) {\r\n      const ratingDiff = getPlayerRating(opponent) - getPlayerRating(player) + getPlayerRating(historicalOpponent) - getPlayerRating(historicalPlayer);\r\n      if (ratingDiff > strongestDefeated.ratingDiff) strongestDefeated = {\r\n        ...opponent,\r\n        ratingDiff,\r\n        game,\r\n      };\r\n    }\r\n\r\n    if (!opponents[opponent.id]) {\r\n      opponents[opponent.id] = 1;\r\n    }\r\n    else {\r\n      opponents[opponent.id]++;\r\n    }\r\n\r\n    if (opponents[opponent.id] > mostPlayed.games) {\r\n      mostPlayed = {\r\n        ...opponent,\r\n        games: opponents[opponent.id]\r\n      };\r\n    }\r\n\r\n    if (opponentRank > strongestOpp.rank)\r\n      strongestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n\r\n    if (opponentRank < weakestOpp.rank)\r\n      weakestOpp = {\r\n        ...opponent,\r\n        rank: opponentRank\r\n      };\r\n  }\r\n\r\n  numberOfOpponents = 0;\r\n  for (var k in opponents) {\r\n    if (opponents.hasOwnProperty(k)) {\r\n      numberOfOpponents++;\r\n    }\r\n  }\r\n\r\n  return {\r\n    strongestOpp,\r\n    weakestOpp,\r\n    mostPlayed,\r\n    strongestDefeated,\r\n    numberOfOpponents,\r\n    averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2)\r\n  }\r\n}\r\n\r\nfunction extractPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      player: game.players.black,\r\n      opponent: game.players.white\r\n    } : {\r\n      player: game.players.white,\r\n      opponent: game.players.black\r\n    }\r\n}\r\n\r\nfunction extractHistoricalPlayerAndOpponent(game, playerId) {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n      historicalPlayer: game.historical_ratings.black,\r\n      historicalOpponent: game.historical_ratings.white\r\n    } : {\r\n      historicalPlayer: game.historical_ratings.white,\r\n      historicalOpponent: game.historical_ratings.black\r\n    }\r\n}\r\n\r\nfunction isPlayerWin(game, playerId) {\r\n  return ((game.players.black.id === playerId && game.white_lost)\r\n    || (game.players.white.id === playerId && game.black_lost))\r\n}\r\n\r\nfunction assignGameResultToDistributions(distributions, game) {\r\n  const isWin = isPlayerWin(game, distributions.id);\r\n\r\n  if (game.outcome === \"Resignation\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Res`]++;\r\n  }\r\n  else if (game.outcome === \"Timeout\") {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Time`]++;\r\n  }\r\n  else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n    const pointDiff = Math.floor(points / 10);\r\n\r\n    var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n    result = `${isWin ? 'Plr' : 'Opp'}+${result}`;\r\n\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Count`]++;\r\n    distributions[result]++;\r\n  }\r\n  else {\r\n    distributions[`${isWin ? 'Plr' : 'Opp'}+Other`]++;\r\n  }\r\n\r\n  return distributions;\r\n}\r\n\r\nfunction computeMiscInfo(analyzingGames, player) {\r\n  let mostActiveDay;\r\n  let currentDay = new Date();\r\n  currentDay.setHours(0, 0, 0, 0);\r\n\r\n  let totalLosses = 0;\r\n\r\n  let longestStreak = { streak: 0 }\r\n  let currentStreak = { streak: 0 }\r\n\r\n  let gamesOnMostActiveDay = 0, gamesOnCurrentDay = 0;\r\n\r\n  let biggestWin = { diff: 0 }\r\n\r\n  for (let game of analyzingGames) {\r\n    const isWin = isPlayerWin(game, player.id);\r\n\r\n    // Longest streak\r\n    if (isWin) {\r\n\r\n      currentStreak.streak++;\r\n      currentStreak.start = game;\r\n\r\n      if (!currentStreak.end) currentStreak.end = game;\r\n\r\n      if (currentStreak.streak > longestStreak.streak) longestStreak = currentStreak;\r\n    }\r\n    else currentStreak = { streak: 0 }\r\n\r\n    // Biggest win\r\n    if (isWin) {\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      if (!isNaN(game.outcome.split(\" \")[0])) {\r\n        const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n        if (scoreDiff > biggestWin.diff) {\r\n          biggestWin = {\r\n            game: game,\r\n            opponent: opponent,\r\n            diff: scoreDiff\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Total losses\r\n    else totalLosses++;\r\n\r\n\r\n    // Most active day\r\n    let gameDay = new Date(game.ended);\r\n    gameDay.setHours(0, 0, 0, 0);\r\n    if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n      currentDay = gameDay;\r\n      gamesOnCurrentDay = 1;\r\n    }\r\n    else {\r\n      gamesOnCurrentDay++;\r\n    }\r\n\r\n    if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n      mostActiveDay = currentDay;\r\n      gamesOnMostActiveDay = gamesOnCurrentDay;\r\n    }\r\n  }\r\n\r\n  let memberSince = new Date(player.registrationDate);\r\n  // Change memberSince to date of first game for player who migrated from old server\r\n  if (analyzingGames.length) {\r\n    let firstGameDate = new Date(analyzingGames[analyzingGames.length - 1].started);\r\n    if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n  }\r\n\r\n  let gamesPerDay = 0;\r\n  if (analyzingGames.length) {\r\n    let dateOfFirstGame = new Date(analyzingGames[analyzingGames.length - 1].started)\r\n    let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n    gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n  }\r\n\r\n  const uniqueTournaments = analyzingGames\r\n    .filter(game => game.tournament !== null)\r\n    .reduce((result, game) => {\r\n      if (result.indexOf(game.tournament) === -1) {\r\n        result.push(game.tournament);\r\n      }\r\n\r\n      return result;\r\n    }, []).length;\r\n\r\n  return {\r\n    memberSince,\r\n    gamesPerDay,\r\n    longestStreak,\r\n    mostActiveDay,\r\n    gamesOnMostActiveDay,\r\n    biggestWin,\r\n    uniqueTournaments,\r\n    totalLosses\r\n  }\r\n}\r\n\r\nfunction daysDifferenceBetween(day1, day2) {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n}\r\n\r\nexport default {\r\n  computeWinLoseStatistics,\r\n  computeWinLoseDistributions,\r\n  computeBoardSizes,\r\n  computeTimeSettings,\r\n  computeOpponentsInfo,\r\n  computeMiscInfo,\r\n  isPlayerWin,\r\n  computeGameHistory\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n    footer: PropTypes.element\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 60 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: 'inout',\r\n        duration: 500,\r\n      },\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const statistics = Analyzer.computeWinLoseStatistics(this.props.gamesData.games, this.props.gamesData.playerId);\r\n    const chartData1 = [\r\n      ['Color', 'Games'],\r\n      ['Black', statistics.blackGames],\r\n      ['White', statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      ['Result', 'Games'],\r\n      ['Losses', (statistics.blackLosses + statistics.whiteLosses)],\r\n      ['Wins', (statistics.blackGames + statistics.whiteGames) - (statistics.blackLosses + statistics.whiteLosses)],\r\n    ];\r\n    const chartData3 = statistics.blackGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.blackLosses],\r\n      ['Wins', statistics.blackGames - statistics.blackLosses],\r\n    ] : null;\r\n    const chartData4 = statistics.whiteGames > 0 ? [\r\n      ['Result', 'Games'],\r\n      ['Losses', statistics.whiteLosses],\r\n      ['Wins', statistics.whiteGames - statistics.whiteLosses],\r\n    ] : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Total</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As Black</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">As White</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.subChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, chartsData }) => ({\r\n  playerId: player.id,\r\n  games: chartsData\r\n})\r\n\r\nexport default connect(mapReduxStateToProps)(WinLoseChart);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10, left: 0, right: 0 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const distributions = Analyzer.computeWinLoseDistributions(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Plr+Res\"]],\r\n        ['Timeout', distributions[\"Plr+Time\"]],\r\n        ['Scoring', distributions[\"Plr+Count\"]],\r\n        ['Other', distributions[\"Plr+Other\"]]\r\n      ],\r\n      chartData2: [\r\n        ['Result', 'Games'],\r\n        ['Resign', distributions[\"Opp+Res\"]],\r\n        ['Timeout', distributions[\"Opp+Time\"]],\r\n        ['Scoring', distributions[\"Opp+Count\"]],\r\n        ['Other', distributions[\"Opp+Other\"]]\r\n      ],\r\n      chartData3: [\r\n        ['Outcome', 'Losses', `Wins`],\r\n        ['40+', distributions[\"Opp+40+\"], null],\r\n        ['30+', distributions[\"Opp+30+\"], null],\r\n        ['20+', distributions[\"Opp+20+\"], null],\r\n        ['10+', distributions[\"Opp+10+\"], null],\r\n        ['0+', distributions[\"Opp+0+\"], null],\r\n        ['0+', null, distributions[\"Plr+0+\"]],\r\n        ['10+', null, distributions[\"Plr+10+\"]],\r\n        ['20+', null, distributions[\"Plr+20+\"]],\r\n        ['30+', null, distributions[\"Plr+30+\"]],\r\n        ['40+', null, distributions[\"Plr+40+\"]]\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Losses</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Wins</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-12\">\r\n                <h3 className=\"text-center\">Final scoring distribution</h3>\r\n                <Chart\r\n                  chartType=\"ColumnChart\"\r\n                  options={this.state.columnChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'300px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0\r\n      },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        alignment: 'center',\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const sizes = Analyzer.computeBoardSizes(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['19x19', sizes.nineteenGames],\r\n        ['13x13', sizes.thirteenGames],\r\n        ['9x9', sizes.nineGames],\r\n        ['Other', sizes.otherGames],\r\n      ],\r\n      chartData2: sizes.nineteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineteenLosses],\r\n        ['Wins', (sizes.nineteenGames - sizes.nineteenLosses)],\r\n      ] : null,\r\n      chartData3: sizes.thirteenGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.thirteenLosses],\r\n        ['Wins', (sizes.thirteenGames - sizes.thirteenLosses)],\r\n      ] : null,\r\n      chartData4: sizes.nineGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.nineLosses],\r\n        ['Wins', (sizes.nineGames - sizes.nineLosses)],\r\n      ] : null,\r\n      chartData5: sizes.otherGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', sizes.otherLosses],\r\n        ['Wins', (sizes.otherGames - sizes.otherLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-md-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">19x19</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">13x13</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">9x9</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData5 ? (\r\n              <div className=\"col-md-6\">\r\n                <h5 className=\"text-center\">Other Sizes</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData5}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nimport Analyzer from '../../Data/Analyzer';\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired\r\n  }\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0\r\n      },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const times = Analyzer.computeTimeSettings(gamesData.games, gamesData.playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        ['Size', 'Games'],\r\n        ['Blitz', times.blitzGames],\r\n        ['Live', times.liveGames],\r\n        ['Correspondence', times.correspondenceGames]\r\n      ],\r\n      chartData2: times.blitzGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.blitzLosses],\r\n        ['Wins', (times.blitzGames - times.blitzLosses)],\r\n      ] : null,\r\n      chartData3: times.liveGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.liveLosses],\r\n        ['Wins', (times.liveGames - times.liveLosses)],\r\n      ] : null,\r\n      chartData4: times.correspondenceGames > 0 ? [\r\n        ['Result', 'Games'],\r\n        ['Losses', times.correspondenceLosses],\r\n        ['Wins', (times.correspondenceGames - times.correspondenceLosses)],\r\n      ] : null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <div className=\"row\">\r\n          {\r\n            chartData1 ? (\r\n              <div className=\"col-sm-6 mr-auto ml-auto\">\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.mainChartOptions}\r\n                  data={chartData1}\r\n                  width={'100%'}\r\n                  height={'400px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {\r\n            chartData2 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Blitz</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData2}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData3 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Live</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData3}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            chartData4 ? (\r\n              <div className=\"col-md-4\">\r\n                <h5 className=\"text-center\">Correspondence</h5>\r\n                <Chart\r\n                  chartType=\"PieChart\"\r\n                  options={this.state.pieChartOptions}\r\n                  data={chartData4}\r\n                  width={'100%'}\r\n                  height={'250px'}\r\n                />\r\n              </div>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from \"react\"\r\n\r\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\r\n\r\nexport default ExtLink;","import React from 'react';\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nimport { getPlayerRankDisplay } from \"../Data/utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (<ExtLink href={href}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../OGSApi/configs.json\";\r\n\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { getPlayerRankDisplay, getPlayerRank } from \"../../Data/utils\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  generateChartData(gamesData) {\r\n    const opponentsInfo = Analyzer.computeOpponentsInfo(gamesData.games, this.props.player);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(opponentsInfo.weakestOpp)})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(opponentsInfo.strongestOpp)})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent\r\n    } = this.generateChartData(this.props.gamesData);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}: {numberOfOpponents}</h2>\r\n\r\n        <div className=\"row\">\r\n          <div id=\"opponents_polars_chart\" className=\"opponent_chart col-8 mr-auto ml-auto\">\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div><span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div><span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}>\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}>\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}>\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li><span></span><div><small><em>25k</em></small></div></li>\r\n              <li><span></span><div><small><em>10k</em></small></div></li>\r\n              <li><span></span><div><small><em>1d</em></small></div></li>\r\n              <li><span></span><div><small><em>9d</em></small></div></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in {mostPlayedDisp.games} games.\r\n              </li>\r\n              {\r\n                !!strongestDefeatedDisp.username &&\r\n                <li>Scored a triumphant victory against <PlayerLink player={strongestDefeatedDisp} /> on <GameLink game={strongestDefeatedDisp.game} />.</li>\r\n              }\r\n              <li>Average game per opponent: {averageGamePerOpponent} games.</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section >\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport moment from \"moment\";\r\n\r\nimport PlayerLink from \"../../SharedComponents/PlayerLink\";\r\nimport GameLink from \"../../SharedComponents/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#41CD64\", \"#5486d1\", \"#9d4dc5\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      hAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 } }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { gamesData, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments\r\n    } = Analyzer.computeMiscInfo(gamesData.games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? <span>, from <GameLink game={longestStreak.start} /> to <GameLink game={longestStreak.end} /></span> : '';\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>Biggest win: {biggestWin.diff} points victory against <PlayerLink player={biggestWin.opponent} /> on <GameLink game={biggestWin.game} />.</li>\r\n    )\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">{this.props.title}</h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          <li>Plays {Math.round(gamesPerDay * 100) / 100} games per day on average.</li>\r\n          <li>Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with {gamesOnMostActiveDay} finished games.</li>\r\n          <li>Played in {uniqueTournaments} different tournaments.</li>\r\n          <li>Longest win streak: {longestStreak.streak} wins in a row{streakDurationDisplay}.</li>\r\n          {biggestWinDisplay}\r\n          {totalLosses >= 50 && (\r\n            <li>Congratulations, <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\">you have lost your first 50 games</a>!</li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport 'flatpickr/dist/themes/material_red.css'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { applyGameFilters } from \"../../Data/Charts/chartActions\";\r\n\r\nimport {\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"../../Data/Charts/chartActions\";\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date();\r\n\r\nclass ChartFilter extends PureComponent {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    endDate: PropTypes.object.isRequired,\r\n    limitEndDate: PropTypes.bool.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired,\r\n  }\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`)).filter(input => input.checked).map(input => input.value)\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onToggleChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.checked;\r\n    this.onFilterChanged({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onDateChanged = (name, dates) => {\r\n    const date = dates[0];\r\n    this.onFilterChanged({ [name]: date });\r\n  }\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      endDate,\r\n      startDate,\r\n      ...changes\r\n    })\r\n  }\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) => subDivideCols\r\n    ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n    : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) => this.renderCheckbox(values, name, state, index))}\r\n      </div>\r\n    )\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input name={name} className=\"form-check-input\" type=\"checkbox\" id={`${name}_${index}`} value={state} defaultChecked={values.includes(state)} onChange={this.onCheckboxChanged} />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color\r\n    } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"form-group col-sm-6 col-lg-4\">\r\n              <label>Analyze games starting from</label>\r\n              <Flatpickr\r\n                value={this.props.startDate || \"\"}\r\n                className=\"form-control flatpickr-input\"\r\n                name=\"startDate\"\r\n                onChange={(dates) => this.onDateChanged('startDate', dates)}\r\n                options={{\r\n                  dateFormat: \"M d, Y\",\r\n                  minDate: this.props.minDate,\r\n                  maxDate: this.props.maxDate,\r\n                  enableTime: false,\r\n                  enableSeconds: false\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm-6 col-lg-4\">\r\n              <label className=\"form-check\">\r\n                <input name=\"limitEndDate\" className=\"form-check-input\" type=\"checkbox\" id=\"limit_endDate\" value=\"limitEndDate\" defaultChecked={this.props.limitEndDate} onChange={this.onToggleChanged} />\r\n                <label className=\"form-check-label\" htmlFor=\"limit_endDate\">{`limit end date${this.props.limitEndDate ? ' to' : ''}`}</label>\r\n              </label>\r\n              {\r\n                this.props.limitEndDate &&\r\n                <Flatpickr\r\n                  value={this.props.endDate || \"\"}\r\n                  className=\"form-control flatpickr-input\"\r\n                  name=\"endDate\"\r\n                  onChange={(dates) => this.onDateChanged('endDate', dates)}\r\n                  options={{\r\n                    dateFormat: \"M d, Y\",\r\n                    minDate: this.props.minDate,\r\n                    maxDate: this.props.maxDate,\r\n                    enableTime: false,\r\n                    enableSeconds: false\r\n                  }}\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\r\n        {this.renderCheckBoxItems(boardSizeValues.values, boardSize, \"boardSize\", true)}\r\n        {this.renderCheckBoxItems(timeSettingsValues.values, timeSettings, \"timeSettings\")}\r\n        {this.renderCheckBoxItems(handicapValues.values, handicap, \"handicap\")}\r\n        {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\r\n        {this.renderCheckBoxItems(tournamentValues.values, tournament, \"tournament\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\r\n  ...chartsData,\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || maxDate\r\n})\r\nconst maxDispatchToProps = dispatch => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Chart from 'react-google-charts';\r\n\r\nimport configs from '../../OGSApi/configs.json';\r\nimport Analyzer from '../../Data/Analyzer';\r\nimport { ratingToKyuDan } from \"../../Data/utils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nclass GameHistoryChart extends Component {\r\n  static propTypes = {\r\n    gamesData: PropTypes.shape({\r\n      playerId: PropTypes.number.isRequired,\r\n      games: PropTypes.array.isRequired\r\n    }).isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    insertCurrentRank: PropTypes.bool.isRequired\r\n  }\r\n\r\n  state = {\r\n    scatterPlotChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 50, left: 50, right: 5 },\r\n      colors: [\"#5486d1\", \"#d93344\", \"#41CD64\", \"#9d4dc5\"],\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14\r\n        }\r\n      },\r\n      series: [\r\n        { type: 'line' },\r\n        { type: 'scatter', pointShape: { type: 'triangle', rotation: 180 } },\r\n        { type: 'scatter', pointShape: { type: 'triangle' } }\r\n      ],\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: {\r\n          color: 'transparent', count: 2\r\n        }, format: 'MMM yy'\r\n      },\r\n      vAxis: { textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 }, gridlines: { count: 0 } },\r\n      tooltip: {\r\n        isHtml: true, trigger: 'selection'\r\n      }\r\n    }\r\n  }\r\n\r\n  renderChartTooltip = (isWin, date, playerRating, opponentRating, gameId) => opponentRating\r\n    ? `<h6><a href=\"${configs.OGS_ROOT}game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(date).format(\"MMM D, YYYY HH:mm\")}</a></h6>\r\n      <div class=\"${isWin ? 'text-green' : 'text-red'}\">${isWin ? 'Win' : 'Loss'}</div>\r\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>\r\n      <div>Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(opponentRating)})</div>`\r\n    : `<h6>Currently</h6>\r\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(playerRating)})</div>`\r\n\r\n  render() {\r\n    const historicalWinloss = Analyzer.computeGameHistory(this.props.gamesData.games, this.props.player, this.props.insertCurrentRank);\r\n\r\n    const chartData = [\r\n      [\r\n        'Date',\r\n        { type: 'number', label: 'Player Rating' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n        { type: 'number', label: 'Opponent Rating (Loss)' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n        { type: 'number', label: 'Opponent Rating (Win)' },\r\n        { 'type': 'string', 'role': 'tooltip', 'p': { 'html': true } },\r\n      ],\r\n      ...(\r\n        historicalWinloss.map(\r\n          item => [\r\n            item.date,\r\n            item.playerRating,\r\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\r\n            item.isWin ? null : item.opponentRating,\r\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\r\n            item.isWin ? item.opponentRating : null,\r\n            this.renderChartTooltip(item.isWin, item.date, item.playerRating, item.opponentRating, item.gameId),\r\n          ]\r\n        )\r\n      )\r\n    ]\r\n\r\n    return (<Chart\r\n      chartType=\"ComboChart\"\r\n      data={chartData}\r\n      options={this.state.scatterPlotChartOptions}\r\n      width={'100%'}\r\n      height={'400px'}\r\n    />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameHistoryChart;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from './WinLoseChart';\r\nimport ResultDistributionChart from './ResultDistributionChart';\r\nimport BoardSizesChart from './BoardSizesChart';\r\nimport TimeSettingsChart from './TimeSettingsChart';\r\nimport OpponentChart from './OpponentChart';\r\nimport MiscChart from './MiscChart';\r\nimport ChartFilter from '../GameFilters/ChartFilter';\r\nimport GameHistoryChart from './GameHistoryChart';\r\n\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired\r\n  }\r\n\r\n  createGameData(games) {\r\n    return {\r\n      playerId: this.props.player.id,\r\n      games: games\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filteredGamesData = this.createGameData(this.props.chartsData.results);\r\n    const allGamesData = this.createGameData(this.props.games.results);\r\n\r\n    const charts = filteredGamesData.games.length > 0 && (\r\n      <div>\r\n        <GameHistoryChart\r\n          gamesData={filteredGamesData}\r\n          player={this.props.player}\r\n          insertCurrentRank={!this.props.chartsData.limitEndDate} />\r\n\r\n        <WinLoseChart\r\n          gamesData={filteredGamesData}\r\n        />\r\n\r\n        <ResultDistributionChart\r\n          title={`Game results distribution`}\r\n          id={\"game_results\"}\r\n          gamesData={filteredGamesData}\r\n          player={this.props.player}\r\n        />\r\n        {\r\n          this.props.chartsData.boardSize.length > 1 && (\r\n            <BoardSizesChart\r\n              title={`Performance across board sizes`}\r\n              id={\"board_sizes_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          this.props.chartsData.timeSettings.length > 1 && (\r\n            <TimeSettingsChart\r\n              title={`Performance across time settings`}\r\n              id={\"time_settings_stats\"}\r\n              gamesData={filteredGamesData}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        <hr />\r\n        <h2 id=\"total_games_stats\" className=\"text-center\">{`${filteredGamesData.games.length} of ${allGamesData.games.length} games match the filters`}</h2>\r\n\r\n        {charts}\r\n\r\n        {\r\n          allGamesData.games.length > 0 && (\r\n            <div>\r\n              <h2 className=\"all_time_title\">Lifetime Statistics</h2>\r\n              <OpponentChart\r\n                title={`Unique opponents faced`}\r\n                id={\"opponents_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n              <MiscChart\r\n                title={`Miscellaneous`}\r\n                id={\"misc_stats\"}\r\n                gamesData={allGamesData}\r\n                player={this.props.player}\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({ chartsData, games, player });\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Welcome from './Welcome';\r\nimport SideBar from './SideBar/SideBar';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Data/Player/playerActions\";\r\n\r\nimport LoadingUser from './LoadingUser/LoadingUser';\r\nimport ChartList from './Charts/ChartList';\r\nimport Footer from './Footer';\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showLoading\r\n                ? <LoadingUser />\r\n                : this.props.showStatistics\r\n                  ? <ChartList />\r\n                  : <Welcome />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  player,\r\n  showLoading: !!player.fetching || !!player.fetchError || !!games.fetching || !!games.fetchError,\r\n  showStatistics: player.id > -1\r\n})\r\n\r\nconst mapReduxDispatchToProps = dispatch => ({\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default connect(mapReduxStateToProps, mapReduxDispatchToProps)(Statistics);\r\n","import React from 'react';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport Statistics from './Statistics/Statistics';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nconst App = ({ reduxStore }) => (\n  <ReduxProvider store={reduxStore}>\n    <Router>\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\n      <Route exact path=\"/\" component={Statistics} />\n    </Router>\n  </ReduxProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_PLAYER_START,\r\n  FETCH_PLAYER_SUCCESS,\r\n  FETCH_PLAYER_FAILURE\r\n} from './playerActions';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  ratings: 0,\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case FETCH_PLAYER_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_PLAYER_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  FETCH_GAMES_START,\r\n  FETCH_GAMES_SUCCESS,\r\n  FETCH_GAMES_FAILURE,\r\n  FETCH_GAMES_PROGRESS\r\n} from './gameActions';\r\n\r\nimport {\r\n  FETCH_PLAYER_START\r\n} from '../Player/playerActions';\r\n\r\nconst minDate = new Date(-8640000000000000);\r\nconst maxDate = new Date(8640000000000000);\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_PLAYER_START: return { ...initialState, fetching: state.fetching };\r\n\r\n    case FETCH_GAMES_START: return {\r\n      ...state,\r\n      fetching: payload,\r\n      fetchingPage: 0,\r\n      fetchingTotalPage: 0,\r\n      fetchError: \"\",\r\n      start: minDate,\r\n      end: maxDate\r\n    }\r\n\r\n    case FETCH_GAMES_PROGRESS: return {\r\n      ...state,\r\n      ...payload\r\n    }\r\n\r\n    case FETCH_GAMES_SUCCESS: return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload,\r\n    }\r\n\r\n    case FETCH_GAMES_FAILURE: return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES_START, FETCH_GAMES_SUCCESS } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER_START } from '../Player/playerActions';\r\n\r\nimport {\r\n  minDate,\r\n  maxDate,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues\r\n} from \"./chartActions\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values,\r\n  limitEndDate: false,\r\n  results: []\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE: return {\r\n      ...state,\r\n      ...payload\r\n    };\r\n\r\n    case FETCH_GAMES_START:\r\n    case FETCH_PLAYER_START:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    case FETCH_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        startDate: payload.start\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataReducer\";\r\n\r\nexport default combineReducers({\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createReduxStore } from './reduxStore/store';\n\nconst reduxStore = createReduxStore();\n\nReactDOM.render(\n  <App reduxStore={reduxStore} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"../Data/reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducer,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}